<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jason Antman's Blog</title><link href="http://blog.jasonantman.com/" rel="alternate"></link><link href="http://blog.jasonantman.com/feeds/tags/medical.atom.xml" rel="self"></link><id>http://blog.jasonantman.com/</id><updated>2007-12-27T01:46:00-05:00</updated><entry><title>openEPCR</title><link href="http://blog.jasonantman.com/2007/12/openepcr/" rel="alternate"></link><updated>2007-12-27T01:46:00-05:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2007-12-27:2007/12/openepcr/</id><summary type="html">&lt;p&gt;I&amp;#8217;ve been toying around for a while with the idea of creating a software
package for handling Electronic Patient Care Reports for &lt;span class="caps"&gt;EMS&lt;/span&gt; (Emergency
Medical Services) agencies. There are a few popular packages around, but
most of them are web-based. In the event of a disaster - or even bad
storm - when Internet connectivity is minimal to non-existent, frankly,
you&amp;#8217;re up the creek without a paddle. There are also, to my knowledge,
no Free/Open-Source (or free of cost) packages available. This isn&amp;#8217;t
good, especially with many states and regions moving to standardized
PCRs with electronic submission. This is even worse for the thousands
(or more) of purely volunteer &lt;span class="caps"&gt;EMS&lt;/span&gt; organizations out there, who have
little to no&amp;nbsp;budget.&lt;/p&gt;
&lt;p&gt;So, I&amp;#8217;ve started a project - &lt;a href="www.openepcr.org"&gt;openEPCR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I know that, for me, this is a *big* undertaking. I figured that Java
is the best option, since it&amp;#8217;s available on almost all platforms,
robust, and frankly is very well accepted. The idea is that such a
system should be able to cost *nothing* - so the target audience is
people using Linux (or &lt;span class="caps"&gt;BSD&lt;/span&gt; or Solaris) or an existing Windows
installation, along with a simple server - MySQL, PostgreSQL, or another
database, along with some web server running &lt;span class="caps"&gt;PHP&lt;/span&gt;. I&amp;#8217;ll admit that my
Java isn&amp;#8217;t what it used to be - but more to the point, frankly, if I&amp;#8217;m
the only person working on this, it&amp;#8217;ll take years to finish. So,
hopefully, when I get a more concrete plan, I&amp;#8217;ll be able to enlist some
other developers - especially someone more knowledgeable than me about
how best to deal with data caching (in the event - or certainty, as in
wireless or vehicular applications - of a loss of connectivity), mobile
devices, and &lt;span class="caps"&gt;HIPPA&lt;/span&gt;&amp;nbsp;compliance.&lt;/p&gt;
&lt;p&gt;The overall idea is to design a platform that is a base for an &lt;span class="caps"&gt;EPCR&lt;/span&gt; -
something that can handle data collection, printing a hard copy,
analysis, administration, security, etc. - and all the while be
organization-independent. In essence, a framework. Firstly, after having
this problem with &lt;a href="http://www.php-ems-tools.com"&gt;&lt;span class="caps"&gt;PHP&lt;/span&gt; &lt;span class="caps"&gt;EMS&lt;/span&gt; Tools&lt;/a&gt;, it
should all be designed with i18n/L10n in mind from the beginning,
providing good and easy support for translations. More importantly, all
settings should be configurable. To top off the problem, anything that&amp;#8217;s
obviously organization-specific - like the data set, layout of input
forms on the screen, reports on the data, printed copy (both blank and
filled-in), user access rights/&lt;span class="caps"&gt;RBAC&lt;/span&gt;, authentication methods, etc. -
should all be designed as pluggable modules. The end result would be a
system where a single organization or group of organizations can develop
- or pay to have developed - a &amp;#8220;module&amp;#8221; that includes all of this. The
license would have additional terms stating that any changes to the
code, modules, or updates to modules *must* be given back to the
openEPCR community. The general idea is something like this scenario:
the state of New Jersey decides to adopt a standardized &lt;span class="caps"&gt;PCR&lt;/span&gt; and data
set. Many volunteer ambulance squads don&amp;#8217;t have the funds for a
commercial solution. A bunch of them pool their resources or funds and
develop a &amp;#8220;module&amp;#8221; for openEPCR that provides everything required to
implement a printed and electronic version of the &lt;span class="caps"&gt;NJ&lt;/span&gt; state &lt;span class="caps"&gt;PCR&lt;/span&gt;. If a
single organization wishes to deviate, they can simply &amp;#8220;extend&amp;#8221; that
module as they see fit, building off of the main code. OpenEPCR itself
remains neutral, but provides a repository of modules to use or&amp;nbsp;modify.&lt;/p&gt;
&lt;p&gt;As I see it, there are three main&amp;nbsp;difficulties:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Designing something that&amp;#8217;s abstracted to such a great&amp;nbsp;degree.&lt;/li&gt;
&lt;li&gt;Dealing with data when we don&amp;#8217;t know the environment - we might be
    stand-alone, always connected to a single master database server,
    intermittently connected, or even connecting to a different server
    every&amp;nbsp;time.&lt;/li&gt;
&lt;li&gt;We want centralized administration - optimally, all custom data,
    settings, and organization-specific information (as well as updates
    to this) will be pushed out from a central server to all clients.
    But we need to assure security in an environment that is untrusted
    and may even be hostile - perhaps even hostile users - and balance
    the fact that some instances of the software may be actively
    collecting and recording data before they have been notified of a
    certain change or&amp;nbsp;update.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, if you think this sounds interesting, or have any suggestions - from
either the technical or &lt;span class="caps"&gt;EMS&lt;/span&gt; standpoint - please check out the &lt;a href="http://www.openepcr.org"&gt;project
homepage&lt;/a&gt; or drop me an
&lt;a href="mailto:jason@jasonantman.com"&gt;E-Mail&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Excerpted from the homepage is a bit of information on my&amp;nbsp;goals:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Project Mission:&lt;/strong&gt;
OpenEPCR aims to provide the Emergency Medical Services sector with a
Free (as in Freedom, a.k.a. Open-Source) Electronic Patient Care Report
(&lt;span class="caps"&gt;EPCR&lt;/span&gt;) software solution. Licensed under the &lt;a href="http://www.gnu.org/copyleft/gpl.html" title="http://www.gnu.org/copyleft/gpl.html"&gt;&lt;span class="caps"&gt;GNU&lt;/span&gt;
&lt;span class="caps"&gt;GPL&lt;/span&gt;&lt;/a&gt;,
it will be easily extendable by users&amp;#8217; organizations. Such a solution
does not currently exist. Furthermore, many states and regions are
moving to electronic data aggregation for &lt;span class="caps"&gt;EMS&lt;/span&gt;. OpenEPCR aims to provide
an easy way for organizations to adopt a standardized data set and
submit their data - and only the data that they choose - to a trusted
third party. The software will attempt to do all of this while paying
heed to applicable standards on privacy and security, as well as being
fully&amp;nbsp;platform-independent.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Project&amp;nbsp;Goals:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Provide &lt;em&gt;all&lt;/em&gt; code licensed under the &lt;span class="caps"&gt;GNU&lt;/span&gt; &lt;span class="caps"&gt;GPL&lt;/span&gt;, and make code as
    easy as possible to modify and&amp;nbsp;extend.&lt;/li&gt;
&lt;li&gt;Be fully platform-independent and database-independent, running in a
    platform-independent&amp;nbsp;language.&lt;/li&gt;
&lt;li&gt;Have &lt;span class="caps"&gt;NO&lt;/span&gt; reliance whatsoever on outside services i.e. be able to run
    in a disaster situation with a full communications&amp;nbsp;breakdown.&lt;/li&gt;
&lt;li&gt;Be designed with internationalization (i18n) and localization in
    mind, specifically with easy support for&amp;nbsp;translations.&lt;/li&gt;
&lt;li&gt;Have all data set, user information, rights/access management,
    authentication, and authorization abstracted, allowing
    organization-specified rules as well as various authentication means
    (central server, local file, passwords, hardware tokens, &lt;span class="caps"&gt;OTP&lt;/span&gt;,&amp;nbsp;etc.)&lt;/li&gt;
&lt;li&gt;Attempt to conform to &lt;span class="caps"&gt;HIPPA&lt;/span&gt; and other applicable standards governing
    security and&amp;nbsp;privacy.&lt;/li&gt;
&lt;li&gt;Allow all organizational data such as &lt;span class="caps"&gt;PCR&lt;/span&gt; forms, data sets,
    printable versions, etc. to operate as pluggable modules; changing
    the entire &lt;span class="caps"&gt;PCR&lt;/span&gt; structure should be as easy as adding a few new files
    and running a&amp;nbsp;script.&lt;/li&gt;
&lt;li&gt;Be designed with both the small, volunteer, virtually budget-less
    squad and the large paid organization in&amp;nbsp;mind.&lt;/li&gt;
&lt;li&gt;Run on a variety of devices including desktops, laptops, and mobile
    devices of all&amp;nbsp;flavors.&lt;/li&gt;
&lt;li&gt;Operate in environments including standalone, central server, ad-hoc
    network, and a network of distributed master&amp;nbsp;servers.&lt;/li&gt;
&lt;li&gt;Have the utmost regard to integrity of data - data loss or
    corruption is &lt;span class="caps"&gt;NOT&lt;/span&gt; an&amp;nbsp;option.&lt;/li&gt;
&lt;li&gt;Support virtually unlimited customization for an end-user&amp;nbsp;organization.&lt;/li&gt;
&lt;li&gt;Be designed with ease of extension in mind - it should be easy for
    end-user organizations to design custom add-ons that integrate
    fully, while conforming to the Access Control&amp;nbsp;model.&lt;/li&gt;
&lt;li&gt;Eventually, include support for administrative functions such as
    equipment/vehicle checks, scheduling, roster functionality,&amp;nbsp;etc.&lt;/li&gt;
&lt;li&gt;Eventually, consider creation of an integrated incident management
    system for patient, resource, and personnel&amp;nbsp;tracking.&lt;/li&gt;
&lt;li&gt;Be designed with as much space for custom software hooks as&amp;nbsp;possible.&lt;/li&gt;
&lt;li&gt;Attempt to pull together developers from various disciplines and
    gather suggestions from a vast sampling of the &lt;span class="caps"&gt;EMS&lt;/span&gt;&amp;nbsp;field.&lt;/li&gt;
&lt;/ol&gt;</summary><category term="emergency medical"></category><category term="EMS"></category><category term="free"></category><category term="healthcare"></category><category term="medical"></category><category term="open source"></category><category term="openepcr"></category><category term="patient care report"></category><category term="pcr"></category><category term="prehospital"></category></entry></feed>
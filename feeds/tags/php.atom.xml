<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jason Antman's Blog - PHP</title><link href="https://blog.jasonantman.com/" rel="alternate"></link><link href="https://blog.jasonantman.com/feeds/tags/php.atom.xml" rel="self"></link><id>https://blog.jasonantman.com/</id><updated>2012-09-04T05:00:00-04:00</updated><entry><title>Wordpress - Automatically publish a pending post each weekday morning from a PHP script</title><link href="https://blog.jasonantman.com/2012/09/wordpress-automatically-publish-a-pending-post-each-weekday-morning-from-a-php-script/" rel="alternate"></link><published>2012-09-04T05:00:00-04:00</published><updated>2012-09-04T05:00:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2012-09-04:/2012/09/wordpress-automatically-publish-a-pending-post-each-weekday-morning-from-a-php-script/</id><summary type="html">&lt;p&gt;In an earlier post, &lt;a href="/2012/08/piwik-web-analytics-and-some-unfortunate-stats-about-my-blog/"&gt;Piwik Web Analytics, and some unfortunate stats
about my
blog&lt;/a&gt;,
I mentioned that the &lt;a href="http://feedburner.google.com/"&gt;Feedburner&lt;/a&gt; stats
for this blog show a relatively high subscribe/unsubscribe rate for this
blog. I think a large part of that is my tendency to blog in spurts, and
even worse …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In an earlier post, &lt;a href="/2012/08/piwik-web-analytics-and-some-unfortunate-stats-about-my-blog/"&gt;Piwik Web Analytics, and some unfortunate stats
about my
blog&lt;/a&gt;,
I mentioned that the &lt;a href="http://feedburner.google.com/"&gt;Feedburner&lt;/a&gt; stats
for this blog show a relatively high subscribe/unsubscribe rate for this
blog. I think a large part of that is my tendency to blog in spurts, and
even worse, my tendency to write drafts and not publish them. In an
effort to combat this, I&amp;#8217;ve been trying to finish blog posts and then
set them to &amp;#8220;Pending&amp;#8221; status, and go back and publish one every day
(well, every day that I have some still sitting unpublished). Of course,
that counts on me logging in to Wordpress every day, which isn&amp;#8217;t
something I do. The following script is, at least for now, the answer
for&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;This script (a standalone &lt;span class="caps"&gt;PHP&lt;/span&gt; script) uses
&lt;a href="http://core.trac.wordpress.org/browser/trunk/wp-load.php"&gt;&lt;code&gt;wp-load.php&lt;/code&gt;&lt;/a&gt;
to load the wordpress environment, and then finds the oldest post with a
given status (&amp;#8220;pending&amp;#8221; in my case) and attempts to publish it. It only
does this if there has not been another post published in the last 24
hours. The following script can be found in Git at
&lt;a href="https://github.com/jantman/misc-scripts/blob/master/wordpress_daily_post.php"&gt;https://github.com/jantman/misc-scripts/blob/master/wordpress_daily_post.php&lt;/a&gt;&lt;/p&gt;
&lt;!---
sourceinclude
---&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;#!/usr/bin/php&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**&lt;/span&gt;
&lt;span class="sd"&gt; * wordpress_daily_post.php&lt;/span&gt;
&lt;span class="sd"&gt; * Script to publish the oldest post with a given status, if no&lt;/span&gt;
&lt;span class="sd"&gt; * other post has been published in 24 hours. Intended to be run&lt;/span&gt;
&lt;span class="sd"&gt; * via cron on weekdays.&lt;/span&gt;
&lt;span class="sd"&gt; *&lt;/span&gt;
&lt;span class="sd"&gt; * Copyright 2012 Jason Antman &lt;/span&gt;
&lt;span class="sd"&gt; *&lt;/span&gt;
&lt;span class="sd"&gt; * Licensed under the Apache License, Version 2.0 &lt;/span&gt;
&lt;span class="sd"&gt; *&lt;/span&gt;
&lt;span class="sd"&gt; * use it anywhere you want, however you want, provided that this header is left intact,&lt;/span&gt;
&lt;span class="sd"&gt; * and that if redistributed, credit is given to me.&lt;/span&gt;
&lt;span class="sd"&gt; *&lt;/span&gt;
&lt;span class="sd"&gt; * It is strongly requested, but not technically required, that any changes/improvements&lt;/span&gt;
&lt;span class="sd"&gt; * be emailed to the above address.&lt;/span&gt;
&lt;span class="sd"&gt; *&lt;/span&gt;
&lt;span class="sd"&gt; * The latest version of this script will always be available at:&lt;/span&gt;
&lt;span class="sd"&gt; * $HeadURL: http://svn.jasonantman.com/misc-scripts/wordpress_daily_post.php $&lt;/span&gt;
&lt;span class="sd"&gt; * $LastChangedRevision: 40 $&lt;/span&gt;
&lt;span class="sd"&gt; *&lt;/span&gt;
&lt;span class="sd"&gt; * Changelog:&lt;/span&gt;
&lt;span class="sd"&gt; * 2012-09-03 Jason Antman  - 1.0&lt;/span&gt;
&lt;span class="sd"&gt; *  - first version&lt;/span&gt;
&lt;span class="sd"&gt; */&lt;/span&gt;

&lt;span class="c1"&gt;# &lt;span class="caps"&gt;BEGIN&lt;/span&gt; &lt;span class="caps"&gt;CONFIGURATION&lt;/span&gt;&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;WP_LOAD_LOC&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/var/www/vhosts/blog.jasonantman.com/wp-load.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Configure this to the full path of your Wordpress wp-load.php&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SOURCE_POST_STATUS&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// post status to publish&lt;/span&gt;
&lt;span class="c1"&gt;# &lt;span class="caps"&gt;END&lt;/span&gt; &lt;span class="caps"&gt;CONFIGURATION&lt;/span&gt;&lt;/span&gt;

&lt;span class="nv"&gt;$&lt;span class="caps"&gt;VERBOSE&lt;/span&gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$DRY_RUN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;array_shift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-d&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;--dry-run&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nv"&gt;$DRY_RUN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;span class="caps"&gt;DRY&lt;/span&gt; &lt;span class="caps"&gt;RUN&lt;/span&gt; &lt;span class="caps"&gt;ONLY&lt;/span&gt; - &lt;span class="caps"&gt;NOT&lt;/span&gt; &lt;span class="caps"&gt;ACTUALLY&lt;/span&gt; &lt;span class="caps"&gt;PUBLISHING&lt;/span&gt;.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-v&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;--verbose&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nv"&gt;$&lt;span class="caps"&gt;VERBOSE&lt;/span&gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;WP_LOAD_LOC=&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WP_LOAD_LOC&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SOURCE_POST_STATUS=&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SOURCE_POST_STATUS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nb"&gt;array_shift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HTTP_HOST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// needed for wp-includes/ms-settings.php:100&lt;/span&gt;
&lt;span class="k"&gt;require_once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;WP_LOAD_LOC&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;# check that we&amp;#39;re running on a weekday&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;N&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;#  if($&lt;span class="caps"&gt;VERBOSE&lt;/span&gt;){ fwrite(&lt;span class="caps"&gt;STDERR&lt;/span&gt;, &amp;quot;today is a saturday or sunday, dieing.\n&amp;quot;); }&lt;/span&gt;
&lt;span class="c1"&gt;#  exit(1);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# find the publish date/time of the last published post&lt;/span&gt;
&lt;span class="nv"&gt;$published&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_posts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;numberposts&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;orderby&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;order&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;span class="caps"&gt;DESC&lt;/span&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;post_status&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;publish&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$published&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nv"&gt;$pub_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_date&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$pub_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;&lt;span class="caps"&gt;ID&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;strtotime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$pub_date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;86400&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$&lt;span class="caps"&gt;VERBOSE&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;last post (&lt;span class="caps"&gt;ID&lt;/span&gt; &lt;/span&gt;&lt;span class="si"&gt;$pub_id&lt;/span&gt;&lt;span class="s2"&gt;) within last day (&lt;/span&gt;&lt;span class="si"&gt;$pub_date&lt;/span&gt;&lt;span class="s2"&gt;). Nothing to do. Exiting.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$&lt;span class="caps"&gt;VERBOSE&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Found last post (&lt;span class="caps"&gt;ID&lt;/span&gt; &lt;/span&gt;&lt;span class="si"&gt;$pub_id&lt;/span&gt;&lt;span class="s2"&gt;) with post date &lt;/span&gt;&lt;span class="si"&gt;$pub_date&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;# find the earliest post of status SOURCE_POST_STATUS, if there is one.&lt;/span&gt;
&lt;span class="nv"&gt;$to_post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_posts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;numberposts&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;orderby&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;order&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;span class="caps"&gt;ASC&lt;/span&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;post_status&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;SOURCE_POST_STATUS&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$to_post&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;&lt;span class="caps"&gt;ID&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$to_pub_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_date&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$to_pub_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_title&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$new_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Y-m-d H:i:s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$now&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$new_date_gmt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gmdate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Y-m-d H:i:s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$now&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$&lt;span class="caps"&gt;VERBOSE&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Post to publish: &lt;span class="caps"&gt;ID&lt;/span&gt;=&lt;/span&gt;&lt;span class="si"&gt;$to_pub_id&lt;/span&gt;&lt;span class="s2"&gt; &lt;span class="caps"&gt;DATE&lt;/span&gt;=&lt;/span&gt;&lt;span class="si"&gt;$to_pub_date&lt;/span&gt;&lt;span class="s2"&gt; NEW_DATE=&lt;/span&gt;&lt;span class="si"&gt;$new_date&lt;/span&gt;&lt;span class="s2"&gt; &lt;span class="caps"&gt;TITLE&lt;/span&gt;=&lt;/span&gt;&lt;span class="si"&gt;$to_pub_title\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# actually publish it&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$DRY_RUN&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nv"&gt;$arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;span class="caps"&gt;ID&lt;/span&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$to_pub_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;post_status&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;publish&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$new_date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;post_date_gmt&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$new_date_gmt&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_update_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// publish the post&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;span class="caps"&gt;ERROR&lt;/span&gt;: Post &lt;/span&gt;&lt;span class="si"&gt;$to_pub_id&lt;/span&gt;&lt;span class="s2"&gt; was not successfully published.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$&lt;span class="caps"&gt;VERBOSE&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Published post. New &lt;span class="caps"&gt;ID&lt;/span&gt;: &lt;/span&gt;&lt;span class="si"&gt;$ret\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Dry run only, not publishing post.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# check that the post really was published&lt;/span&gt;
&lt;span class="nv"&gt;$published&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_posts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;numberposts&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;orderby&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;order&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;span class="caps"&gt;DESC&lt;/span&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;post_status&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;publish&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$published&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nv"&gt;$pub_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_date&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$pub_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;&lt;span class="caps"&gt;ID&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$pub_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_title&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$pub_guid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;guid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$pub_title&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;$to_pub_title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;span class="caps"&gt;ERROR&lt;/span&gt;: title of most recent post does not match title of what we wanted to post.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDOUT&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Published post &lt;/span&gt;&lt;span class="si"&gt;$pub_id&lt;/span&gt;&lt;span class="s2"&gt; at &lt;/span&gt;&lt;span class="si"&gt;$pub_date\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDOUT&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Title: &lt;/span&gt;&lt;span class="si"&gt;$pub_title\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDOUT&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n\n&lt;/span&gt;&lt;span class="s2"&gt; &lt;span class="caps"&gt;GUID&lt;/span&gt;/Link: &lt;/span&gt;&lt;span class="si"&gt;$pub_guid\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDOUT&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;__FILE__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; on &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;shell_exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hostname --fqdn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; running as &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;get_current_user&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You&amp;#8217;ll need to set &lt;code&gt;WP_LOAD_LOC&lt;/code&gt; (line 29) to the full path of your
Wordpress installation&amp;#8217;s &lt;code&gt;wp-load.php&lt;/code&gt; (it should be in the top-level
directory of your Wordpress installation. I run this script from cron&amp;nbsp;like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0 6 * * 1-5 /home/jantman/bin/wordpress_daily_post.php --verbose # publish &lt;span class="caps"&gt;WP&lt;/span&gt; pending posts daily
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;so that it runs at &lt;span class="caps"&gt;6AM&lt;/span&gt; (local time) each weekday. Assuming you have cron
setup to send you mail, you&amp;#8217;ll get a daily message saying what was (or
wasn&amp;#8217;t)&amp;nbsp;done.&lt;/p&gt;</content><category term="cron"></category><category term="PHP"></category><category term="wordpress"></category></entry><entry><title>Nagios / Icinga Configuration Highlighting with GeSHi</title><link href="https://blog.jasonantman.com/2012/02/nagios-icinga-configuration-highlighting-with-geshi/" rel="alternate"></link><published>2012-02-28T18:42:00-05:00</published><updated>2012-02-28T18:42:00-05:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2012-02-28:/2012/02/nagios-icinga-configuration-highlighting-with-geshi/</id><summary type="html">&lt;p&gt;As you may know from former posts, this blog
(&lt;a href="http://wordpress.org"&gt;WordPress&lt;/a&gt;-powered) and a few
&lt;a href="http://www.mediawiki.org"&gt;MediaWiki&lt;/a&gt; sites that I have use the
excellent &lt;span class="caps"&gt;PHP&lt;/span&gt;-based &lt;a href="http://qbnz.com/highlighter/"&gt;GeSHi&lt;/a&gt; syntax
highlighter. Today I was writing &lt;a href="/2012/02/sending-aim-messages-from-a-perl-script/"&gt;a
post&lt;/a&gt; that includes
some Icinga (Nagios) configuration snippets. After a quick search, I
found a &lt;a href="https://github.com/adepertat/geshi-nagios"&gt;Nagios language file …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;As you may know from former posts, this blog
(&lt;a href="http://wordpress.org"&gt;WordPress&lt;/a&gt;-powered) and a few
&lt;a href="http://www.mediawiki.org"&gt;MediaWiki&lt;/a&gt; sites that I have use the
excellent &lt;span class="caps"&gt;PHP&lt;/span&gt;-based &lt;a href="http://qbnz.com/highlighter/"&gt;GeSHi&lt;/a&gt; syntax
highlighter. Today I was writing &lt;a href="/2012/02/sending-aim-messages-from-a-perl-script/"&gt;a
post&lt;/a&gt; that includes
some Icinga (Nagios) configuration snippets. After a quick search, I
found a &lt;a href="https://github.com/adepertat/geshi-nagios"&gt;Nagios language file for
GeSHi&lt;/a&gt; on GitHub. Thanks very
much to &lt;a href="https://github.com/adepertat"&gt;Albéric de Pertat (adepertat)&lt;/a&gt;
for writing this and providing it to the&amp;nbsp;public.&lt;/p&gt;</content><category term="GeSHi"></category><category term="icinga"></category><category term="mediawiki"></category><category term="Nagios"></category><category term="PHP"></category><category term="wordpress"></category></entry><entry><title>PHP Script to Query Linode DNS Manager API</title><link href="https://blog.jasonantman.com/2012/01/php-script-to-query-linode-dns-manager-api/" rel="alternate"></link><published>2012-01-20T22:49:00-05:00</published><updated>2012-01-20T22:49:00-05:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2012-01-20:/2012/01/php-script-to-query-linode-dns-manager-api/</id><summary type="html">&lt;p&gt;I&amp;#8217;m in the process of moving all of my public-facing services, currently
hosted on a single
&lt;a href="http://www.linode.com/?r=5c8ad2931b410b55455aadbcf0a8d86d6f698a91"&gt;Linode&lt;/a&gt;,
to a new virtual machine (still with Linode, of course, just a new
CentOS 6 &lt;span class="caps"&gt;VM&lt;/span&gt;). Of course, I&amp;#8217;ve got a &lt;em&gt;lot&lt;/em&gt; (about 60) of &lt;span class="caps"&gt;DNS&lt;/span&gt; records,
spread across 8 domains …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I&amp;#8217;m in the process of moving all of my public-facing services, currently
hosted on a single
&lt;a href="http://www.linode.com/?r=5c8ad2931b410b55455aadbcf0a8d86d6f698a91"&gt;Linode&lt;/a&gt;,
to a new virtual machine (still with Linode, of course, just a new
CentOS 6 &lt;span class="caps"&gt;VM&lt;/span&gt;). Of course, I&amp;#8217;ve got a &lt;em&gt;lot&lt;/em&gt; (about 60) of &lt;span class="caps"&gt;DNS&lt;/span&gt; records,
spread across 8 domains, that point at the old machine. For name-based
vhosts in Apache, my usual procedure is to migrate everything over to
the new host and then change &lt;span class="caps"&gt;DNS&lt;/span&gt;, and once the change propagates (I&amp;#8217;m
using Linode&amp;#8217;s &lt;span class="caps"&gt;DNS&lt;/span&gt; hosting, so it makes things a &lt;span class="caps"&gt;LOT&lt;/span&gt; easier but I don&amp;#8217;t
have &lt;code&gt;rndc reload&lt;/code&gt; anymore) I test in a browser and, assuming all is
well, disable the vhost on the old server. To do all this, I need an
easy way to get a list of all the &lt;span class="caps"&gt;DNS&lt;/span&gt; records that still point to the
old&amp;nbsp;machine.&lt;/p&gt;
&lt;p&gt;Luckily, to augment their web-based control panel (Linode Manager),
Linode has a pretty full-featured &lt;a href="http://www.linode.com/api/"&gt;&lt;span class="caps"&gt;API&lt;/span&gt;&lt;/a&gt; with
bindings for Python, Perl, &lt;span class="caps"&gt;PHP&lt;/span&gt;, Ruby, Java and others. While I like
Python and I&amp;#8217;m starting to learn Perl (by trying to shift most of my
non-time-sensitive scripting to it) for my new job, &lt;span class="caps"&gt;PHP&lt;/span&gt; is still my
strongest language (and the majority of my existing administrative
scripting is written in it, especially handy when it comes time to add a
web front-end to things). So I wrote the following script to query
Linode&amp;#8217;s &lt;a href="http://www.linode.com/api/dns"&gt;&lt;span class="caps"&gt;DNS&lt;/span&gt; Manager &lt;span class="caps"&gt;API&lt;/span&gt;&lt;/a&gt; using &lt;a href="https://github.com/krmdrms/linode/"&gt;Kerem
Durmus&amp;#8217; Linode &lt;span class="caps"&gt;API&lt;/span&gt; &lt;span class="caps"&gt;PHP&lt;/span&gt; wrapper&lt;/a&gt;
(installation instructions and info at that Github link). The script
simply writes all Linode &lt;span class="caps"&gt;DNS&lt;/span&gt; records for all zones to a &lt;span class="caps"&gt;CSV&lt;/span&gt; file (this
could take a while if you have a lot of&amp;nbsp;records&amp;#8230;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;   *&lt;/span&gt;
&lt;span class="x"&gt;   * &lt;span class="caps"&gt;INSTALLATION&lt;/span&gt; (as per krmdrms &lt;span class="caps"&gt;README&lt;/span&gt;):&lt;/span&gt;
&lt;span class="x"&gt;   *  pear install Net_URL2-0.3.1&lt;/span&gt;
&lt;span class="x"&gt;   *  pear install HTTP_Request2-0.5.2&lt;/span&gt;
&lt;span class="x"&gt;   *  pear channel-discover pear.keremdurmus.com&lt;/span&gt;
&lt;span class="x"&gt;   *  pear install krmdrms/Services_Linode&lt;/span&gt;
&lt;span class="x"&gt;   *&lt;/span&gt;
&lt;span class="x"&gt;   * Also requires php-openssl / php5-openssl&lt;/span&gt;
&lt;span class="x"&gt;   *&lt;/span&gt;
&lt;span class="x"&gt;   * &lt;span class="caps"&gt;USAGE&lt;/span&gt;: php linodeDnsToCsv.php&lt;/span&gt;
&lt;span class="x"&gt;   *&lt;/span&gt;
&lt;span class="x"&gt;   * Copyright 2011 Jason Antman  , all rights reserved.&lt;/span&gt;
&lt;span class="x"&gt;   * This script is free for use by anyone anywhere, provided that you comply with the following terms:&lt;/span&gt;
&lt;span class="x"&gt;   * 1) Keep this notice and copyright statement intact.&lt;/span&gt;
&lt;span class="x"&gt;   * 2) Send any substantial changes, improvements or bog fixes back to me at the above address.&lt;/span&gt;
&lt;span class="x"&gt;   * 3) If you include this in a product or redistribute it, you notify me, and include my name in the credits or changelog.&lt;/span&gt;
&lt;span class="x"&gt;   *&lt;/span&gt;
&lt;span class="x"&gt;   * The following &lt;span class="caps"&gt;URL&lt;/span&gt; always points to the newest version of this script. If you obtained it from another source, you should&lt;/span&gt;
&lt;span class="x"&gt;   * check here:&lt;/span&gt;
&lt;span class="x"&gt;   * $HeadURL: http://svn.jasonantman.com/misc-scripts/linodeDnsToCsv.php $&lt;/span&gt;
&lt;span class="x"&gt;   * $LastChangedRevision: 25 $&lt;/span&gt;
&lt;span class="x"&gt;   *&lt;/span&gt;
&lt;span class="x"&gt;   * &lt;span class="caps"&gt;CHANGELOG&lt;/span&gt;:&lt;/span&gt;
&lt;span class="x"&gt;   * 2011-12-17 Jason Antman :&lt;/span&gt;
&lt;span class="x"&gt;   *    merged into my svn repo&lt;/span&gt;
&lt;span class="x"&gt;   * 2011-09-12 Jason Antman :&lt;/span&gt;
&lt;span class="x"&gt;   *    initial version of script&lt;/span&gt;
&lt;span class="x"&gt;   *&lt;/span&gt;
&lt;span class="x"&gt;   */&lt;/span&gt;

&lt;span class="x"&gt;require_once(&amp;quot;/var/www/linode_apikey.php&amp;quot;); // &lt;span class="caps"&gt;PHP&lt;/span&gt; file containing:   define(&amp;quot;API_KEY_LINODE&amp;quot;, &amp;quot;myApiKeyHere&amp;quot;);&lt;/span&gt;
&lt;span class="x"&gt;require_once(&amp;#39;Services/Linode.php&amp;#39;);&lt;/span&gt;

&lt;span class="x"&gt;// get list of all domains&lt;/span&gt;
&lt;span class="x"&gt;$domains = array(); // &lt;span class="caps"&gt;DOMAINID&lt;/span&gt; =&amp;gt; domain.tld&lt;/span&gt;
&lt;span class="x"&gt;try {&lt;/span&gt;
&lt;span class="x"&gt;  $linode = new Services_Linode(API_KEY_LINODE);&lt;/span&gt;
&lt;span class="x"&gt;  $result = $linode-&amp;gt;domain_list();&lt;/span&gt;

&lt;span class="x"&gt;  foreach($result[&amp;#39;&lt;span class="caps"&gt;DATA&lt;/span&gt;&amp;#39;] as $domain)&lt;/span&gt;
&lt;span class="x"&gt;    {&lt;/span&gt;
&lt;span class="x"&gt;      $domains[$domain[&amp;#39;&lt;span class="caps"&gt;DOMAINID&lt;/span&gt;&amp;#39;]] = $domain[&amp;quot;&lt;span class="caps"&gt;DOMAIN&lt;/span&gt;&amp;quot;];&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;catch (Services_Linode_Exception $e)&lt;/span&gt;
&lt;span class="x"&gt;{&lt;/span&gt;
&lt;span class="x"&gt;  echo $e-&amp;gt;getMessage();&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;

&lt;span class="x"&gt;$records = array(); // array of resource records&lt;/span&gt;
&lt;span class="x"&gt;$linode-&amp;gt;batching = true;&lt;/span&gt;
&lt;span class="x"&gt;foreach($domains as $id =&amp;gt; $name)&lt;/span&gt;
&lt;span class="x"&gt;{&lt;/span&gt;
&lt;span class="x"&gt;  $linode-&amp;gt;domain_resource_list(array(&amp;#39;DomainID&amp;#39; =&amp;gt; $id));&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;

&lt;span class="x"&gt;try {&lt;/span&gt;
&lt;span class="x"&gt;  $result = $linode-&amp;gt;batchFlush();&lt;/span&gt;

&lt;span class="x"&gt;  foreach($result as $batchPart)&lt;/span&gt;
&lt;span class="x"&gt;    {&lt;/span&gt;
&lt;span class="x"&gt;      foreach($batchPart[&amp;#39;&lt;span class="caps"&gt;DATA&lt;/span&gt;&amp;#39;] as $rrec)&lt;/span&gt;
&lt;span class="x"&gt;    {&lt;/span&gt;
&lt;span class="x"&gt;      if(! isset($records[$rrec[&amp;#39;&lt;span class="caps"&gt;DOMAINID&lt;/span&gt;&amp;#39;]])){ $records[$rrec[&amp;#39;&lt;span class="caps"&gt;DOMAINID&lt;/span&gt;&amp;#39;]] = array();}&lt;/span&gt;
&lt;span class="x"&gt;      $records[$rrec[&amp;#39;&lt;span class="caps"&gt;DOMAINID&lt;/span&gt;&amp;#39;]][$rrec[&amp;#39;&lt;span class="caps"&gt;RESOURCEID&lt;/span&gt;&amp;#39;]] = array(&amp;#39;name&amp;#39; =&amp;gt; $rrec[&amp;#39;&lt;span class="caps"&gt;NAME&lt;/span&gt;&amp;#39;], &amp;#39;type&amp;#39; =&amp;gt; $rrec[&amp;#39;&lt;span class="caps"&gt;TYPE&lt;/span&gt;&amp;#39;], &amp;#39;target&amp;#39; =&amp;gt; $rrec[&amp;#39;&lt;span class="caps"&gt;TARGET&lt;/span&gt;&amp;#39;]);&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;catch (Services_Linode_Exception $e)&lt;/span&gt;
&lt;span class="x"&gt;{&lt;/span&gt;
&lt;span class="x"&gt;  echo $e-&amp;gt;getMessage();&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;

&lt;span class="x"&gt;echo &amp;#39;&amp;quot;recid&amp;quot;,&amp;quot;domain&amp;quot;,&amp;quot;name&amp;quot;,&amp;quot;type&amp;quot;,&amp;quot;target&amp;quot;&amp;#39;.&amp;quot;\n&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt;foreach($domains as $id =&amp;gt; $name)&lt;/span&gt;
&lt;span class="x"&gt;{&lt;/span&gt;
&lt;span class="x"&gt;  foreach($records[$id] as $recid =&amp;gt; $arr)&lt;/span&gt;
&lt;span class="x"&gt;    {&lt;/span&gt;
&lt;span class="x"&gt;      echo &amp;#39;&amp;quot;&amp;#39;.$recid.&amp;#39;&amp;quot;,&amp;quot;&amp;#39;.$name.&amp;#39;&amp;quot;,&amp;quot;&amp;#39;.$arr[&amp;#39;name&amp;#39;].&amp;#39;&amp;quot;,&amp;quot;&amp;#39;.$arr[&amp;#39;type&amp;#39;].&amp;#39;&amp;quot;,&amp;quot;&amp;#39;.$arr[&amp;#39;target&amp;#39;].&amp;quot;\&amp;quot;\n&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;


&lt;span class="x"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That will print out a list containing the Linode &lt;span class="caps"&gt;DNS&lt;/span&gt; record id (recid),
domain, record name, type and&amp;nbsp;target:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;quot;recid&amp;quot;,&amp;quot;domain&amp;quot;,&amp;quot;name&amp;quot;,&amp;quot;type&amp;quot;,&amp;quot;target&amp;quot;
&amp;quot;137423&amp;quot;,&amp;quot;jasonantman.com&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&lt;span class="caps"&gt;TXT&lt;/span&gt;&amp;quot;,&amp;quot;v=spf1 mx:jasonantman.com -all&amp;quot;
&amp;quot;3597859&amp;quot;,&amp;quot;jasonantman.com&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&lt;span class="caps"&gt;MX&lt;/span&gt;&amp;quot;,&amp;quot;linode1.jasonantman.com&amp;quot;
&amp;quot;3488952&amp;quot;,&amp;quot;jasonantman.com&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;mx&amp;quot;,&amp;quot;linode2.jasonantman.com&amp;quot;
&amp;quot;3472952&amp;quot;,&amp;quot;jasonantman.com&amp;quot;,&amp;quot;blog&amp;quot;,&amp;quot;&lt;span class="caps"&gt;CNAME&lt;/span&gt;&amp;quot;,&amp;quot;linode1.jasonantman.com&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you want to, say, search for only records that include host
&amp;#8220;example&amp;#8221;, you could use grep and awk&amp;nbsp;like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;php linodeDnsToCsv.php &lt;span class="p"&gt;|&lt;/span&gt; grep linode1 &lt;span class="p"&gt;|&lt;/span&gt; grep -v &lt;span class="s1"&gt;&amp;#39;&amp;quot;linode1&amp;quot;,&amp;quot;a&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk -F , &lt;span class="s1"&gt;&amp;#39;{printf &amp;quot;%-27s %-20s %-7s %s\n&amp;quot;, $2, $3, $4, $5}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/&amp;quot;//g&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I hope this helps someone else out, and saves them a few minutes of&amp;nbsp;coding&amp;#8230;&lt;/p&gt;</content><category term="api"></category><category term="dns"></category><category term="linode"></category><category term="PHP"></category><category term="sysadmin"></category></entry><entry><title>WP-Syntax Plugin GeSHi Path Fix</title><link href="https://blog.jasonantman.com/2012/01/wp-syntax-plugin-geshi-path-fix/" rel="alternate"></link><published>2012-01-12T19:09:00-05:00</published><updated>2012-01-12T19:09:00-05:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2012-01-12:/2012/01/wp-syntax-plugin-geshi-path-fix/</id><summary type="html">&lt;p&gt;The &lt;a href="http://wordpress.org/extend/plugins/wp-syntax/"&gt;Wp-Syntax&lt;/a&gt; plugin
for &lt;a href="http://wordpress.org"&gt;WordPress&lt;/a&gt; provides syntax highlighting for
WordPress blogs via the &lt;a href="http://qbnz.com/highlighter"&gt;GeSHi&lt;/a&gt; &lt;span class="caps"&gt;PHP&lt;/span&gt; syntax
highlighter. Unfortunately, the plugin includes a builtin version of
GeSHi (currently 1.0.8.9) in &lt;code&gt;geshi/&lt;/code&gt;. As a result, not only are users
of the plugin not instructed to use the latest version …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The &lt;a href="http://wordpress.org/extend/plugins/wp-syntax/"&gt;Wp-Syntax&lt;/a&gt; plugin
for &lt;a href="http://wordpress.org"&gt;WordPress&lt;/a&gt; provides syntax highlighting for
WordPress blogs via the &lt;a href="http://qbnz.com/highlighter"&gt;GeSHi&lt;/a&gt; &lt;span class="caps"&gt;PHP&lt;/span&gt; syntax
highlighter. Unfortunately, the plugin includes a builtin version of
GeSHi (currently 1.0.8.9) in &lt;code&gt;geshi/&lt;/code&gt;. As a result, not only are users
of the plugin not instructed to use the latest version of GeSHi, but it
won&amp;#8217;t use a host-wide GeSHi installation that&amp;#8217;s already in the &lt;span class="caps"&gt;PHP&lt;/span&gt;
include path (i.e. &lt;code&gt;/usr/share/php/&lt;/code&gt;), like the the many &lt;a href="http://pkgs.org/search/?keyword=php-geshi&amp;amp;search_on=name&amp;amp;distro=0&amp;amp;arch=32-bit"&gt;php-geshi
packages&lt;/a&gt;
offered by repositories including
&lt;a href="http://fedoraproject.org/wiki/EPEL"&gt;&lt;span class="caps"&gt;EPEL&lt;/span&gt;&lt;/a&gt; (for Fedora, CentOS and&amp;nbsp;&lt;span class="caps"&gt;RHEL&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;The fix is quite simple. Just open &lt;code&gt;wp-syntax.php&lt;/code&gt; in the &lt;code&gt;wp-syntax/&lt;/code&gt;
plugin directory in your favorite text editor and change the GeSHi
include line (for &lt;span class="caps"&gt;WP&lt;/span&gt;-Syntax 0.9.12, this is line 53)&amp;nbsp;from:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;include_once(&amp;quot;geshi/geshi.php&amp;quot;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;include_once(&amp;quot;geshi.php&amp;quot;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you already have GeSHi installed in the &lt;span class="caps"&gt;PHP&lt;/span&gt; include path, just remove
the &lt;code&gt;geshi&lt;/code&gt; directory in your &lt;code&gt;wp-syntax/&lt;/code&gt; plugin directory, flush the
WordPress caches (if any), and load a page which uses GeSHi - it should
now use the host-wide version. If you want to still use a local version
for wp-syntax, you can move things around to where they &lt;em&gt;should&lt;/em&gt; be in
the &lt;code&gt;wp-syntax/&lt;/code&gt; plugin&amp;nbsp;directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mv geshi/geshi.php . &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; mv geshi/geshi/* geshi/ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rmdir geshi/geshi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note - if you&amp;#8217;re in a shared hosting environment, or are otherwise not
able to upgrade the php-geshi package on your server yourself, you might
not want to do&amp;nbsp;this.&lt;/p&gt;
&lt;p&gt;I also &lt;a href="http://wordpress.org/support/topic/wp-syntax-move-geshi-include-path-to-allow-use-with-host-wide-geshi?replies=1#post-2556903"&gt;posted about this in the WordPress support
forums&lt;/a&gt;.
Hopefully the &lt;span class="caps"&gt;WP&lt;/span&gt;-Syntax devs will include this change in the next&amp;nbsp;version&amp;#8230;&lt;/p&gt;</content><category term="GeSHi"></category><category term="PHP"></category><category term="syntax highlighting"></category><category term="wordpress"></category></entry><entry><title>Puppet Syntax Highlighting with GeSHi</title><link href="https://blog.jasonantman.com/2012/01/puppet-syntax-highlighting-with-geshi/" rel="alternate"></link><published>2012-01-11T12:32:00-05:00</published><updated>2012-01-11T12:32:00-05:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2012-01-11:/2012/01/puppet-syntax-highlighting-with-geshi/</id><summary type="html">&lt;p&gt;This blog is run on wordpress, and I also do quite a bit in &lt;span class="caps"&gt;PHP&lt;/span&gt;, so I&amp;#8217;m
familiar with the &lt;a href="http://qbnz.com/highlighter/"&gt;GeSHi&lt;/a&gt; syntax
highlighter. It&amp;#8217;s &lt;span class="caps"&gt;PHP&lt;/span&gt;-based, and can run both as a Wordpress plugin
(&lt;a href="http://wordpress.org/extend/plugins/wp-syntax/"&gt;&lt;span class="caps"&gt;WP&lt;/span&gt;-Syntax&lt;/a&gt;) and as a
&lt;span class="caps"&gt;PHP&lt;/span&gt; module. It also works quite well with the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This blog is run on wordpress, and I also do quite a bit in &lt;span class="caps"&gt;PHP&lt;/span&gt;, so I&amp;#8217;m
familiar with the &lt;a href="http://qbnz.com/highlighter/"&gt;GeSHi&lt;/a&gt; syntax
highlighter. It&amp;#8217;s &lt;span class="caps"&gt;PHP&lt;/span&gt;-based, and can run both as a Wordpress plugin
(&lt;a href="http://wordpress.org/extend/plugins/wp-syntax/"&gt;&lt;span class="caps"&gt;WP&lt;/span&gt;-Syntax&lt;/a&gt;) and as a
&lt;span class="caps"&gt;PHP&lt;/span&gt; module. It also works quite well with the MediaWiki &lt;a href="http://www.mediawiki.org/wiki/Extension:SyntaxHighlight_GeSHi"&gt;SyntaxHighlight
GeSHi&lt;/a&gt;&amp;nbsp;extension.&lt;/p&gt;
&lt;p&gt;Today I was documenting some &lt;a href="http://www.puppet.org"&gt;Puppet&lt;/a&gt; code in a
wiki, and realized that I didn&amp;#8217;t have syntax highlighting. Well, fellow
Linux sysadmin and puppetmaster Jason Hancock was nice enough to post on
his blog (&lt;a href="http://geek.jasonhancock.com/2011/10/14/puppet-syntax-highlighting-geshi/"&gt;Puppet Syntax Highlighting with
GeSHi&lt;/a&gt;)
that he&amp;#8217;s developed a GeSHi language file for Puppet, available from
&lt;a href="https://github.com/jasonhancock/geshi-language-files"&gt;GitHub&lt;/a&gt;. Many&amp;nbsp;thanks!&lt;/p&gt;</content><category term="GeSHi"></category><category term="mediawiki"></category><category term="PHP"></category><category term="puppet"></category><category term="wordpress"></category></entry><entry><title>php-suhosin syslog issues</title><link href="https://blog.jasonantman.com/2011/10/php-suhosin-syslog-issues/" rel="alternate"></link><published>2011-10-21T10:24:00-04:00</published><updated>2011-10-21T10:24:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2011-10-21:/2011/10/php-suhosin-syslog-issues/</id><summary type="html">&lt;p&gt;I just installed php-&lt;a href="http://www.hardened-php.net/suhosin/"&gt;suhosin&lt;/a&gt;
0.9.29 from &lt;span class="caps"&gt;EPEL&lt;/span&gt; on a CentOS 5.6 box. I&amp;#8217;m running a whole bunch of
name-based vhosts in Apache, and have a bunch of web apps, so I opted to
run suhosin in simulation mode (don&amp;#8217;t actually block anything, but log …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I just installed php-&lt;a href="http://www.hardened-php.net/suhosin/"&gt;suhosin&lt;/a&gt;
0.9.29 from &lt;span class="caps"&gt;EPEL&lt;/span&gt; on a CentOS 5.6 box. I&amp;#8217;m running a whole bunch of
name-based vhosts in Apache, and have a bunch of web apps, so I opted to
run suhosin in simulation mode (don&amp;#8217;t actually block anything, but log
errors) and have it log via syslog to a single file. Unfortunately, when
I configured this, the syslog messages started showing up in the wrong
place, apparently with the wrong facility &lt;em&gt;and&lt;/em&gt; priority. After some
roundabout debugging (at first assuming syslogd to be the problem), I
determined that, for whatever really strange reason (perhaps an
incorrect syslog.h on the &lt;span class="caps"&gt;EPEL&lt;/span&gt; box that built the suhosin package?) the
LOG_* constants were incorrect. I looked up the correct integer values
in &lt;code&gt;/usr/include/sys/syslog.h&lt;/code&gt; and the following configuration
directives accomplished the task&amp;nbsp;correctly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;suhosin.log.syslog.facility&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;128&lt;/span&gt;
&lt;span class="c1"&gt;; 128 = LOG_LOCAL0&lt;/span&gt;

&lt;span class="na"&gt;suhosin.log.syslog.priority&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;5&lt;/span&gt;
&lt;span class="c1"&gt;; 5 = LOG_NOTICE&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This one line puts suhosin into simulation mode, where it only logs
errors instead of enforcing on&amp;nbsp;them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;suhosin.simulation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;On&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="centos"></category><category term="logging"></category><category term="PHP"></category><category term="security"></category><category term="suhosin"></category><category term="syslog"></category></entry><entry><title>Managing Ubiquiti Networks MAC ACLs from a script</title><link href="https://blog.jasonantman.com/2011/01/managing-ubiquiti-networks-mac-acls-from-a-script/" rel="alternate"></link><published>2011-01-06T16:06:00-05:00</published><updated>2011-01-06T16:06:00-05:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2011-01-06:/2011/01/managing-ubiquiti-networks-mac-acls-from-a-script/</id><summary type="html">&lt;p&gt;I have a small web-based tool for allowing members of an organization to
register their wireless &lt;span class="caps"&gt;MAC&lt;/span&gt; addresses, and then automatically adding
them to the &lt;span class="caps"&gt;MAC&lt;/span&gt; &lt;span class="caps"&gt;ACL&lt;/span&gt; on &lt;a href="http://www.ubnt.com"&gt;Ubiquiti&lt;/a&gt; AirOSv2 APs. It&amp;#8217;s
a pretty quick hack, along with a simple and ugly web-based tool, but it
gets the job …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have a small web-based tool for allowing members of an organization to
register their wireless &lt;span class="caps"&gt;MAC&lt;/span&gt; addresses, and then automatically adding
them to the &lt;span class="caps"&gt;MAC&lt;/span&gt; &lt;span class="caps"&gt;ACL&lt;/span&gt; on &lt;a href="http://www.ubnt.com"&gt;Ubiquiti&lt;/a&gt; AirOSv2 APs. It&amp;#8217;s
a pretty quick hack, along with a simple and ugly web-based tool, but it
gets the job done for a non-profit with only 25 people. After &lt;a href="http://www.ubnt.com/forum/showthread.php?t=21133"&gt;posting
about it on the Ubiquiti
forum&lt;/a&gt; and getting a
request from someone for the code, I decided to put it out there for
anyone who wants it. The script is mostly based on SCPing configs to and
from the &lt;span class="caps"&gt;AP&lt;/span&gt; and SSHing in to run commands, and will need passwordless
public key auth to the&amp;nbsp;&lt;span class="caps"&gt;AP&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The code itself is in subversion at
&lt;a href="https://github.com/jantman/misc-scripts/tree/master/ubiquiti-mac-acl"&gt;https://github.com/jantman/misc-scripts/tree/master/ubiquiti-mac-acl&lt;/a&gt;.
It&amp;#8217;s composed of four&amp;nbsp;files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jantman/misc-scripts/blob/master/ubiquiti-mac-acl/updateAPconfigs.php.inc"&gt;updateAPconfigs.php.inc&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;the main &lt;span class="caps"&gt;PHP&lt;/span&gt; file with three functions for working with the&amp;nbsp;APs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jantman/misc-scripts/blob/master/ubiquiti-mac-acl/wirelessTools.php"&gt;wirelessTools.php&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;My &lt;span class="caps"&gt;PHP&lt;/span&gt; page for users to add MACs. It&amp;#8217;s pretty rough and is mostly
based on handling our &lt;span class="caps"&gt;LDAP&lt;/span&gt; authentication/group framework, but it
gives a fair example of how I store MACs in a MySQL table and then
rebuild a given &lt;span class="caps"&gt;AP&lt;/span&gt; config file with the current list of MACs. I
doubt it will be useful to anyone else as more than an&amp;nbsp;example.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jantman/misc-scripts/blob/master/ubiquiti-mac-acl/wireless.sql"&gt;wireless.sql&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;The schema for the &lt;span class="caps"&gt;SQL&lt;/span&gt; database I use to store&amp;nbsp;MACs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jantman/misc-scripts/blob/master/ubiquiti-mac-acl/README.txt"&gt;&lt;span class="caps"&gt;README&lt;/span&gt;.txt&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Readme file including some warnings on the lack of error checking
in the&amp;nbsp;functions.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hopefully this will be of some use to someone. I should probably mention
two important things here. First, the &lt;span class="caps"&gt;AP&lt;/span&gt; only accepts up to 32 &lt;span class="caps"&gt;MAC&lt;/span&gt;
addresses, so if you feed the &lt;code&gt;makeNewConfigFile()&lt;/code&gt; function an array
with more than 32, it will just stop at the 32&lt;sup&gt;nd&lt;/sup&gt;. Also, be aware, this
SCPs a config file to the &lt;span class="caps"&gt;AP&lt;/span&gt;, runs &lt;code&gt;cfgmtd&lt;/code&gt; and the reboots the &lt;span class="caps"&gt;AP&lt;/span&gt;. If
you send it a bad config file, who knows what will happen. If you allow
your users to add &lt;span class="caps"&gt;MAC&lt;/span&gt; addresses, your APs will reboot every time someone
adds&amp;nbsp;one.&lt;/p&gt;
&lt;p&gt;All I ask is that if you use this, leave a comment to thank me, and if
you make any changes/additions/bugfixes, please send them back to&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;Also, I have some &lt;a href="/2010/03/nagios-check-scripts/"&gt;Nagios check scripts&lt;/a&gt;
that are useful for Ubiquiti&amp;nbsp;APs.&lt;/p&gt;</content><category term="airos"></category><category term="mac"></category><category term="PHP"></category><category term="security"></category><category term="ubiquiti"></category><category term="wap"></category><category term="wireless"></category></entry><entry><title>Documentation generation for web apps - PHP and JavaScript</title><link href="https://blog.jasonantman.com/2010/08/documentation-generation-for-web-apps-php-and-javascript/" rel="alternate"></link><published>2010-08-26T08:10:00-04:00</published><updated>2010-08-26T08:10:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2010-08-26:/2010/08/documentation-generation-for-web-apps-php-and-javascript/</id><summary type="html">&lt;p&gt;Recently I&amp;#8217;ve been making some changes to a relatively complex ePCR
(electronic patient care report) program that I wrote for the &lt;a href="http://www.midlandparkambulance.com"&gt;ambulance
corps&lt;/a&gt;. It&amp;#8217;s a web application
(available only on our &lt;span class="caps"&gt;LAN&lt;/span&gt;, of course) written in &lt;span class="caps"&gt;PHP&lt;/span&gt;, with a relatively
large chunk of custom javascript to provide Ajax …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently I&amp;#8217;ve been making some changes to a relatively complex ePCR
(electronic patient care report) program that I wrote for the &lt;a href="http://www.midlandparkambulance.com"&gt;ambulance
corps&lt;/a&gt;. It&amp;#8217;s a web application
(available only on our &lt;span class="caps"&gt;LAN&lt;/span&gt;, of course) written in &lt;span class="caps"&gt;PHP&lt;/span&gt;, with a relatively
large chunk of custom javascript to provide Ajax/&lt;span class="caps"&gt;DHTML&lt;/span&gt; functions. Most
of the &lt;span class="caps"&gt;PHP&lt;/span&gt; code was already documented and processed with
&lt;a href="http://www.phpdoc.org/"&gt;phpDocumentor&lt;/a&gt; (phpdoc) to generate &lt;span class="caps"&gt;API&lt;/span&gt;
documentation. However, since so much of the functionality is
&lt;span class="caps"&gt;DHTML&lt;/span&gt;-based, there was a lot of looking back to the JavaScript source to
figure out what was called&amp;nbsp;where.&lt;/p&gt;
&lt;p&gt;My search for a true multi-language documentation generator was
relatively fruitless. There&amp;#8217;s
&lt;a href="http://www.stack.nl/~dimitri/doxygen/"&gt;doxygen&lt;/a&gt; but that needed a Perl
helper script for javascript files. Since virtually all of the code,
both &lt;span class="caps"&gt;PHP&lt;/span&gt; and JavaScript, is purely procedural, I was really only
concerned about docblocks and the functions they&amp;nbsp;precede.&lt;/p&gt;
&lt;p&gt;Luckily, it occurred to me that JavaScript is pretty close in syntax to
&lt;span class="caps"&gt;PHP&lt;/span&gt;, and I tend to write them with exactly the same style. A little
research showed that phpdoc can more or less handle javascript code,
with a few&amp;nbsp;caveats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The code needs to parse as &lt;span class="caps"&gt;PHP&lt;/span&gt;, so things like inline functions mess
    it&amp;nbsp;up.&lt;/li&gt;
&lt;li&gt;The default phpDocumentor ini file doesn&amp;#8217;t recognize files with
    &lt;code&gt;.js&lt;/code&gt; extensions.&lt;/li&gt;
&lt;li&gt;The files need to have a &amp;lt;?php at the&amp;nbsp;top.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Noting this, I wrote a small script that iterates through a directory of
&lt;code&gt;.js&lt;/code&gt; files, parses them line by line, pulls out only the function
declarations (which, hopefully, don&amp;#8217;t also have code on the same line)
and docblocks, and writes the output (with a &amp;lt;?php at the top) to a
same-named file in a different&amp;nbsp;directory.&lt;/p&gt;
&lt;p&gt;The script obviously requires phpdoc to be installed, and also requires
you to edit the phpDocumentor.ini file (installed with &lt;span class="caps"&gt;PEAR&lt;/span&gt; on my system
at &lt;code&gt;/usr/share/php5/PEAR/data/PhpDocumentor/phpDocumentor.ini&lt;/code&gt;) and add
a &amp;#8220;js&amp;#8221; line to the &lt;code&gt;[_phpDocumentor_phpfile_exts]&lt;/code&gt; section to get phpdoc
to recognize &lt;code&gt;*.js&lt;/code&gt; files.&lt;/p&gt;
&lt;p&gt;I was easily able to integrate this with a Makefile rule and create a
single set of cross-linked phpdoc &lt;span class="caps"&gt;API&lt;/span&gt; docs including both &lt;span class="caps"&gt;JS&lt;/span&gt; and &lt;span class="caps"&gt;PHP&lt;/span&gt;
files. I also added explicit package names (like &amp;#8220;-&lt;span class="caps"&gt;PHP&lt;/span&gt;&amp;#8221; and &amp;#8220;-&lt;span class="caps"&gt;JS&lt;/span&gt;&amp;#8221;) to
keep things separated a&amp;nbsp;little.&lt;/p&gt;
&lt;p&gt;The script can be found at:
&lt;a href="https://github.com/jantman/misc-scripts/blob/master/js2phpdoc.php"&gt;https://github.com/jantman/misc-scripts/blob/master/js2phpdoc.php&lt;/a&gt;.
It&amp;#8217;s (obviously) free for any use, provided that you follow the license
terms (leave copyrights intact, send modifications back to me, and
update the changelog if you modify&amp;nbsp;it).&lt;/p&gt;
&lt;p&gt;My Makefile rule (which uses a temp directory to both keep the generated
files separate from the source and keep the file paths as seen by phpdoc
the same as the actual&amp;nbsp;source):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;.&lt;span class="caps"&gt;PHONY&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;docs&lt;/span&gt;

&lt;span class="nf"&gt;docs&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        mkdir -p temp/js
        bin/js2phpdoc.php js/ temp/js/
        cp -r inc temp/
        cp *.php temp/
        phpdoc -c docs/default.ini
        rm -Rf temp
&lt;/pre&gt;&lt;/div&gt;</content><category term="documentation"></category><category term="javascript"></category><category term="PHP"></category><category term="web programming"></category></entry><entry><title>PHP Script to Dump Firefox Session</title><link href="https://blog.jasonantman.com/2010/08/php-script-to-dump-firefox-session/" rel="alternate"></link><published>2010-08-17T21:17:00-04:00</published><updated>2010-08-17T21:17:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2010-08-17:/2010/08/php-script-to-dump-firefox-session/</id><summary type="html">&lt;p&gt;If you&amp;#8217;re anything like me, you often find yourself working on multiple
computers. Today I left a few tabs open in Firefox on my work laptop,
and wanted to continue reading from my desktop. Normally I&amp;#8217;d just grab
the laptop, or &lt;span class="caps"&gt;RDP&lt;/span&gt; into it if it was my …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you&amp;#8217;re anything like me, you often find yourself working on multiple
computers. Today I left a few tabs open in Firefox on my work laptop,
and wanted to continue reading from my desktop. Normally I&amp;#8217;d just grab
the laptop, or &lt;span class="caps"&gt;RDP&lt;/span&gt; into it if it was my work desktop that had the open
tabs, but at the moment my girlfriend is neck-deep in WoW on the
MacBook. Having had this problem before (getting tabs back remotely, not
a laptop occupied with WoW), I started thinking about a&amp;nbsp;solution.&lt;/p&gt;
&lt;p&gt;I &lt;em&gt;could&lt;/em&gt; have closed my local firefox session, moved the
sessionstore.js somewhere else, copied the one from the laptop over,
re-opened firefox, &amp;#8230; well, you get the&amp;nbsp;idea.&lt;/p&gt;
&lt;p&gt;But that sounds like a really sub-optimal solution. So I started looking
around a bit. It seems that sessionstore.js is &lt;em&gt;almost&lt;/em&gt; &lt;span class="caps"&gt;JSON&lt;/span&gt;, but as per
&lt;a href="https://bugzilla.mozilla.org/show_bug.cgi?id=407110#c2"&gt;Mozilla bug
407110&lt;/a&gt;, it&amp;#8217;s
not quite standards-compliant. Luckily, it seems that &lt;span class="caps"&gt;PHP&lt;/span&gt;&amp;#8217;s &lt;span class="caps"&gt;JSON&lt;/span&gt; module
is quite tolerant, so once I stripped off the leading and trailing
parens from the file contents, it parsed quite&amp;nbsp;nicely.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve written a small &lt;code&gt;dumpFirefoxSession.php&lt;/code&gt; script that reads the
sessionstore.js file (in cwd or a specified path), unserializes the &lt;span class="caps"&gt;JSON&lt;/span&gt;
as an array, and then dumps the tabs. It dumps as either plain text or
&lt;span class="caps"&gt;HTML&lt;/span&gt; (currently just elements inside the body, not a full &lt;span class="caps"&gt;HTML&lt;/span&gt; file).
The &lt;span class="caps"&gt;HTML&lt;/span&gt; will include &lt;code&gt;ol&lt;/code&gt;s for each window listing the tabs, links to
the current content (sessionstore.js also holds history for each tab,
but I don&amp;#8217;t need this), and it shows which tab is currently&amp;nbsp;selected.&lt;/p&gt;
&lt;p&gt;You can grab the script from github at:
&lt;a href="https://github.com/jantman/misc-scripts/blob/master/nmap-xml-to-table.php"&gt;https://github.com/jantman/misc-scripts/blob/master/nmap-xml-to-table.php&lt;/a&gt;.
The current version is 3. You&amp;#8217;ll need &lt;span class="caps"&gt;PHP&lt;/span&gt; (probably 5) with &lt;span class="caps"&gt;JSON&lt;/span&gt;&amp;nbsp;support.&lt;/p&gt;</content><category term="firefox"></category><category term="PHP"></category></entry><entry><title>Apache catchall vhost</title><link href="https://blog.jasonantman.com/2010/04/apache-catchall-vhost/" rel="alternate"></link><published>2010-04-07T10:10:00-04:00</published><updated>2010-04-07T10:10:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2010-04-07:/2010/04/apache-catchall-vhost/</id><summary type="html">&lt;p&gt;As mentioned in &lt;a href="/2010/04/bind9-dynamic-dns/"&gt;one of my recent posts&lt;/a&gt;, I occasionally
have to setup catchall pages in Apache. The general idea is usually that I either want
a vhost that serves one page for any conceivable request, or that I moved something and
want to alert the visitor, but provide a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As mentioned in &lt;a href="/2010/04/bind9-dynamic-dns/"&gt;one of my recent posts&lt;/a&gt;, I occasionally
have to setup catchall pages in Apache. The general idea is usually that I either want
a vhost that serves one page for any conceivable request, or that I moved something and
want to alert the visitor, but provide a formula-based link to the new content. Assuming
you have &lt;code&gt;mod_rewrite&lt;/code&gt;, this is relatively&amp;nbsp;simple.&lt;/p&gt;
&lt;p&gt;In your vhost configuration (or .htaccess), you just need two&amp;nbsp;lines:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;RewriteEngine&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt;
&lt;span class="nb"&gt;RewriteCond&lt;/span&gt; %{REQUEST_URI} !/index\.php$1
&lt;span class="nb"&gt;RewriteRule&lt;/span&gt; ^(.*)$ &lt;span class="sx"&gt;/index.php&lt;/span&gt;$1 [L]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will redirect every request for the vhost to &lt;code&gt;/index.php&lt;/code&gt;. Within
your &lt;span class="caps"&gt;PHP&lt;/span&gt; script, you can access the actual request &lt;span class="caps"&gt;URI&lt;/span&gt; through &lt;code&gt;$_SERVER["REQUEST_URI"]&lt;/code&gt;.
The script that I&amp;#8217;m currently using for an internal page&amp;nbsp;is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$newServer = &amp;quot;http://foo.example.com:12345&amp;quot;;&lt;/span&gt;

&lt;span class="x"&gt;if($_SERVER[&amp;quot;REQUEST_URI&amp;quot;] == &amp;quot;/&amp;quot; || $_SERVER[&amp;quot;REQUEST_URI&amp;quot;] == &amp;quot;/index.php&amp;quot;)&lt;/span&gt;
&lt;span class="x"&gt;  {&lt;/span&gt;
&lt;span class="x"&gt;    header(&amp;quot;Location: &amp;quot;.$newServer);&lt;/span&gt;
&lt;span class="x"&gt;  }&lt;/span&gt;
&lt;span class="x"&gt;else&lt;/span&gt;
&lt;span class="x"&gt;  {&lt;/span&gt;
&lt;span class="x"&gt;    $newURL = $newServer.$_SERVER[&amp;quot;REQUEST_URI&amp;quot;];&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;#39;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Page Moved&amp;lt;/title&amp;gt;&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;#39;&amp;lt;&lt;span class="caps"&gt;META&lt;/span&gt; &lt;span class="caps"&gt;HTTP&lt;/span&gt;-&lt;span class="caps"&gt;EQUIV&lt;/span&gt;=&amp;quot;refresh&amp;quot; &lt;span class="caps"&gt;CONTENT&lt;/span&gt;=&amp;quot;5;&lt;span class="caps"&gt;URL&lt;/span&gt;=&amp;#39;.$newURL.&amp;#39;&amp;quot;&amp;gt;&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;#39;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;#39;&amp;lt;p&amp;gt;The page you are looking for is best found at:&amp;lt;/p&amp;gt;&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;#39;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;&amp;lt;a href=&amp;quot;&amp;#39;.$newURL.&amp;#39;&amp;quot;&amp;gt;&amp;#39;.$newURL.&amp;#39;&amp;lt;/a&amp;gt;&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;#39;&amp;lt;p&amp;gt;You will be automatically redirected after 5 seconds. If this does not happen, click the link above.&amp;lt;/p&amp;gt;&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;#39;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt;  }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This script takes two distinct&amp;nbsp;actions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If the requested path is &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;/index.php&lt;/code&gt;, it transparently redirects to a different &lt;span class="caps"&gt;URL&lt;/span&gt; (and&amp;nbsp;port).&lt;/li&gt;
&lt;li&gt;Otherwise, it displays a &amp;#8220;page moved to&amp;#8221; message and uses a Meta-Refresh to redirect after 5&amp;nbsp;seconds.&lt;/li&gt;
&lt;/ol&gt;</content><category term="apache"></category><category term="catchall"></category><category term="PHP"></category><category term="web"></category></entry><entry><title>Parsing Nagios status.dat in PHP</title><link href="https://blog.jasonantman.com/2010/02/parsing-nagios-status-dat-in-php/" rel="alternate"></link><published>2010-02-21T22:42:00-05:00</published><updated>2010-02-21T22:42:00-05:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2010-02-21:/2010/02/parsing-nagios-status-dat-in-php/</id><summary type="html">&lt;p&gt;&lt;strong&gt;If you&amp;#8217;re just looking for the script or &lt;span class="caps"&gt;PHP&lt;/span&gt; module&lt;/strong&gt;, you can get
them at:
&lt;a href="http://github.com/jantman/php-nagios-xml"&gt;http://github.com/jantman/php-nagios-xml&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A while ago (back in late 2008), I wrote a &lt;span class="caps"&gt;PHP&lt;/span&gt; script that parses the
Nagios status.dat file into an associative array. My original use was to
output …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;If you&amp;#8217;re just looking for the script or &lt;span class="caps"&gt;PHP&lt;/span&gt; module&lt;/strong&gt;, you can get
them at:
&lt;a href="http://github.com/jantman/php-nagios-xml"&gt;http://github.com/jantman/php-nagios-xml&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A while ago (back in late 2008), I wrote a &lt;span class="caps"&gt;PHP&lt;/span&gt; script that parses the
Nagios status.dat file into an associative array. My original use was to
output &lt;span class="caps"&gt;XML&lt;/span&gt; which was then read by another script on another server and
used for a small custom &lt;span class="caps"&gt;GUI&lt;/span&gt;. It&amp;#8217;s a very simple &lt;span class="caps"&gt;PHP&lt;/span&gt; script that just
takes the path of the status.dat file (which, obviously, must be
readable by the user running the&amp;nbsp;script).&lt;/p&gt;
&lt;p&gt;At that time, I was using Nagios v2. Since then, I&amp;#8217;ve moved to Nagios
v3, and have updated the script to include the ability to parse v3
status.dat files, as well as a function to detect the version of a
status file. I also refactored the code so that the parsing functions
are all contained in a single file (statusXML.php.inc) which is safe to
include in other scripts. The actual statusXML.php file now just
includes examples of how to call all of the functions and output &lt;span class="caps"&gt;XML&lt;/span&gt;
(though it is equally useful to output the serialized array, or use it&amp;nbsp;directly).&lt;/p&gt;
&lt;p&gt;Since I posted my script online, two people have been kind enough to
send back their&amp;nbsp;modifications:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.krzywanski.net/"&gt;Artur Krzywański&lt;/a&gt; modified the original
    (&lt;a href="https://github.com/jantman/php-nagios-xml/blob/9926602ef4868a898661b6ea0f430ff8ccba4dd3/parseNagiosXML.php"&gt;r4&lt;/a&gt;)
    version of
    &lt;a href="https://github.com/jantman/php-nagios-xml/blob/master/statusXML.php"&gt;statusXML.php&lt;/a&gt;
    to allow selection of the keys to be&amp;nbsp;returned.&lt;/li&gt;
&lt;li&gt;Whitham D. Reeve &lt;span class="caps"&gt;II&lt;/span&gt; of &lt;a href="http://www.gci.com"&gt;General Communication,
    Inc.&lt;/a&gt;, who needed higher performance for a very
    large status file, rewrote my script in C as a &lt;span class="caps"&gt;PHP&lt;/span&gt;&amp;nbsp;module.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Both of these generous contributions have been included in my &lt;a href="https://github.com/jantman/php-nagios-xml"&gt;Github
repository&lt;/a&gt; as of the current
commit. Unfortunately, due to my delay in putting my Nagios3 code into
svn, both of these contributions are &lt;strong&gt;Nagios v2&lt;/strong&gt;&amp;nbsp;only.&lt;/p&gt;
&lt;p&gt;As time permits, I plan on merging Artur&amp;#8217;s changes into the current
version of statusXML.php.inc. Unfortunately, C isn&amp;#8217;t one of my strong
points, but I plan on also updating Whitham&amp;#8217;s &lt;span class="caps"&gt;PHP&lt;/span&gt; module code to work
with Nagios3 as soon as&amp;nbsp;possible.&lt;/p&gt;
&lt;p&gt;Stay tuned for updates, and thanks to both gentlemen for contributing
their work. I&amp;#8217;m always interested in hearing how people are using my
code, and how they are making it&amp;nbsp;better.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Also:&lt;/strong&gt; While I added this project to &lt;a href="http://exchange.nagios.org/"&gt;Nagios
Exchange&lt;/a&gt;, and plan on adding it to
&lt;a href="http://www.monitoringexchange.org/"&gt;Monitoring Exchange&lt;/a&gt;, I don&amp;#8217;t
always keep those sites up to date (I can&amp;#8217;t access Nagios Exchange right
now, and who knows if I&amp;#8217;ll have time to update it tomorrow). I
&lt;em&gt;strongly&lt;/em&gt; recommend directly checking out from Git at
&lt;a href="https://github.com/jantman/php-nagios-xml"&gt;https://github.com/jantman/php-nagios-xml&lt;/a&gt;.&lt;/p&gt;</content><category term="Nagios"></category><category term="PHP"></category><category term="xml"></category></entry><entry><title>Using Google Maps to produce usable, printable maps</title><link href="https://blog.jasonantman.com/2009/12/using-google-maps-to-produce-usable-printable-maps/" rel="alternate"></link><published>2009-12-01T14:11:00-05:00</published><updated>2009-12-01T14:11:00-05:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2009-12-01:/2009/12/using-google-maps-to-produce-usable-printable-maps/</id><summary type="html">&lt;p&gt;This is a follow-up to my &lt;a href="/2009/11/making-maps-from-gis-data-with-inkscape/"&gt;Making maps from &lt;span class="caps"&gt;GIS&lt;/span&gt; data with
Inkscape&lt;/a&gt; post. After
playing around with Inkscape for quite a while, and coming up with the
dismal results seen in that post, I decided there has to be an easier
way. A little Googling turned up &lt;a href="http://www.wipeout44.com/video/misc/google_maps_large.asp"&gt;this video …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is a follow-up to my &lt;a href="/2009/11/making-maps-from-gis-data-with-inkscape/"&gt;Making maps from &lt;span class="caps"&gt;GIS&lt;/span&gt; data with
Inkscape&lt;/a&gt; post. After
playing around with Inkscape for quite a while, and coming up with the
dismal results seen in that post, I decided there has to be an easier
way. A little Googling turned up &lt;a href="http://www.wipeout44.com/video/misc/google_maps_large.asp"&gt;this video
tutorial&lt;/a&gt; on
how to print large scale maps from Google Maps. It turns out that the
Google Maps &lt;span class="caps"&gt;API&lt;/span&gt; will honor almost any pixel resolution that it&amp;#8217;s passed.
The &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/1146"&gt;Screengrab&lt;/a&gt;
add-on for Firefox has the wonderful capability of being able to capture
a screengrab of page content, at actual resolution, regardless of screen
resolution. So load up a 5000x5000 pixel Google Map, use the Screengrab
addon, and end up with a full 5000x5000 pixel image&amp;nbsp;file.&lt;/p&gt;
&lt;p&gt;After testing this a bit, I decided to go the Google Maps route. This
also has a lot of other added bonuses - I can store my overlay data in
simple &lt;span class="caps"&gt;XML&lt;/span&gt; files, add and remove layers on-the-fly, and also make it
available online (and, theoretically, to any Google Maps-equipped device
used by responders). This even opens up the possibility of using paper
maps as a last resort, and providing the Fire Department with live
hydrant maps on &lt;span class="caps"&gt;GPS&lt;/span&gt;-enabled handheld devices and&amp;nbsp;phones.&lt;/p&gt;
&lt;p&gt;The quirks, however, may need some serious photoshopping (err, rather,
&lt;a href="http://www.gimp.org/"&gt;gimp&lt;/a&gt;ing) to&amp;nbsp;fix:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;With all of the background color, how will this look when&amp;nbsp;printed?&lt;/li&gt;
&lt;li&gt;How do I make the town borders easily defined? It would be a &lt;em&gt;lot&lt;/em&gt;
    of raster editing to remove the background color of areas outside of&amp;nbsp;town.&lt;/li&gt;
&lt;li&gt;How do I overlay a grid for a street name&amp;nbsp;index?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The first step was to setup a large Google Map to develop with. I used
&lt;span class="caps"&gt;PHP&lt;/span&gt; and Monte Ohrt&amp;#8217;s
&lt;a href="http://www.phpinsider.com/php/code/GoogleMapAPI/"&gt;GoogleMapAPI&lt;/a&gt; &lt;span class="caps"&gt;PHP&lt;/span&gt;
wrapper class. It was simple enough to setup a big (3300x5100px) map,
zoom out in Firefox, and start adding some stuff. My examples and
development pages, if you want to take a peek at the code, are available
in &lt;a href="/GFX/googleMaps.tar.gz"&gt;googleMaps.tar.gz&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The first step was to draw a polygon for the outline of the town. I
found some very detailed information on how to get zip code boundary
lines on Matt Cutts&amp;#8217;
&lt;a href="http://www.mattcutts.com/blog/fun-with-zip-codes/"&gt;blog&lt;/a&gt;. Apparently,
he&amp;#8217;s a Google software engineer, heading up their webspam team. I
grabbed the files from the Census, as described, and came up with the
boundary for my zip code looking&amp;nbsp;like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;        60      -0.741427638843858E+02       0.409963180802469E+02
      -0.741375870000000E+02       0.410075970000000E+02
      -0.741308870000000E+02       0.410061970000000E+02
      -0.741308870000000E+02       0.410061970000000E+02
      -0.741307260000000E+02       0.410032600000000E+02
      -0.741326870000000E+02       0.409955970000000E+02
      -0.741278870000000E+02       0.409943970000000E+02
      -0.741280870000000E+02       0.409938970000000E+02
      -0.741327870000000E+02       0.409853970000000E+02
      -0.741352870000000E+02       0.409830970000000E+02
      -0.741369600000000E+02       0.409818620000000E+02
      -0.741410520000000E+02       0.409821940000000E+02
      -0.741412870000000E+02       0.409826970000000E+02
      -0.741412870000000E+02       0.409826970000000E+02
      -0.741417870000000E+02       0.409847970000000E+02
      -0.741427870000000E+02       0.409863970000000E+02
      -0.741482870000000E+02       0.409868970000000E+02
      -0.741536880000000E+02       0.409899970000000E+02
      -0.741510880000000E+02       0.409929970000000E+02
      -0.741531880000000E+02       0.409965970000000E+02
      -0.741571880000000E+02       0.409988970000000E+02
      -0.741557880000000E+02       0.410013970000000E+02
      -0.741461870000000E+02       0.410018970000000E+02
      -0.741400870000000E+02       0.410065970000000E+02
      -0.741375870000000E+02       0.410075970000000E+02
&lt;span class="caps"&gt;END&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As per Matt&amp;#8217;s instructions, I stripped off the first and last lines,
converted everything to normal decimal notation, and built it into a &lt;span class="caps"&gt;PHP&lt;/span&gt;&amp;nbsp;array:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$MP_boundary = array();&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.137587, 41.007597);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.130887, 41.006197);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.130887, 41.006197);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.130726, 41.003260);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.132687, 40.995597);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.127887, 40.994397);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.128087, 40.993897);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.132787, 40.985397);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.135287, 40.983097);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.136960, 40.981862);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.141052, 40.982194);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.141287, 40.982697);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.141287, 40.982697);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.141787, 40.984797);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.142787, 40.986397);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.148287, 40.986897);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.153688, 40.989997);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.151088, 40.992997);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.153188, 40.996597);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.157188, 40.998897);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.155788, 41.001397);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.146187, 41.001897);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.140087, 41.006597);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.137587, 41.007597);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Though this data doesn&amp;#8217;t seem exactly 100% accurate (at least by my
knowledge of the town, and every map I can find) it&amp;#8217;s quite close and a
very good&amp;nbsp;start.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ll update later this week when I have some more&amp;nbsp;done&amp;#8230;&lt;/p&gt;</content><category term="catrography"></category><category term="emergency"></category><category term="EMS"></category><category term="google"></category><category term="maps"></category><category term="PHP"></category></entry><entry><title>WordPress… Finally!</title><link href="https://blog.jasonantman.com/2008/12/wordpress-finally/" rel="alternate"></link><published>2008-12-17T15:58:00-05:00</published><updated>2008-12-17T15:58:00-05:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2008-12-17:/2008/12/wordpress-finally/</id><summary type="html">&lt;p&gt;Well, I finally bit the bullet. I woke up this morning, got in to work
(slow day) and said to myself, &amp;#8220;My blog&amp;#8217;s finally moving to WordPress.
Today.&amp;#8221; So, I read through the docs (really psyched about the Blogger
import feature), downloaded 2.7 (latest), setup the &lt;span class="caps"&gt;DB&lt;/span&gt; and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Well, I finally bit the bullet. I woke up this morning, got in to work
(slow day) and said to myself, &amp;#8220;My blog&amp;#8217;s finally moving to WordPress.
Today.&amp;#8221; So, I read through the docs (really psyched about the Blogger
import feature), downloaded 2.7 (latest), setup the &lt;span class="caps"&gt;DB&lt;/span&gt; and installed
away. Once I did the preliminary things like changing the admin password
and setting up some categories, I set about importing from&amp;nbsp;Blogger.&lt;/p&gt;
&lt;p&gt;Here was the first of the major issues. Though WordPress has really
hyped their Blogger importer, they failed to mention that it is totally
useless if you are self-hosting Blogger and publishing via &lt;span class="caps"&gt;FTP&lt;/span&gt; or &lt;span class="caps"&gt;SFTP&lt;/span&gt;,
as I was. So, after a lengthy consultation with the great oracle of
Google, I dedided I had two options - switch Blogger to publish to
BlogSpot.com and use the &lt;span class="caps"&gt;WP&lt;/span&gt; import tool, or custom hack a script. I must
admit, it felt a bit pointless&amp;#8230; all of my old posts were in a directry
at the same level as &lt;span class="caps"&gt;WP&lt;/span&gt;, it seemed quite stupid to have to jump through
hoops to get that data. Though I&amp;#8217;m not quite sure whether the GData &lt;span class="caps"&gt;API&lt;/span&gt;
really doesn&amp;#8217;t give access to posts if&amp;nbsp;self-hosted.&lt;/p&gt;
&lt;p&gt;I migrated publishing of Blogger to BlogSpot.com
(&lt;a href="http://www.jasonantman.com/jargon/entry.php?id=metasyntactic-variable"&gt;foobarthudgrunt&lt;/a&gt;.blogspot.com),
despite worries about confusing Google or messing up the little bit of
ranking I&amp;#8217;ve been able to gain. It successfully imported all 128 of my
entries, and the few comments. But, as I navigated to the &amp;#8220;Edit&amp;#8221; page to
have a look, an even bigger problem was apparent. All of the tags from
Blogger had ended up as categories in &lt;span class="caps"&gt;WP&lt;/span&gt;. So I had no tags for any of my
posts, and a gazillion categories with only one post in them. Luckily,
the &lt;span class="caps"&gt;DB&lt;/span&gt; schema is pretty sane, and I qickly figured out that both
categories and tags are stored in the &lt;code&gt;wp_term_taxonomy&lt;/code&gt; table, and the
difference between a category and a tag is simply that the &lt;code&gt;taxonomy&lt;/code&gt;
field is either &amp;#8220;category&amp;#8221; or &amp;#8220;post_tag&amp;#8221;, respectively. So, since I
hadn&amp;#8217;t added any posts in &lt;span class="caps"&gt;WP&lt;/span&gt; yet, I just changed &lt;code&gt;taxonomy&lt;/code&gt; to
&amp;#8220;post_tag&amp;#8221; for anything with an &lt;span class="caps"&gt;ID&lt;/span&gt; past the categories I&amp;#8217;d added. And
it seems to have worked&amp;nbsp;beautifully.&lt;/p&gt;
&lt;p&gt;Up next, however, was the hard part: sitting down with my list of
categories and sifting through 128 posts to categorize them. The biggest
pain is the default edit posts table in the admin interface lists 15
posts per page, and with a cursory glance at the source I couldn&amp;#8217;t for
the life of me figure out where that limit is&amp;nbsp;set.&lt;/p&gt;
&lt;p&gt;Next up, I spent some time looking over the configuration options in &lt;span class="caps"&gt;WP&lt;/span&gt;,
updating my About page, and listing things to do in the future (more
static pages, blogroll and links,&amp;nbsp;etc.).&lt;/p&gt;
&lt;p&gt;I was finally ready to setup pretty URLs. And&amp;#8230; sure enough&amp;#8230; I
clicked &amp;#8220;submit&amp;#8221; to apply some changes to the default blog &lt;span class="caps"&gt;URL&lt;/span&gt; (my real
domain, as opposed to the DynDNS domain) and subtitle, and I got kicked
out of the admin interface. Try as I might, I had no luck logging in. I
then found that WordPress doesn&amp;#8217;t log anything anywhere - no MySQL log
and no error messages in the Apache error log. Wondeful. I spent about
an hour looking through the source, figuring out how the auth method
works, and trying to set an &lt;span class="caps"&gt;MD5&lt;/span&gt; password. It was obviously apparent that
the password in the &lt;span class="caps"&gt;DB&lt;/span&gt; for my one user (administrative user) was
generated by PHPass, not &lt;span class="caps"&gt;MD5&lt;/span&gt;, but the auth function was evaluating
anything &gt;= 32 characters as PHPass, and the &lt;span class="caps"&gt;MD5&lt;/span&gt; of my password was 32
characters, so that wouldn&amp;#8217;t work. I tried the &amp;#8220;forgot password&amp;#8221; link
with both username and email, but no mail was being sent. When I reached
the 2-1/2 hour mark, I started instrumenting the login code with some
&lt;code&gt;error_log()&lt;/code&gt; lines to see what was up. I narrowed the problem down to
the block of code starting at lin 48 in &lt;code&gt;wp-include/user.php&lt;/code&gt; -
specifically, according to the comments, no credentials were being
passed but the cookie wasn&amp;#8217;t set. And it&amp;#8217;s silent in that case. So, at
this point, I&amp;#8217;m totally lost. I decided to clear all of my browser&amp;#8217;s
cookies and auth info, and try again. No dice. After nearly 3 hours, I
decided to do a packet capture, and found the horribly simple reason.
Somewhere in the code, &lt;span class="caps"&gt;WP&lt;/span&gt; is evaluating the &amp;#8220;siteurl&amp;#8221; or &amp;#8220;home&amp;#8221; values
from wp_options, and using them instead of just doing relative links.
As a result, when the form submits, Apache keeps returning a 302, and
the form submission never makes it there. Hopefully this won&amp;#8217;t create a
problem when I transition from DynDNS to a real static &lt;span class="caps"&gt;IP&lt;/span&gt; and domain&amp;nbsp;name.&lt;/p&gt;
&lt;p&gt;Next I enabled pretty permalinks, enabled mod_rewrite in the vhost, and
selected a new template for my blog (though I&amp;#8217;m planning on doing some
heavy customization). I didn&amp;#8217;t want to leave the default template up for
too long, in case Google&amp;#8217;s heavy crawling of my site picked up all of
the new content somehow&amp;#8230; I ended up narrowing it down to three themes,
coincidentally all designed by
&lt;a href="http://wordpress.org/extend/themes/profile/mg12"&gt;mg12&lt;/a&gt;:
&lt;a href="http://wordpress.org/extend/themes/blocks2"&gt;Blocks2&lt;/a&gt;,
&lt;a href="http://wordpress.org/extend/themes/inove#post-668"&gt;iNove&lt;/a&gt; or
&lt;a href="http://wordpress.org/extend/themes/elegant-box"&gt;ElegantBox&lt;/a&gt;. I
installed them all on my box and looked at iNove first, and it was love
at first&amp;nbsp;sight.&lt;/p&gt;
&lt;p&gt;So, that&amp;#8217;s where it stands right now. I finally have my blog on
WordPress and running, and have a theme. The action plan for tonight&amp;nbsp;includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using RewriteRule and a &lt;span class="caps"&gt;PHP&lt;/span&gt; script to point all of the old Blogger
    URLs to the new WordPress&amp;nbsp;installation.&lt;/li&gt;
&lt;li&gt;Adding some new static content, and top-bar links to my other&amp;nbsp;sites.&lt;/li&gt;
&lt;li&gt;Refining the theme a bit,&amp;nbsp;possibly?&lt;/li&gt;
&lt;li&gt;Adding links to my sites, and to the&amp;nbsp;blogroll.&lt;/li&gt;
&lt;li&gt;Adding the buttons/plugins for del.icio.us, Digg, Slashdot, reddit,&amp;nbsp;etc.&lt;/li&gt;
&lt;li&gt;Redirecting my main blog page to&amp;nbsp;WordPress.&lt;/li&gt;
&lt;li&gt;Redirecting or linking my old feed locations to&amp;nbsp;WordPress.&lt;/li&gt;
&lt;/ul&gt;</content><category term="blogger"></category><category term="blogging"></category><category term="PHP"></category><category term="wordpress"></category></entry><entry><title>Practical PHP and MySQL</title><link href="https://blog.jasonantman.com/2008/06/practical-php-and-mysql/" rel="alternate"></link><published>2008-06-26T14:29:00-04:00</published><updated>2008-06-26T14:29:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2008-06-26:/2008/06/practical-php-and-mysql/</id><summary type="html">&lt;p&gt;I&amp;#8217;m taking a summer course in Building Data Driven Websites - not that I
thought I&amp;#8217;d learn much in such a course at
&lt;a href="http://scils.rutgers.edu"&gt;&lt;span class="caps"&gt;SCILS&lt;/span&gt;&lt;/a&gt;, but I&amp;#8217;d like to graduate on time, and
need the credits, and Bill Crosbie is just the type of rare teacher that
can keep …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I&amp;#8217;m taking a summer course in Building Data Driven Websites - not that I
thought I&amp;#8217;d learn much in such a course at
&lt;a href="http://scils.rutgers.edu"&gt;&lt;span class="caps"&gt;SCILS&lt;/span&gt;&lt;/a&gt;, but I&amp;#8217;d like to graduate on time, and
need the credits, and Bill Crosbie is just the type of rare teacher that
can keep even me awake and interested. Our book is &lt;a href="http://www.informit.com/store/product.aspx?isbn=0132239973"&gt;Practical &lt;span class="caps"&gt;PHP&lt;/span&gt; and
MySQL: Building Eight Dynamic Web
Applications&lt;/a&gt;
(&lt;a href="http://www.amazon.com/Practical-PHP-MySQL-Building-Applications/dp/0132239973"&gt;Amazon&lt;/a&gt;)
by &lt;a href="http://www.jonobacon.org/"&gt;Jono Bacon&lt;/a&gt;. Now, I know it&amp;#8217;s not a
&lt;em&gt;real&lt;/em&gt; book like, say, &lt;a href="http://oreilly.com/catalog/9780596003432/"&gt;&lt;span class="caps"&gt;ESA3&lt;/span&gt; by
Frisch&lt;/a&gt;, which has a healthy
&lt;a href="http://www.aeleen.com/home.htm"&gt;web presense&lt;/a&gt;. But this thing is all
code and doesn&amp;#8217;t even have a web site, let alone easy code&amp;nbsp;downloads!&lt;/p&gt;
&lt;p&gt;The book does come with a heavily customized Ubuntu LiveCD. However,
when I popped it in my &lt;a href="http://www.opensuse.org"&gt;OpenSuSE workstation&lt;/a&gt;,
I couldn&amp;#8217;t really make much out of the &lt;span class="caps"&gt;CD&lt;/span&gt; - there was certainly no
easy-to-find &amp;#8220;this is the code&amp;#8221; directory. Well, after some exploring, I
mounted the &lt;a href="http://squashfs.sourceforge.net/"&gt;SquashFS&lt;/a&gt; filesystem and
poked around a bit. Strange&amp;#8230; seems to only have one real user (root)
and, though they claim this is a fully-functional &lt;span class="caps"&gt;LAMP&lt;/span&gt; server, no Apache
or MySQL. Really weird. Well, after poking for a few minutes, I found
the holy grail - &lt;code&gt;/root/.bash_history&lt;/code&gt; was intact! Just a quick look
through it with &lt;code&gt;less&lt;/code&gt; and I found what I was looking for: &lt;code&gt;/opt/lampp&lt;/code&gt;.
It appears that the install is actually ApacheFriends&amp;#8217;
&lt;a href="http://www.apachefriends.org/en/xampp-linux.html"&gt;&lt;span class="caps"&gt;LAMPP&lt;/span&gt;&lt;/a&gt;, or &lt;span class="caps"&gt;XAMPP&lt;/span&gt; for
Linux (gotta wonder if the guy writing this book doesn&amp;#8217;t even know how
to install Apache&amp;#8230; I&amp;#8217;m sure &lt;span class="caps"&gt;XAMPP&lt;/span&gt; for Linux is more bloated than a
customized build of Apache/MySQL/&lt;span class="caps"&gt;PHP&lt;/span&gt; from source, especially since it&amp;#8217;s
only being used to host 8 sample projects, so a lot could be left&amp;nbsp;out).&lt;/p&gt;
&lt;p&gt;Anyway, it appears that &lt;span class="caps"&gt;LAMPP&lt;/span&gt; is running in a chroot&amp;#8217;ed environment. The
actual sample code is rooted at &lt;code&gt;/opt/lampp/htdocs/sites&lt;/code&gt;. It seems that
&lt;em&gt;all&lt;/em&gt; of the &lt;span class="caps"&gt;PHP&lt;/span&gt; files are also owned by root and chmod&amp;#8217;ed 777! And
the top-level &lt;code&gt;index.php&lt;/code&gt; file makes use of absolute links, so obviously
he never thought that someone may want to copy the sample code and use
it on a &lt;em&gt;real&lt;/em&gt;&amp;nbsp;box.&lt;/p&gt;
&lt;p&gt;I just can&amp;#8217;t imagine someone who&amp;#8217;s a beginner with Linux, let alone a
Windows person, trying to get this source code onto a machine where they
can actually play with it. And&amp;#8230; to make the situation worse&amp;#8230; the
LiveCD has vi and vim, but no Emacs!!!!&amp;nbsp;Eeeek!!&lt;/p&gt;</content><category term="books"></category><category term="linux"></category><category term="PHP"></category><category term="programming"></category><category term="rutgers"></category></entry><entry><title>Custom MediaWiki Sidebar; New Blog?</title><link href="https://blog.jasonantman.com/2008/06/custom-mediawiki-sidebar-new-blog/" rel="alternate"></link><published>2008-06-18T22:26:00-04:00</published><updated>2008-06-18T22:26:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2008-06-18:/2008/06/custom-mediawiki-sidebar-new-blog/</id><summary type="html">&lt;p&gt;As you may have noticed, some &lt;a href="http://www.spreadfirefox.com/node&amp;amp;id=238326&amp;amp;t=305"&gt;Firefox
3&lt;/a&gt;
&lt;a href="http://www.spreadfirefox.com/?q=affiliates/homepage"&gt;buttons&lt;/a&gt; have
popped up not only here on my blog, but also on my
&lt;a href="http://www.jasonantman.com/"&gt;wiki&lt;/a&gt;. While adding the buttons to
&lt;a href="http://www.blogger.com/"&gt;Blogger&lt;/a&gt; was a simple addition to the
template, getting them in the sidebar of MediaWiki wasn&amp;#8217;t exactly as
easy (yeah, I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As you may have noticed, some &lt;a href="http://www.spreadfirefox.com/node&amp;amp;id=238326&amp;amp;t=305"&gt;Firefox
3&lt;/a&gt;
&lt;a href="http://www.spreadfirefox.com/?q=affiliates/homepage"&gt;buttons&lt;/a&gt; have
popped up not only here on my blog, but also on my
&lt;a href="http://www.jasonantman.com/"&gt;wiki&lt;/a&gt;. While adding the buttons to
&lt;a href="http://www.blogger.com/"&gt;Blogger&lt;/a&gt; was a simple addition to the
template, getting them in the sidebar of MediaWiki wasn&amp;#8217;t exactly as
easy (yeah, I&amp;#8217;m considering the arduous project of moving my whole 102+
page wiki to &lt;a href="http://drupal.org/"&gt;Drupal&lt;/a&gt; or another good F/&lt;span class="caps"&gt;OSS&lt;/span&gt;&amp;nbsp;&lt;span class="caps"&gt;CMS&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;After some serious grepping through the source, and adding &lt;span class="caps"&gt;HTML&lt;/span&gt; comments
to see where they appeared, I finally found a solution to add the button
to the MediaWiki sidebar - though I&amp;#8217;d really like it to appear below the
search box (I guess that&amp;#8217;s something for my to-do list). I&amp;#8217;m using the
MonoBook skin (though somewhat modified). I&amp;#8217;m using &amp;#8220;MonoBook nouveau&amp;#8221;,
and it should be the version that shipped with &lt;span class="caps"&gt;MW&lt;/span&gt; 1.10.1. In this
version, I added the code around line 166. Specifically, this was added
before the &lt;code&gt;&amp;lt;div id="p-search" class="portlet"&amp;gt;&lt;/code&gt; line, and after the end
of the &lt;code&gt;foreach ($this-&amp;gt;data['sidebar'] as $bar =&amp;gt; $cont)&lt;/code&gt; loop. This
threw the button in a box directly above the search box, and below all
of my sidebar&amp;nbsp;links.&lt;/p&gt;
&lt;p&gt;The code looked something&amp;nbsp;like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php } ?&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- firefox link added to MonoBook.php by jantman 2008-06-18 --&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;portlet&amp;#39;&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;p-logos&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h5&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Cool Stuff&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h5&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;pBody&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.spreadfirefox.com/node&amp;amp;id=238326&amp;amp;t=305&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_blank&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;border&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Firefox 3&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Firefox 3&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://sfx-images.mozilla.org/affiliates/Buttons/firefox3/110x32_best-yet.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- end firefox link --&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;p-search&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;portlet&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In other news, I&amp;#8217;m taking a Data Driven Websites class this summer
(&lt;span class="caps"&gt;PHP&lt;/span&gt;/MySQL, but for some reason they switched to a Windows server&amp;#8230;
endless problems, and I can&amp;#8217;t even edit with Nano on the server, let
alone emacs). Our first project was to build a blog engine, which I&amp;#8217;m
working on right now. Anyway, it got me thinking&amp;#8230; the one thing that
Blogger is missing is the ability to post to a given category, and allow
users to view or subscribe to a specific category (or everything). So I
think I may look into writing something like that myself, if I can&amp;#8217;t
find a good alternative that&amp;#8217;s already done and is F/&lt;span class="caps"&gt;OSS&lt;/span&gt;. Regardless,
I&amp;#8217;ll probably be keeping the Blogger template as well as (ugh) moving
over all of my current posts, which Blogger chose to store in raw &lt;span class="caps"&gt;HTML&lt;/span&gt;.
So there&amp;#8217;s going to be a lot of parsing on my&amp;nbsp;future&amp;#8230;&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;PS&lt;/span&gt; - When I get a new blog engine, I&amp;#8217;m also going to go for a slightly
modified template that uses relative widths and placement - so that
code, like the snippet here, fits the screen&amp;nbsp;correctly.&lt;/p&gt;</content><category term="blog"></category><category term="firefox"></category><category term="mediawiki"></category><category term="PHP"></category></entry><entry><title>Bug/Issue Tracking - Update / Review of Eventum</title><link href="https://blog.jasonantman.com/2007/09/bugissue-tracking-update-review-of-eventum/" rel="alternate"></link><published>2007-09-17T14:47:00-04:00</published><updated>2007-09-17T14:47:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2007-09-17:/2007/09/bugissue-tracking-update-review-of-eventum/</id><summary type="html">&lt;p&gt;So, after many hours of investigating potential bug/issue tracking
packages, I have chosen one. And gone live with it, all in one weekend.
After much evaluation, my final choice was
&lt;a href="http://eventum.mysql.com/"&gt;Eventum&lt;/a&gt; from MySQL (I&amp;#8217;m using the current
version, 2.0.1). I will admit that it is not …&lt;/p&gt;</summary><content type="html">&lt;p&gt;So, after many hours of investigating potential bug/issue tracking
packages, I have chosen one. And gone live with it, all in one weekend.
After much evaluation, my final choice was
&lt;a href="http://eventum.mysql.com/"&gt;Eventum&lt;/a&gt; from MySQL (I&amp;#8217;m using the current
version, 2.0.1). I will admit that it is not perfect. There are some
features I wanted that weren&amp;#8217;t there, and the documentation is awful.
But it&amp;#8217;s written in&amp;nbsp;&lt;span class="caps"&gt;PHP&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;That being said, it is very much a community-driven project. The support
on the mailing list, both from other community members and from Bryan
Alsdorf, has been wonderful. I had some issues viewing the help
documents, specifically those in pop-ups, but I&amp;#8217;ve been told that most
new documentation has been moved to the wiki at the link&amp;nbsp;above.&lt;/p&gt;
&lt;p&gt;The project provides for advanced bug- and issue-tracking including time
tracking, file attachments, and customizable statuses, priorities, and
categories. It also provides email integration, both in terms of sending
email alerts and opening issues (as well as updating and tracking) by
parsing incoming emails. The email alerts worked out-of-the-box, but I
did not configure parsing of&amp;nbsp;emails.&lt;/p&gt;
&lt;p&gt;One of my main requirements which was met perfectly by Eventum is its&amp;#8217;
ability to easily handle multiple projects. It also has a built-in
capability to allow anonymous issue submission (enabled on a
project-by-project basis). You can define custom fields for issues on a
project-by-project basis, and set them as required fields for either
registered users, anonymous users, or&amp;nbsp;both.&lt;/p&gt;
&lt;p&gt;One feature that I found lacking was the possibility for a user to view
all of the open issues assigned to them. Currently, all user interface
is on a project-by-project basis. Therefore, listing of open issues is
only available for the currently selected project. To cope with this, I
hacked together a little &lt;span class="caps"&gt;PHP&lt;/span&gt; script that just queries the database for
issues by user and displays it in a simple little&amp;nbsp;page.&lt;/p&gt;
&lt;p&gt;One of the major features about Eventum that caught my eye was
integration with a version control system (&lt;span class="caps"&gt;SCM&lt;/span&gt;, as far as the Eventum
docs are concerned). The feature list stated integration with &lt;span class="caps"&gt;CVS&lt;/span&gt; and
&lt;span class="caps"&gt;SVN&lt;/span&gt;. When I actually looked into integrating it with &lt;span class="caps"&gt;CVS&lt;/span&gt;, however, the
problems began. Firstly, the javascript-based help popup would not
display anything, let alone the proper page. Installation was otherwise
perfect under Apache2. I was forced to browse to the included &lt;span class="caps"&gt;HTML&lt;/span&gt; file
manually and check it out. The overview seemed simple enough - throw a
script in your &lt;span class="caps"&gt;CVSROOT&lt;/span&gt; loginfo file, update a few variables in the
web-based Eventum configuration, and you&amp;#8217;re off to the races. Reading
on, I found that the installation page was a confusing jumble of
references to a deprecated perl script and the current &lt;span class="caps"&gt;PHP&lt;/span&gt; script to
call from loginfo. Furthermore, database access is provided by having
the script called from loginfo parse the logging information and then
&lt;em&gt;run a &lt;span class="caps"&gt;HTTP&lt;/span&gt; &lt;span class="caps"&gt;GET&lt;/span&gt;&lt;/em&gt; on a local script served in the Eventum web
directory. This added level of abstraction not only confuses me to no
end, but also introduces the possibility for malicious users to insert
data in the Eventum &lt;span class="caps"&gt;SCM&lt;/span&gt; database simply by visiting a well-known&amp;nbsp;&lt;span class="caps"&gt;URL&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;More importantly, the script provided to be called by loginfo seems to
expect the old &lt;span class="caps"&gt;CVS&lt;/span&gt; logging format, not the new one being provided by my
installation of &lt;span class="caps"&gt;CVS&lt;/span&gt; 1.12.12. While annoying, this ended up being a minor
fix in the provided &amp;#8220;process_cvs_commits.php&amp;#8221; - I simply had to
rewrite the argument parsing code so that it no longer expects the file,
old version, and new version (%{sVv}) information to be space-separated
on the command line in the form of s,V,v tuples, but expects everything
to be space-separated. I should be cleaning up my fix a bit and
submitting it for inclusion in the next&amp;nbsp;release.&lt;/p&gt;
&lt;p&gt;Once patched, &lt;span class="caps"&gt;CVS&lt;/span&gt; integration works perfectly. Simply append an
identifier to the end of your commit log message, such as &amp;#8220;(issue: 21)&amp;#8221;
or &amp;#8220;(bug: 21)&amp;#8221; and the commit will be automatically associated with the
issue of that number. When viewing an issue, a list of associated &lt;span class="caps"&gt;CVS&lt;/span&gt;
commits can be&amp;nbsp;viewed.&lt;/p&gt;
&lt;p&gt;It must be remembered that, as I have read, Eventum is used internally
by MySQL. It is, therefor, a mature project that is well tested in one
circumstance. I believe that it is mature and generally well-working
(though I&amp;#8217;ve heard reports that the 2.x tree isn&amp;#8217;t as stable as the
older versions, which are most likely still in use at MySQL). It must
also be noted that the issue with &lt;span class="caps"&gt;CVS&lt;/span&gt; integration is most likely only
with the newer &lt;span class="caps"&gt;CVS&lt;/span&gt; versions using the new logging format (I don&amp;#8217;t know
when the switch was made) and will probably not be noticed in older
projects which have established &lt;span class="caps"&gt;CVS&lt;/span&gt;&amp;nbsp;systems.&lt;/p&gt;
&lt;p&gt;Now, for the opinion section. Eventum has thousands of features. I have
detailed every issue that I have, which total about five. I found it to
be a stable system, ready-to-run out of the box. Overall, I think it has
the best feature set of the open-source bug tracking systems that I
surveyed, which are probably most of the ones out there. It&amp;#8217;s a great
project which I&amp;#8217;d recommend to anyone, though if you want more advanced
features (like integration with &lt;span class="caps"&gt;CVS&lt;/span&gt;, or things not offered such as
anonymous issue viewing) you should be comfortable with coding in &lt;span class="caps"&gt;PHP&lt;/span&gt;
until someone makes patches&amp;nbsp;available.&lt;/p&gt;</content><category term="bug tracking"></category><category term="eventum"></category><category term="PHP"></category><category term="review"></category><category term="ticketing"></category></entry><entry><title>Poor PHP</title><link href="https://blog.jasonantman.com/2007/03/poor-php/" rel="alternate"></link><published>2007-03-21T16:42:00-04:00</published><updated>2007-03-21T16:42:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2007-03-21:/2007/03/poor-php/</id><summary type="html">&lt;p&gt;Well, as mentioned below, today I was doing a little research. On the
futility of a Computer Science major. Specifically, on the fact that the
overwhelming odds are that in a career in &lt;span class="caps"&gt;IT&lt;/span&gt;, system administration, or
even web programming, I&amp;#8217;ll probably never apply 90% of what I learn …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Well, as mentioned below, today I was doing a little research. On the
futility of a Computer Science major. Specifically, on the fact that the
overwhelming odds are that in a career in &lt;span class="caps"&gt;IT&lt;/span&gt;, system administration, or
even web programming, I&amp;#8217;ll probably never apply 90% of what I learn in
&lt;span class="caps"&gt;CS&lt;/span&gt;&amp;nbsp;courses.&lt;/p&gt;
&lt;p&gt;So, I went looking for online certificate programs, knowing that most of
the vendors&amp;#8217; programs run $500 or more just for testing. I came by
eCertificates.com. And this brings me to another topic&amp;#8230; I clicked on
the &amp;#8220;Software Programming&amp;#8221; category, and was surprised to see no &lt;span class="caps"&gt;PHP&lt;/span&gt;
test. On a hunch, I looked under &amp;#8220;Web Design&amp;#8221;, and sure enough, there it&amp;nbsp;was.&lt;/p&gt;
&lt;p&gt;I know this is a common misconception, and I know that because it plays
so well with the web, and Apache, &lt;span class="caps"&gt;PHP&lt;/span&gt; has been pigeonholed as a web
language. Maybe I&amp;#8217;m just crazy, or maybe it&amp;#8217;s just because I know &lt;span class="caps"&gt;PHP&lt;/span&gt;
better than anything else. But &lt;span class="caps"&gt;PHP&lt;/span&gt; is &lt;em&gt;&lt;span class="caps"&gt;NOT&lt;/span&gt;&lt;/em&gt; a web programming language.
It is a programming language that happens to work &lt;em&gt;very&lt;/em&gt; well with web&amp;nbsp;applications.&lt;/p&gt;
&lt;p&gt;Using &lt;code&gt;fread()&lt;/code&gt; and &lt;code&gt;fwrite()&lt;/code&gt; I can slam together a command-line menu-based
&lt;span class="caps"&gt;PHP&lt;/span&gt; script for administration quicker than I could write the def&amp;#8217;s for a
Python script. I&amp;#8217;ve done it, I have a number of &lt;span class="caps"&gt;PHP&lt;/span&gt; &lt;span class="caps"&gt;CLI&lt;/span&gt;-based scripts
running on my machines. Database access with &lt;span class="caps"&gt;PHP&lt;/span&gt; is a no-brainer. And
one day, when I get around to reading my &amp;#8220;ancient&amp;#8221; pile of books and
learning NCurses, &lt;span class="caps"&gt;PHP&lt;/span&gt; will be right there with&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;So I guess it is just a fact of the modern web mentality. But &lt;span class="caps"&gt;PHP&lt;/span&gt; has
myriad uses aside from web applications and web content handling. Sure,
my web site is written in it. But one of my backup scripts is, too. And
more importantly, if I&amp;#8217;m working with a database that already has a
&lt;span class="caps"&gt;PHP&lt;/span&gt;-based web frontend, &lt;span class="caps"&gt;PHP&lt;/span&gt; seems like the natural choice for a
&lt;span class="caps"&gt;CLI&lt;/span&gt;-based administration&amp;nbsp;backend.&lt;/p&gt;</content><category term="command line"></category><category term="computer science"></category><category term="PHP"></category><category term="programming"></category><category term="web programming"></category></entry></feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jason Antman's Blog - openssh</title><link href="http://blog.jasonantman.com/" rel="alternate"></link><link href="http://blog.jasonantman.com/feeds/tags/openssh.atom.xml" rel="self"></link><id>http://blog.jasonantman.com/</id><updated>2016-08-27T11:22:00-04:00</updated><entry><title>OpenSSH changing hostnames based on location</title><link href="http://blog.jasonantman.com/2016/08/openssh-changing-hostnames-based-on-location/" rel="alternate"></link><published>2016-08-27T11:22:00-04:00</published><updated>2016-08-27T11:22:00-04:00</updated><author><name>Jason Antman</name></author><id>tag:blog.jasonantman.com,2016-08-27:/2016/08/openssh-changing-hostnames-based-on-location/</id><summary type="html">&lt;p&gt;How to change &lt;span class="caps"&gt;SSH&lt;/span&gt; hostnames based on guessed&amp;nbsp;location&lt;/p&gt;</summary><content type="html">&lt;p&gt;Yesterday I was doing some work on my laptop, SSHed in to my desktop (&amp;#8220;phoenix&amp;#8221;). As
always happens when I&amp;#8217;m using my laptop from home, I kept getting connection errors&amp;#8230;
because my &lt;code&gt;~/.ssh/config&lt;/code&gt; on my laptop is setup with my dynamic &lt;span class="caps"&gt;DNS&lt;/span&gt; hostname and port
to reach my desktop, for any time I&amp;#8217;m out of the house. But those don&amp;#8217;t work while
on the home network, and I got really tired of having to &lt;code&gt;ssh 192.168.0.24&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It turns out that, as long as your&amp;#8217;re using &lt;a href="http://www.openssh.com/txt/release-6.5"&gt;OpenSSH &amp;gt;= 6.5&lt;/a&gt;,
the &lt;code&gt;ssh_config (5)&lt;/code&gt; file (typically &lt;code&gt;~/.ssh/config&lt;/code&gt;) supports a &lt;code&gt;Match&lt;/code&gt; directive
that can execute system commands, and either match or not based on exit&amp;nbsp;code.&lt;/p&gt;
&lt;p&gt;I came up with relatively naive script that tries to determine whether or not I&amp;#8217;m on my
home network based on a combination of &lt;code&gt;resolv.conf&lt;/code&gt; settings, &lt;span class="caps"&gt;IP&lt;/span&gt; address and WiFi&amp;nbsp;&lt;span class="caps"&gt;SSID&lt;/span&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;# test if I&amp;#39;m on my home network,&lt;/span&gt;
&lt;span class="c1"&gt;# for &lt;span class="caps"&gt;SSH&lt;/span&gt; matching. Somewhat naive.&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# For use in ~/.ssh/config Match directive;&lt;/span&gt;
&lt;span class="c1"&gt;# exit 0 if I&amp;#39;m at home, exit 1 otherwise&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# To debug, run script directly as `bash -x am_i_am_home.sh`&lt;/span&gt;
&lt;span class="c1"&gt;########&lt;/span&gt;

&lt;span class="c1"&gt;# check that I&amp;#39;ve got the right nameserver and search domain; exit otherwise&lt;/span&gt;
grep -q &lt;span class="s1"&gt;&amp;#39;jasonantman.com&amp;#39;&lt;/span&gt; /etc/resolv.conf &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
grep &lt;span class="s1"&gt;&amp;#39;^nameserver&amp;#39;&lt;/span&gt; /etc/resolv.conf &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s1"&gt;&amp;#39;192.168.0.1&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;

&lt;span class="c1"&gt;# check that I&amp;#39;ve got a 192.168.0. address; exit otherwise&lt;/span&gt;
ip addr &lt;span class="p"&gt;|&lt;/span&gt; grep -q &lt;span class="s1"&gt;&amp;#39;192.168.0.&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;

&lt;span class="c1"&gt;# check that I&amp;#39;m connected to one of my SSIDs; if so, exit 0 (match)&lt;/span&gt;
nmcli -t -f active,ssid dev wifi &lt;span class="p"&gt;|&lt;/span&gt; grep -q &lt;span class="s1"&gt;&amp;#39;^yes:ObiWAN&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
nmcli -t -f active,ssid dev wifi &lt;span class="p"&gt;|&lt;/span&gt; grep -q &lt;span class="s1"&gt;&amp;#39;^yes:&lt;span class="caps"&gt;WAP1&lt;/span&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;

&lt;span class="c1"&gt;# assume not; no match&lt;/span&gt;
&lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This can be used in my &lt;code&gt;~/.ssh/config&lt;/code&gt; to trigger an initial (internal network)
directive if it exits 0, and fall through to the external-network directive otherwise,
as shown below. The &lt;code&gt;originalhost phoenix&lt;/code&gt; portion of the &lt;code&gt;Match&lt;/code&gt; line ensures
that it&amp;#8217;s only executed if I &lt;code&gt;ssh phoenix&lt;/code&gt;, so it doesn&amp;#8217;t conflict with other
host&amp;nbsp;directives.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# phoenix when at home
Match originalhost phoenix exec &amp;quot;/home/jantman/bin/am_i_at_home.sh&amp;quot;
     HostName phoenix
     Port 22

# fall-through - phoenix when abroad
Host phoenix
     HostName my_dynamic_hostname
     Port &amp;lt;something other than 22&amp;gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="openssh"></category><category term="ssh"></category></entry><entry><title>Logging OpenSSH SFTP Transactions</title><link href="http://blog.jasonantman.com/2012/07/logging-openssh-sftp-transactions/" rel="alternate"></link><published>2012-07-16T08:47:00-04:00</published><updated>2012-07-16T08:47:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2012-07-16:/2012/07/logging-openssh-sftp-transactions/</id><summary type="html">&lt;p&gt;I just came across a really handy post on &lt;a href="https://plus.google.com/117561367404774597588/posts"&gt;David
Busby&lt;/a&gt;&amp;#8216;s blog:
&lt;a href="http://blog.oneiroi.co.uk/linux/enable-logging-in-the-sftp-subsystem/"&gt;Enable logging in the &lt;span class="caps"&gt;SFTP&lt;/span&gt; subsystem -
Oneiroi&lt;/a&gt;.
From OpenSSH 4.4 on, you can pass arguments to Subsystem calls, and the
sftp subsystem supports logging to an aribtrary syslog facility and
priority. Simply adding a line&amp;nbsp;like …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I just came across a really handy post on &lt;a href="https://plus.google.com/117561367404774597588/posts"&gt;David
Busby&lt;/a&gt;&amp;#8216;s blog:
&lt;a href="http://blog.oneiroi.co.uk/linux/enable-logging-in-the-sftp-subsystem/"&gt;Enable logging in the &lt;span class="caps"&gt;SFTP&lt;/span&gt; subsystem -
Oneiroi&lt;/a&gt;.
From OpenSSH 4.4 on, you can pass arguments to Subsystem calls, and the
sftp subsystem supports logging to an aribtrary syslog facility and
priority. Simply adding a line&amp;nbsp;like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Subsystem       sftp    /usr/libexec/openssh/sftp-server -f &lt;span class="caps"&gt;LOCAL5&lt;/span&gt; -l &lt;span class="caps"&gt;INFO&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and the appropriate lines to your syslog config will give you a handy
transfer log&amp;nbsp;like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Jul 16 09:22:25 hostname sftp-server[2058]: session opened for local user jantman from [&lt;span class="caps"&gt;A.B.C.&lt;/span&gt;D]
Jul 16 09:22:26 hostname sftp-server[2058]: open &amp;quot;/home/jantman/temp/sftp_test&amp;quot; flags &lt;span class="caps"&gt;WRITE&lt;/span&gt;,&lt;span class="caps"&gt;CREATE&lt;/span&gt;,&lt;span class="caps"&gt;TRUNCATE&lt;/span&gt; mode 0666
Jul 16 09:22:45 hostname sftp-server[2058]: close &amp;quot;/home/jantman/temp/sftp_test&amp;quot; bytes read 0 written 1464813
Jul 16 09:23:08 hostname sftp-server[2058]: session closed for local user jantman from [&lt;span class="caps"&gt;A.B.C.&lt;/span&gt;D]
Jul 16 09:27:50 hostname sftp-server[2309]: session opened for local user jantman from [&lt;span class="caps"&gt;A.B.C.&lt;/span&gt;D]
Jul 16 09:27:50 hostname sftp-server[2309]: open &amp;quot;/home/jantman/temp/sftp_test&amp;quot; flags &lt;span class="caps"&gt;READ&lt;/span&gt; mode 0666
Jul 16 09:27:54 hostname sftp-server[2309]: close &amp;quot;/home/jantman/temp/sftp_test&amp;quot; bytes read 1464813 written 0
Jul 16 09:27:54 hostname sftp-server[2309]: session closed for local user jantman from [&lt;span class="caps"&gt;A.B.C.&lt;/span&gt;D]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you have syslog write these logs to their own file, remember to setup
log rotation for&amp;nbsp;them.&lt;/p&gt;
&lt;p&gt;Unfortunately, I&amp;#8217;m not aware of any way to log &lt;span class="caps"&gt;SCP&lt;/span&gt; file&amp;nbsp;transfers.&lt;/p&gt;</content><category term="logging"></category><category term="openssh"></category><category term="sftp"></category><category term="ssh"></category></entry><entry><title>HP Prolaint iLO SSH Problems</title><link href="http://blog.jasonantman.com/2009/06/hp-prolaint-ilo-ssh-problems/" rel="alternate"></link><published>2009-06-11T23:52:00-04:00</published><updated>2009-06-11T23:52:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2009-06-11:/2009/06/hp-prolaint-ilo-ssh-problems/</id><summary type="html">&lt;p&gt;There&amp;#8217;s a known issue with the &lt;span class="caps"&gt;SSH&lt;/span&gt; implementation in the iLO firmware
for &lt;span class="caps"&gt;HP&lt;/span&gt; Proliant servers (specifically G2 and G3) and OpenSSH 5.1p1.
There was a
&lt;a href="http://marc.info/?l=openssh-unix-dev&amp;amp;m=122095298729858&amp;amp;w=2"&gt;thread&lt;/a&gt; on
the OpenSSH developers list that referenced this problem and suggested a
solution, but it doesn&amp;#8217;t seem to be a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;There&amp;#8217;s a known issue with the &lt;span class="caps"&gt;SSH&lt;/span&gt; implementation in the iLO firmware
for &lt;span class="caps"&gt;HP&lt;/span&gt; Proliant servers (specifically G2 and G3) and OpenSSH 5.1p1.
There was a
&lt;a href="http://marc.info/?l=openssh-unix-dev&amp;amp;m=122095298729858&amp;amp;w=2"&gt;thread&lt;/a&gt; on
the OpenSSH developers list that referenced this problem and suggested a
solution, but it doesn&amp;#8217;t seem to be a sure&amp;nbsp;fix.&lt;/p&gt;
&lt;p&gt;This problem is present on my &lt;span class="caps"&gt;DL360&lt;/span&gt; G2&amp;#8217;s which are running the 1.84
2006-05-05 version of the iLO firmware (iLO 1.84 pass9) with the P26
2004.05.01 version of the system firmware. I also see the issue on a
&lt;span class="caps"&gt;DL380G3&lt;/span&gt; running iLO 1.92 2008.04.24 and system firmware P29 2004.09.15.
The only way that I can reliably get into the iLO is by SSHing from a
box with an older version of &lt;span class="caps"&gt;SSH&lt;/span&gt;, such as&amp;nbsp;4.2p1.&lt;/p&gt;
&lt;p&gt;Most of the things that I could find online referenced unsetting the
&lt;span class="caps"&gt;LANG&lt;/span&gt; environment variable (&lt;code&gt;unset LANG&lt;/code&gt;) and then SSHing with agent forwarding disabled (&lt;code&gt;ssh -a hostname-ilo&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Unfortunately this combination doesn&amp;#8217;t seem to do it for&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;I happened to stumble by &lt;a href="http://www.mail-archive.com/debian-ssh@lists.debian.org/msg00904.html"&gt;this
post&lt;/a&gt;
to the debian-ssh mailing list, which suggested that shortening the new
OpenSSH version string fixed the&amp;nbsp;problem.&lt;/p&gt;
&lt;p&gt;I was able to confirm that the version string is, in fact, the sole
problem. I downloaded the source of OpenSSH 5.2p1 and, with the
following small patch to version.h, managed to get &lt;span class="caps"&gt;SSH&lt;/span&gt; working to the
iLO&amp;nbsp;perfectly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gd"&gt;--- openssh-patched/version.h   2009-06-12 00:35:48.000000000 -0400&lt;/span&gt;
&lt;span class="gi"&gt;+++ openssh-5.2p1/version.h     2009-02-22 19:09:26.000000000 -0500&lt;/span&gt;
&lt;span class="gu"&gt;@@ -1,6 +1,6 @@&lt;/span&gt;
 /* $OpenBSD: version.h,v 1.55 2009/02/23 00:06:15 djm Exp $ */

&lt;span class="gd"&gt;-#define SSH_VERSION    &amp;quot;OpenSSH&amp;quot;&lt;/span&gt;
&lt;span class="gi"&gt;+#define SSH_VERSION    &amp;quot;OpenSSH_5.2&amp;quot;&lt;/span&gt;

&lt;span class="gd"&gt;-#define SSH_PORTABLE   &amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="gi"&gt;+#define SSH_PORTABLE   &amp;quot;p1&amp;quot;&lt;/span&gt;
 #define SSH_RELEASE    SSH_VERSION SSH_PORTABLE
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I patched version.h, ran &lt;code&gt;./configure&lt;/code&gt;, &lt;code&gt;make&lt;/code&gt;, and then copied the
compiled ssh binary to /usr/bin/ilossh, so that my original ssh binary
would be intact, and the ilossh binary would be left alone by &lt;span class="caps"&gt;RPM&lt;/span&gt;&amp;nbsp;upgrades.&lt;/p&gt;</content><category term="ilo"></category><category term="openssh"></category><category term="proliant"></category><category term="ssh"></category></entry></feed>
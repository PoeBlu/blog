<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jason Antman's Blog</title><link>http://newblog.jasonantman.com/</link><description></description><atom:link href="http://newblog.jasonantman.com/feeds/tags/hacker.rss.xml" rel="self"></atom:link><lastBuildDate>Tue, 02 Mar 2010 21:45:00 -0500</lastBuildDate><item><title>The Newest Generation ofÂ Hackers</title><link>http://newblog.jasonantman.com/2010/03/the-newest-generation-of-hackers/</link><description>&lt;p&gt;&lt;em&gt;Note for non-technical readers (not that I expect there to be many).
The title of this post includes the word &amp;#8220;hacker&amp;#8221;. If you think that has
anything to do with illegal acts or unethical behavior, you&amp;#8217;ve fallen
victim to what happens when the mainstream media latches on to a term
they don&amp;#8217;t understand. The
&lt;a href="http://www.catb.org/jargon/html/H/hacker.html"&gt;definition&lt;/a&gt; of
this word is far from negative. Within the geek community, the title
&amp;#8220;hacker&amp;#8221; is the utmost compliment - something like Grand Master in the
martial arts, or perhaps whatever title is given to an eminent artist.
It both describes someone who is an expert in their field. Or, more
generally, someone who enjoys seeking knowledge simply for the sake of
knowledge - figuring out how things work, how to make them, and how to
make them better. If you&amp;#8217;re looking for a term that describes a
criminal, &amp;#8220;attacker&amp;#8221;, &amp;#8220;malicious user&amp;#8221; or &amp;#8220;computer criminal&amp;#8221; work fine.
While I wouldn&amp;#8217;t by any extent consider myself a hacker in the
super-genius-wizard sense of the term, I do definitely subscribe to the
hacker ethic - the burning need to figure out how things work and make
them&amp;nbsp;better.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Thanks to the snow at the end of last week, and a long weekend, I
actually got to do some reading that didn&amp;#8217;t involve man pages or books
strictly about software. I finally finished &lt;a href="http://www.amazon.com/Daemon-Gnu-Penguin-Peter-Salus/dp/097903423X"&gt;The Daemon, the Gnu, and
the
Penguin&lt;/a&gt;
by Peter H. Salus, a wonderful book (with a great foreword by maddog
Hall). I also &lt;em&gt;finally&lt;/em&gt; got a chance to start reading &lt;a href="http://www.amazon.com/Cathedral-Bazaar-Musings-Accidental-Revolutionary/dp/0596001088/"&gt;The Cathedral &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt;
the Bazaar: Musings on Linux and Open Source by an Accidental
Revolutionary&lt;/a&gt;
by Eric S. Raymond (&lt;span class="caps"&gt;ESR&lt;/span&gt;). I&amp;#8217;m only up to page 50 or so, but it&amp;#8217;s an
equally good book, and I&amp;#8217;ve been looking forward to reading it for&amp;nbsp;years.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve always been very interested in history (heck, I have a minor in
it), and specifically the history of my other interests. When
photography took up most of my time, I read every photo history book I
could get my hands on (including many primary sources on now-archaic
techniques). In the past few years, I&amp;#8217;ve been amassing books on
computing history (specifically &lt;span class="caps"&gt;ARPANET&lt;/span&gt;/the Internet and Unix/Linux/Free
software) at a near-alarming&amp;nbsp;rate.&lt;/p&gt;
&lt;p&gt;Through all of my reading, two main things have struck me: the utterly
amazing feats accomplished by previous generations, and how my own
generation takes them for granted. I was born in 1987 which, I feel,
makes me part of a very small group who were lucky enough to grow up
during the real rise of the Internet. I remember playing simple games on
my grandmother&amp;#8217;s (business) &lt;span class="caps"&gt;386DX&lt;/span&gt; long before I could read most of the
words on the screen. But I also remember my father dialing in to an &lt;span class="caps"&gt;ISP&lt;/span&gt;
(I honestly don&amp;#8217;t remember which one) on a 9600 baud serial modem, and
how unique that was at the time (at least among kids my age). By 13 or
so, I had a 10BaseT network in my house, sharing a 56k dial-up
connection between two computers. I feel that I&amp;#8217;m part of a short
historical period of kids who &amp;#8220;grew up&amp;#8221; with computers, used them in
middle school, are perfectly at home with them, but still remember
dial-up, the launch of Windows 98, and ordering Linux on CDs because you
just couldn&amp;#8217;t get it any other way (too young to have access to the
resources of a college, only&amp;nbsp;dial-up).&lt;/p&gt;
&lt;p&gt;Anyway, on to my&amp;nbsp;point&amp;#8230;&lt;/p&gt;
&lt;p&gt;As I read about those who stepped before me (and my generation), those
who thought up such amazing ideas as Unix, the Internet, networking and
most of the software and protocols we have today, I realize how big
their shoes are, and how difficult it will be for the next generation to
fill them. Sure, we have Facebook, &lt;span class="caps"&gt;RSS&lt;/span&gt; feeds, Web 2.0 and smartphones,
but will we be able to innovate on the level that those who came before
us did? And then it strikes me how much we young aspiring hackers take
for granted. How many aspects of technology today would be seemed
impossible 20 years ago, but we use without a second&amp;nbsp;thought.&lt;/p&gt;
&lt;p&gt;The last generation of hackers and programmers were raised on software
distribution tapes. Their idea of &amp;#8220;open&amp;#8221; was formed by what they were
used to - a Cathedral development model, with regular releases
(production, perhaps beta, perhaps even less) and accompanying source
code. However, in the pre-Internet days, they were still bound by
physical media. They were still bound to the Cathedral development
model, to a small and tight-knit group of sages determining when the
world was ready to see the fruits of their&amp;nbsp;labor.&lt;/p&gt;
&lt;p&gt;The current generation - those of us just out of college or grad school,
or even younger - think of Linux as the quintessential open source
project. For those of us who came into computing when Linux was already
around (I first ran Linux in 2001 when, at 14, I bought the
newly-released &lt;span class="caps"&gt;CD&lt;/span&gt; set of SuSE 7.3), Linux sets the bar. It&amp;#8217;s what we
were raised on (at least in terms of open source). Fixed releases - even
with source - seem antiquated, pre-Internet, our fathers&amp;#8217; open source.
To us, open means nightly builds, world-readable ticket/bug trackers,
anonymous Git or &lt;span class="caps"&gt;SVN&lt;/span&gt; access, and &lt;span class="caps"&gt;RSS&lt;/span&gt; feeds of every commit. It means
being able to see every line of code at every moment in time, even if
we&amp;#8217;ve never e-mailed one of the&amp;nbsp;developers.&lt;/p&gt;
&lt;p&gt;Even just a few years ago, the word &amp;#8220;open&amp;#8221; was used by vendors to mean
almost anything - everything from software based on Linux, to software
that included source (regardless of the license) to software that just
used (patent encumbered) documented protocols or formats. For the next
generation, even the generation entering the workforce now, open means
much more. It means transparency in development, in code, in
documentation, in&amp;nbsp;management.&lt;/p&gt;
&lt;p&gt;Many times, I&amp;#8217;ve found an &amp;#8220;open&amp;#8221; software project, and searched their
web site endlessly looking for links to Git or &lt;span class="caps"&gt;SVN&lt;/span&gt; or &lt;span class="caps"&gt;CVS&lt;/span&gt;. Or looked
endlessly for the (internal) bug tracker. Every time, I had to remind
myself that the world, even many of the open source projects, are still
far behind my expectations. Even Google&amp;#8217;s Android Open Source project
only has code merged in periodically from the production (closed) tree,
and maintains a separate bug tracker. Far from my expectation of just
having some parts of the tree unavailable on the Internet, and some
classes of bugs filtered out from public&amp;nbsp;view.&lt;/p&gt;
&lt;p&gt;Nobody - not even Microsoft - can deny that the world is moving more and
more to open source. It&amp;#8217;s already the de-facto standard on the Internet,
but it&amp;#8217;s moving more and more to the desktop every day. And, as this
happens, the expectations of what open means (increasingly more
transparent than just &amp;#8220;open&amp;#8221;) are also increasing. The software world -
both proprietary and open source - will have to keep up. And, hopefully,
as the generation raised on the Internet begins to fill the ranks of
geeks in the workforce, we&amp;#8217;ll see more and more open source&amp;nbsp;usage.&lt;/p&gt;
&lt;p&gt;As a side note, I&amp;#8217;d be very interested to see how open source use
compares to demographics. I know that Linux use (on student-owned
computers) at most colleges is way above the global average, and the
same goes for&amp;nbsp;Firefox.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Tue, 02 Mar 2010 21:45:00 -0500</pubDate><guid>tag:newblog.jasonantman.com,2010-03-02:2010/03/the-newest-generation-of-hackers/</guid><category>free</category><category>hacker</category><category>linux</category><category>open source</category><category>svn</category></item></channel></rss>
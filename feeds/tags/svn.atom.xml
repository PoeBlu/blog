<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jason Antman's Blog</title><link href="http://blog.jasonantman.com/" rel="alternate"></link><link href="http://blog.jasonantman.com/feeds/tags/svn.atom.xml" rel="self"></link><id>http://blog.jasonantman.com/</id><updated>2012-03-25T12:11:00-04:00</updated><entry><title>CVS to SVN to Git</title><link href="http://blog.jasonantman.com/2012/03/cvs-to-svn-to-git/" rel="alternate"></link><updated>2012-03-25T12:11:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2012-03-25:2012/03/cvs-to-svn-to-git/</id><summary type="html">&lt;p&gt;Thanks to some new interest, I&amp;#8217;ve decided to resurrect an old project of
mine, &lt;a href="http://www.php-ems-tools.com"&gt;&lt;span class="caps"&gt;PHP&lt;/span&gt; &lt;span class="caps"&gt;EMS&lt;/span&gt; Tools&lt;/a&gt;. It&amp;#8217;s a web-based
tool for small emergency services organizations, mainly aimed at
volunteer &lt;span class="caps"&gt;EMS&lt;/span&gt;/ambulance providers. The tool handles roster tracking,
scheduling, equipment maintenance and checks, and a bunch of other
administrative tasks. I first started it in 2007 for the &lt;a href="http://www.midlandparkambulance.com"&gt;Midland Park
Ambulance Corps&lt;/a&gt; (&lt;span class="caps"&gt;MPAC&lt;/span&gt;), which I
was a volunteer &lt;span class="caps"&gt;EMT&lt;/span&gt; with from 2005 through 2011. I&amp;#8217;ll admit that it&amp;#8217;s a
perfect model of how not to run a software project. The first few
releases are plain awful code. I was keeping the project in &lt;span class="caps"&gt;CVS&lt;/span&gt; at the
time, and posted some early releases on
&lt;a href="http://sourceforge.net/projects/php-ems-tools/"&gt;sourceforge&lt;/a&gt; and
FreshMeat, now &lt;a href="http://freecode.com/projects/php-ems-tools"&gt;FreeCode&lt;/a&gt;.
Sometime in 2009, I migrated the contents of the trunk of the &lt;span class="caps"&gt;CVS&lt;/span&gt; module
to a &lt;a href="http://svn.jasonantman.com/php-ems-tools/"&gt;&lt;span class="caps"&gt;SVN&lt;/span&gt; repository&lt;/a&gt;, but
discarded the history. I also setup a MediaWiki-based website for the
project, giving some information and mainly asking for feedback. Around
that time I started working on a new and heavily updated (fixed) version
for &lt;span class="caps"&gt;MPAC&lt;/span&gt;, but since it appeared that there was no interest in the
project, and there were many many local customizations and
organization-specific features, I let their codebase diverge from what
was released, and as a result, stopped keeping it in version control.
Until now, when they need to migrate to a new server, and I&amp;#8217;ve also
gotten some outside interest in the&amp;nbsp;project.&lt;/p&gt;
&lt;p&gt;So, as of this morning, I was left with at least four code&amp;nbsp;bases:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the original &lt;a href="http://cvs.jasonantman.com/cgi-bin/viewvc.cgi/cvs/php-ems-tools-trunk/"&gt;&lt;span class="caps"&gt;CVS&lt;/span&gt;
    repository&lt;/a&gt;
    with branches and tags and some history, untouched since&amp;nbsp;2007&lt;/li&gt;
&lt;li&gt;the &lt;a href="http://svn.jasonantman.com/php-ems-tools/"&gt;&lt;span class="caps"&gt;SVN&lt;/span&gt; repository&lt;/a&gt;
    circa 2009, with only 3 commits, all related to the migration from
    &lt;span class="caps"&gt;CVS&lt;/span&gt; to&amp;nbsp;&lt;span class="caps"&gt;SVN&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;a &amp;#8220;release&amp;#8221; tarball that at least one outside organization is
    actually&amp;nbsp;using.&lt;/li&gt;
&lt;li&gt;the code that &lt;span class="caps"&gt;MPAC&lt;/span&gt; is running, which has been largely rewritten
    since 2009, but also contains a lot of organization-specific&amp;nbsp;customizations.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As a first step, I created a new &lt;span class="caps"&gt;SVN&lt;/span&gt; repository and migrated the
original &lt;span class="caps"&gt;CVS&lt;/span&gt; repo, complete with history, branches, and tags, to it
using &lt;a href="http://cvs2svn.tigris.org/"&gt;cvs2svn&lt;/a&gt;, and then removed write
permissions on the actual module in the repository. This gave me a &lt;span class="caps"&gt;SVN&lt;/span&gt;
repository with all of the history of previous so-called releases, with
a trunk matching r1 of the &amp;#8220;current&amp;#8221; &lt;span class="caps"&gt;SVN&lt;/span&gt; repository. I then manually
applied patches to trunk/ for the two commits in the current &lt;span class="caps"&gt;SVN&lt;/span&gt;
repository, and set the svn:date revision property to the correct 2009
date for those commits. I also confirmed that the correct tag matches up
to the &amp;#8220;release&amp;#8221; tarball mentioned above. So, I&amp;#8217;m down to a &amp;#8220;current&amp;#8221;
trunk, plus the locally modified code running on &lt;span class="caps"&gt;MPAC&lt;/span&gt;&amp;#8217;s current server.
My plan of action from this point is as&amp;nbsp;follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Move the &lt;span class="caps"&gt;PHP&lt;/span&gt; &lt;span class="caps"&gt;EMS&lt;/span&gt; Tools website from Mediawiki to my local redmine
    installation, and update the news with a link to this&amp;nbsp;post.&lt;/li&gt;
&lt;li&gt;Migrate the &lt;span class="caps"&gt;SVN&lt;/span&gt; repository, which now contains full history, to Git
    hosted at Github. Add Github integration to&amp;nbsp;Redmine.&lt;/li&gt;
&lt;li&gt;Update freshmeat, sourceforge, and anywhere else online that knows
    about the&amp;nbsp;project.&lt;/li&gt;
&lt;li&gt;Working in a git branch, begin converging the code &lt;span class="caps"&gt;MPAC&lt;/span&gt; is currently
    running with the latest (now git) trunk, trying to provide
    configuration options for anything organization specific, and
    testing as I&amp;nbsp;go.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If all works well, I&amp;#8217;ll end up with &lt;span class="caps"&gt;MPAC&lt;/span&gt; running the current trunk, just
some different configuration options, and a working, up-to-date release.
The biggest issues are going to be how I handle the &lt;span class="caps"&gt;MPAC&lt;/span&gt;-specific
additions and customizations (a lot of stuff hard-coded for our position
titles, plus our very custom call report and telephone-based call-in
software, which is pretty tightly linked with the &lt;span class="caps"&gt;PHP&lt;/span&gt; &lt;span class="caps"&gt;EMS&lt;/span&gt; Tools core),
and how I balance abstracting things to be configurable for other users
versus getting this all done in a reasonable amount of&amp;nbsp;time.&lt;/p&gt;
&lt;p&gt;Stay&amp;nbsp;tuned&amp;#8230;&lt;/p&gt;</summary><category term="cvs"></category><category term="git"></category><category term="svn"></category><category term="version control"></category></entry><entry><title>Adding Piwik Web Analytics Integration to ViewVC</title><link href="http://blog.jasonantman.com/2012/03/adding-piwik-web-analytics-integration-to-viewvc/" rel="alternate"></link><updated>2012-03-23T21:15:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2012-03-23:2012/03/adding-piwik-web-analytics-integration-to-viewvc/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Update February 2014:&lt;/strong&gt; Give up the analytics, and just host your code
on &lt;a href="https://github.com"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All of my public &lt;a href="http://viewvc.jasonantman.com"&gt;subversion
repositories&lt;/a&gt; and &lt;a href="http://cvs.jasonantman.com"&gt;&lt;span class="caps"&gt;CVS&lt;/span&gt;
repositories&lt;/a&gt; are available online through a
great Python application called &lt;a href="http://viewvc.org/"&gt;ViewVC&lt;/a&gt;, which
provides a web-based interface to &lt;span class="caps"&gt;CVS&lt;/span&gt; and &lt;span class="caps"&gt;SVN&lt;/span&gt; repositories, as well as
history browsing, graphical diffs, etc. An amazingly large amount of the
traffic to my web server is for the vhosts that serve this, so I decided
that I should add some analytics to it. I&amp;#8217;m in the process of trying out
&lt;a href="http://piwik.org"&gt;Piwik&lt;/a&gt;, a full-featured, &lt;span class="caps"&gt;GPL&lt;/span&gt;-licensed, self-hosted
alternative to &lt;a href="http://www.google.com/analytics/"&gt;Google Analytics&lt;/a&gt;. It
gives lots of useful information like number of visits and unique visits
per page, search engine keywords, referrers, average time on page,
bounce rate (number of one-page visits),&amp;nbsp;etc.&lt;/p&gt;
&lt;p&gt;I have ViewVC installed from the &lt;a href="http://pkgs.repoforge.org/viewvc/"&gt;RPMforge
packages&lt;/a&gt;, so there&amp;#8217;s one code base
for both of my vhosts. This means that I can&amp;#8217;t simply slap the tracking
code at the bottom of the templates and call it a day. I opted to go for
a nicer solution, and what follows is a patch (diff -u) to the current
(1.1.13) version of ViewVC that adds a &amp;#8220;piwik&amp;#8221; section to viewvc.conf,
and adds the piwik tracking code with the specified base &lt;span class="caps"&gt;URL&lt;/span&gt; and site &lt;span class="caps"&gt;ID&lt;/span&gt;
into all ViewVC pages.&amp;nbsp;Enjoy.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gh"&gt;diff -ru viewvc-&lt;span class="caps"&gt;ORIG&lt;/span&gt;/lib/config.py viewvc/lib/config.py&lt;/span&gt;
&lt;span class="gd"&gt;--- viewvc-&lt;span class="caps"&gt;ORIG&lt;/span&gt;/lib/config.py   2012-01-25 08:31:52.000000000 -0500&lt;/span&gt;
&lt;span class="gi"&gt;+++ viewvc/lib/config.py    2012-03-23 21:57:08.000000000 -0400&lt;/span&gt;
&lt;span class="gu"&gt;@@ -108,6 +108,7 @@&lt;/span&gt;
     &amp;#39;query&amp;#39;,
     &amp;#39;templates&amp;#39;,
     &amp;#39;utilities&amp;#39;,
&lt;span class="gi"&gt;+    &amp;#39;piwik&amp;#39;,&lt;/span&gt;
     )
   _force_multi_value = (
     # Configuration values with multiple, comma-separated values.
&lt;span class="gu"&gt;@@ -127,6 +128,7 @@&lt;/span&gt;
                &amp;#39;options&amp;#39;,
                &amp;#39;templates&amp;#39;,
                &amp;#39;utilities&amp;#39;,
&lt;span class="gi"&gt;+               &amp;#39;piwik&amp;#39;,&lt;/span&gt;
                ),
     &amp;#39;root&amp;#39;  : (&amp;#39;authz-*&amp;#39;,
                &amp;#39;options&amp;#39;,
&lt;span class="gu"&gt;@@ -461,7 +463,14 @@&lt;/span&gt;
     self.cvsdb.check_database_for_root = 0

     self.query.viewvc_base_url = None
&lt;span class="gd"&gt;-    &lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+    # begin  patch for piwik integration&lt;/span&gt;
&lt;span class="gi"&gt;+    self.piwik.use_piwik = 0&lt;/span&gt;
&lt;span class="gi"&gt;+    self.piwik.base_url = &amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="gi"&gt;+    self.piwik.site_id = &amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="gi"&gt;+    self.piwik.use_jsindex = 0&lt;/span&gt;
&lt;span class="gi"&gt;+    # end  patch for piwik integration&lt;/span&gt;
&lt;span class="gi"&gt;+   &lt;/span&gt;
 def _startswith(somestr, substr):
   return somestr[:len(substr)] == substr

&lt;span class="gh"&gt;diff -ru viewvc-&lt;span class="caps"&gt;ORIG&lt;/span&gt;/templates/include/footer.ezt viewvc/templates/include/footer.ezt&lt;/span&gt;
&lt;span class="gd"&gt;--- viewvc-&lt;span class="caps"&gt;ORIG&lt;/span&gt;/templates/include/footer.ezt    2012-01-25 08:31:52.000000000 -0500&lt;/span&gt;
&lt;span class="gi"&gt;+++ viewvc/templates/include/footer.ezt 2012-03-23 22:03:04.000000000 -0400&lt;/span&gt;
&lt;span class="gu"&gt;@@ -13,5 +13,17 @@&lt;/span&gt;



&lt;span class="gi"&gt;+[is cfg.piwik.use_piwik &amp;quot;1&amp;quot;]&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+var pkBaseURL = ((&amp;quot;https:&amp;quot; == document.location.protocol) ? &amp;quot;https://[cfg.piwik.base_url]/&amp;quot; : &amp;quot;http://[cfg.piwik.base_url]/&amp;quot;);&lt;/span&gt;
&lt;span class="gi"&gt;+document.write(unescape(&amp;quot;%3Cscript src=&amp;#39;&amp;quot; + pkBaseURL + &amp;quot;[is cfg.piwik.use_jsindex &amp;quot;1&amp;quot;]js/[else]piwik.js[end]&amp;#39; type=&amp;#39;text/javascript&amp;#39;%3E%3C/script%3E&amp;quot;));&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+try {&lt;/span&gt;
&lt;span class="gi"&gt;+var piwikTracker = Piwik.getTracker(pkBaseURL + &amp;quot;piwik.php&amp;quot;, [cfg.piwik.site_id]);&lt;/span&gt;
&lt;span class="gi"&gt;+piwikTracker.trackPageView();&lt;/span&gt;
&lt;span class="gi"&gt;+piwikTracker.enableLinkTracking();&lt;/span&gt;
&lt;span class="gi"&gt;+} catch( err ) {}&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+[else][end]&lt;/span&gt;


Only in viewvc-&lt;span class="caps"&gt;ORIG&lt;/span&gt;/templates/include: header.ezt~
&lt;span class="gh"&gt;diff -ru viewvc-&lt;span class="caps"&gt;ORIG&lt;/span&gt;/viewvc.conf.dist viewvc/viewvc.conf.dist&lt;/span&gt;
&lt;span class="gd"&gt;--- viewvc-&lt;span class="caps"&gt;ORIG&lt;/span&gt;/viewvc.conf.dist    2012-01-25 08:31:52.000000000 -0500&lt;/span&gt;
&lt;span class="gi"&gt;+++ viewvc/viewvc.conf.dist 2012-03-23 21:44:02.000000000 -0400&lt;/span&gt;
&lt;span class="gu"&gt;@@ -1131,3 +1131,29 @@&lt;/span&gt;
 #viewvc_base_url =

 ##---------------------------------------------------------------------------
&lt;span class="gi"&gt;+[piwik]&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+## This section enables Piwik  web analytics tracking.&lt;/span&gt;
&lt;span class="gi"&gt;+## If piwik is enabled (use_piwik = 1) all other options must be specified.&lt;/span&gt;
&lt;span class="gi"&gt;+##&lt;/span&gt;
&lt;span class="gi"&gt;+## This is based on a patch by Jason Antman  &lt;/span&gt;
&lt;span class="gi"&gt;+## to ViewVC 1.1.13, written 2012-03-23.&lt;/span&gt;
&lt;span class="gi"&gt;+## The latest version of the patch, and information on it, can always be found at:&lt;/span&gt;
&lt;span class="gi"&gt;+## &lt;/span&gt;
&lt;span class="gi"&gt;+##&lt;/span&gt;
&lt;span class="gi"&gt;+##&lt;/span&gt;
&lt;span class="gi"&gt;+## To enable piwik, change use_piwik to 1. Set to 0 to disable&lt;/span&gt;
&lt;span class="gi"&gt;+use_piwik = 1&lt;/span&gt;
&lt;span class="gi"&gt;+##&lt;/span&gt;
&lt;span class="gi"&gt;+## Set base_url to the hostname and path to your piwik installation, with no trailing slash.&lt;/span&gt;
&lt;span class="gi"&gt;+## i.e. piwik.example.com or www.example.com/piwik&lt;/span&gt;
&lt;span class="gi"&gt;+base_url = piwik.example.com&lt;/span&gt;
&lt;span class="gi"&gt;+##&lt;/span&gt;
&lt;span class="gi"&gt;+## Set to the numeric id of your website in Piwik&lt;/span&gt;
&lt;span class="gi"&gt;+site_id = 5&lt;/span&gt;
&lt;span class="gi"&gt;+##&lt;/span&gt;
&lt;span class="gi"&gt;+## Set to 1 if you want to use js/index.php to serve the tracking code, &lt;/span&gt;
&lt;span class="gi"&gt;+## or leave at 0 if you want to call piwik.js directly&lt;/span&gt;
&lt;span class="gi"&gt;+use_jsindex = 0&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+##---------------------------------------------------------------------------&lt;/span&gt;
\ No newline at end of file
&lt;/pre&gt;&lt;/div&gt;</summary><category term="analytics"></category><category term="piwik"></category><category term="python"></category><category term="subversion"></category><category term="svn"></category><category term="tracking"></category><category term="viewvc"></category></entry><entry><title>Meld - Graphical Diff Tool for SVN Directories</title><link href="http://blog.jasonantman.com/2012/03/meld-graphical-diff-tool-for-svn-directories/" rel="alternate"></link><updated>2012-03-12T09:48:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2012-03-12:2012/03/meld-graphical-diff-tool-for-svn-directories/</id><summary type="html">&lt;p&gt;I&amp;#8217;ve been in the process of manually merging two directories in a
subversion repo. The second started out as a &amp;#8220;development&amp;#8221; copy of the
first (without branching, unfortunately). Since there&amp;#8217;s quite a few
files, I decided that a graphical diff program is a must. I usually use
&lt;a href="http://kdiff3.sourceforge.net"&gt;kdiff3&lt;/a&gt;, but my requirements for this
are a bit more stringent than usual: it has to handle recursive diffs on
two directories, and it has to be able to ignore &lt;span class="caps"&gt;SVN&lt;/span&gt; keywords (or an
arbitrary regex) since all of the files have keyword substitution on
LastChangedRevision and HeadURL. Kdiff3 supports &lt;a href="http://kdiff3.sourceforge.net/doc/preprocessors.html"&gt;preprocessor
commands&lt;/a&gt; which
can include filtering the text through sed before performing the diff
(so I modified their regex to ignore version control keywords), but for
some reason (perhaps either bimary differences, or metadata differences)
I couldn&amp;#8217;t get the file difference indicator in the diretory tree view
to reflect this; even when ignoring keyword lines and whitespace, it
still showed every pair of files as&amp;nbsp;different.&lt;/p&gt;
&lt;p&gt;Enter &lt;a href="http://meldmerge.org/"&gt;Meld&lt;/a&gt;, a graphical diff project. I&amp;#8217;ve only
used it for half an hour or so, but it seems wonderful. It&amp;#8217;s easy to
use, has a pleasing interface similar to
&lt;a href="http://www.caffeinated.me.uk/kompare/"&gt;Kompare&lt;/a&gt;, and even has simple
check boxes in the options menu to ignore whitespace and &lt;span class="caps"&gt;SVN&lt;/span&gt; keywords -
and they work! So far, I&amp;#8217;m about half way through my 300+ file tree, and
the merge is going&amp;nbsp;wonderfully.&lt;/p&gt;</summary><category term="diff"></category><category term="kde"></category><category term="kdiff"></category><category term="meld"></category><category term="merge"></category><category term="subversion"></category><category term="svn"></category></entry><entry><title>Client-side subversion commit message hooks</title><link href="http://blog.jasonantman.com/2011/01/client-side-subversion-commit-message-hooks/" rel="alternate"></link><updated>2011-01-05T11:23:00-05:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2011-01-05:2011/01/client-side-subversion-commit-message-hooks/</id><summary type="html">&lt;p&gt;While I know this isn&amp;#8217;t best practice, since we use &lt;span class="caps"&gt;LDAP&lt;/span&gt;-based auth for
our Linux boxes (including a sudoers file based on &lt;span class="caps"&gt;LDAP&lt;/span&gt; group
membership), we usually do work on some boxes as root (&lt;code&gt;sudo su -&lt;/code&gt;).
This includes our &lt;a href="http://www.puppetlabs.com/"&gt;puppetmaster&lt;/a&gt;, where
configs are kept in subversion and edited as root. The one problem with
this is how to get the username of the actual committer, not root, in
subversion&amp;nbsp;messages.&lt;/p&gt;
&lt;p&gt;The theory that I came up with is a &lt;a href="/2011/01/how-to-get-actual-login-username-when-using-sudo-su/"&gt;shell script that finds out who the
actual user
is&lt;/a&gt;, and
then tacking this onto the beginning of the subversion commit message
(since there&amp;#8217;s no real way to do client-side hooks in subversion). While
I struggled with subversion&amp;#8217;s lack of good client hooks, I came up with
a theory based on a script that preloads svn-commit.tmp and then calls
the text editor. It&amp;#8217;s actually quite&amp;nbsp;simple.&lt;/p&gt;
&lt;p&gt;First, in your .bashrc or wherever you setup environment variables,
&lt;code&gt;export SVN_EDITOR=/usr/local/bin/svnPreCommitClientHook.sh&lt;/code&gt;. This way,
every time you run &lt;code&gt;svn commit&lt;/code&gt;, instead of calling your text editor
with &lt;code&gt;svn-commit.tmp&lt;/code&gt; as an argument, the bash script will do what it
needs to (commit message preloading) with svn-commit.tmp and &lt;em&gt;then&lt;/em&gt; call
your editor to finish the&amp;nbsp;message.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/usr/local/bin/svnPreCommitClientHook.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;&lt;span class="caps"&gt;LOGNAME&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;/usr/local/bin/getLogname.py&lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="c"&gt;# script to get user&amp;#39;s actual login name, even if using sudo su&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\nBY: $&lt;span class="caps"&gt;LOGNAME&lt;/span&gt;&amp;quot;&lt;/span&gt; &amp;gt; svn-commit.foo
cat svn-commit.tmp &amp;gt;&amp;gt; svn-commit.foo
mv svn-commit.foo svn-commit.tmp
&lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;EDITOR&lt;/span&gt;&amp;quot;&lt;/span&gt; svn-commit.tmp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using this method, running &lt;code&gt;svn commit&lt;/code&gt; will pull up your text editor
with &amp;#8220;&lt;span class="caps"&gt;BY&lt;/span&gt;: username&amp;#8221; already inserted in the commit&amp;nbsp;message.&lt;/p&gt;</summary><category term="linux"></category><category term="puppet"></category><category term="subversion"></category><category term="svn"></category></entry><entry><title>The Newest Generation of Hackers</title><link href="http://blog.jasonantman.com/2010/03/the-newest-generation-of-hackers/" rel="alternate"></link><updated>2010-03-02T21:45:00-05:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2010-03-02:2010/03/the-newest-generation-of-hackers/</id><summary type="html">&lt;p&gt;&lt;em&gt;Note for non-technical readers (not that I expect there to be many).
The title of this post includes the word &amp;#8220;hacker&amp;#8221;. If you think that has
anything to do with illegal acts or unethical behavior, you&amp;#8217;ve fallen
victim to what happens when the mainstream media latches on to a term
they don&amp;#8217;t understand. The
&lt;a href="http://www.catb.org/jargon/html/H/hacker.html"&gt;definition&lt;/a&gt; of
this word is far from negative. Within the geek community, the title
&amp;#8220;hacker&amp;#8221; is the utmost compliment - something like Grand Master in the
martial arts, or perhaps whatever title is given to an eminent artist.
It both describes someone who is an expert in their field. Or, more
generally, someone who enjoys seeking knowledge simply for the sake of
knowledge - figuring out how things work, how to make them, and how to
make them better. If you&amp;#8217;re looking for a term that describes a
criminal, &amp;#8220;attacker&amp;#8221;, &amp;#8220;malicious user&amp;#8221; or &amp;#8220;computer criminal&amp;#8221; work fine.
While I wouldn&amp;#8217;t by any extent consider myself a hacker in the
super-genius-wizard sense of the term, I do definitely subscribe to the
hacker ethic - the burning need to figure out how things work and make
them&amp;nbsp;better.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Thanks to the snow at the end of last week, and a long weekend, I
actually got to do some reading that didn&amp;#8217;t involve man pages or books
strictly about software. I finally finished &lt;a href="http://www.amazon.com/Daemon-Gnu-Penguin-Peter-Salus/dp/097903423X"&gt;The Daemon, the Gnu, and
the
Penguin&lt;/a&gt;
by Peter H. Salus, a wonderful book (with a great foreword by maddog
Hall). I also &lt;em&gt;finally&lt;/em&gt; got a chance to start reading &lt;a href="http://www.amazon.com/Cathedral-Bazaar-Musings-Accidental-Revolutionary/dp/0596001088/"&gt;The Cathedral &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt;
the Bazaar: Musings on Linux and Open Source by an Accidental
Revolutionary&lt;/a&gt;
by Eric S. Raymond (&lt;span class="caps"&gt;ESR&lt;/span&gt;). I&amp;#8217;m only up to page 50 or so, but it&amp;#8217;s an
equally good book, and I&amp;#8217;ve been looking forward to reading it for&amp;nbsp;years.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve always been very interested in history (heck, I have a minor in
it), and specifically the history of my other interests. When
photography took up most of my time, I read every photo history book I
could get my hands on (including many primary sources on now-archaic
techniques). In the past few years, I&amp;#8217;ve been amassing books on
computing history (specifically &lt;span class="caps"&gt;ARPANET&lt;/span&gt;/the Internet and Unix/Linux/Free
software) at a near-alarming&amp;nbsp;rate.&lt;/p&gt;
&lt;p&gt;Through all of my reading, two main things have struck me: the utterly
amazing feats accomplished by previous generations, and how my own
generation takes them for granted. I was born in 1987 which, I feel,
makes me part of a very small group who were lucky enough to grow up
during the real rise of the Internet. I remember playing simple games on
my grandmother&amp;#8217;s (business) &lt;span class="caps"&gt;386DX&lt;/span&gt; long before I could read most of the
words on the screen. But I also remember my father dialing in to an &lt;span class="caps"&gt;ISP&lt;/span&gt;
(I honestly don&amp;#8217;t remember which one) on a 9600 baud serial modem, and
how unique that was at the time (at least among kids my age). By 13 or
so, I had a 10BaseT network in my house, sharing a 56k dial-up
connection between two computers. I feel that I&amp;#8217;m part of a short
historical period of kids who &amp;#8220;grew up&amp;#8221; with computers, used them in
middle school, are perfectly at home with them, but still remember
dial-up, the launch of Windows 98, and ordering Linux on CDs because you
just couldn&amp;#8217;t get it any other way (too young to have access to the
resources of a college, only&amp;nbsp;dial-up).&lt;/p&gt;
&lt;p&gt;Anyway, on to my&amp;nbsp;point&amp;#8230;&lt;/p&gt;
&lt;p&gt;As I read about those who stepped before me (and my generation), those
who thought up such amazing ideas as Unix, the Internet, networking and
most of the software and protocols we have today, I realize how big
their shoes are, and how difficult it will be for the next generation to
fill them. Sure, we have Facebook, &lt;span class="caps"&gt;RSS&lt;/span&gt; feeds, Web 2.0 and smartphones,
but will we be able to innovate on the level that those who came before
us did? And then it strikes me how much we young aspiring hackers take
for granted. How many aspects of technology today would be seemed
impossible 20 years ago, but we use without a second&amp;nbsp;thought.&lt;/p&gt;
&lt;p&gt;The last generation of hackers and programmers were raised on software
distribution tapes. Their idea of &amp;#8220;open&amp;#8221; was formed by what they were
used to - a Cathedral development model, with regular releases
(production, perhaps beta, perhaps even less) and accompanying source
code. However, in the pre-Internet days, they were still bound by
physical media. They were still bound to the Cathedral development
model, to a small and tight-knit group of sages determining when the
world was ready to see the fruits of their&amp;nbsp;labor.&lt;/p&gt;
&lt;p&gt;The current generation - those of us just out of college or grad school,
or even younger - think of Linux as the quintessential open source
project. For those of us who came into computing when Linux was already
around (I first ran Linux in 2001 when, at 14, I bought the
newly-released &lt;span class="caps"&gt;CD&lt;/span&gt; set of SuSE 7.3), Linux sets the bar. It&amp;#8217;s what we
were raised on (at least in terms of open source). Fixed releases - even
with source - seem antiquated, pre-Internet, our fathers&amp;#8217; open source.
To us, open means nightly builds, world-readable ticket/bug trackers,
anonymous Git or &lt;span class="caps"&gt;SVN&lt;/span&gt; access, and &lt;span class="caps"&gt;RSS&lt;/span&gt; feeds of every commit. It means
being able to see every line of code at every moment in time, even if
we&amp;#8217;ve never e-mailed one of the&amp;nbsp;developers.&lt;/p&gt;
&lt;p&gt;Even just a few years ago, the word &amp;#8220;open&amp;#8221; was used by vendors to mean
almost anything - everything from software based on Linux, to software
that included source (regardless of the license) to software that just
used (patent encumbered) documented protocols or formats. For the next
generation, even the generation entering the workforce now, open means
much more. It means transparency in development, in code, in
documentation, in&amp;nbsp;management.&lt;/p&gt;
&lt;p&gt;Many times, I&amp;#8217;ve found an &amp;#8220;open&amp;#8221; software project, and searched their
web site endlessly looking for links to Git or &lt;span class="caps"&gt;SVN&lt;/span&gt; or &lt;span class="caps"&gt;CVS&lt;/span&gt;. Or looked
endlessly for the (internal) bug tracker. Every time, I had to remind
myself that the world, even many of the open source projects, are still
far behind my expectations. Even Google&amp;#8217;s Android Open Source project
only has code merged in periodically from the production (closed) tree,
and maintains a separate bug tracker. Far from my expectation of just
having some parts of the tree unavailable on the Internet, and some
classes of bugs filtered out from public&amp;nbsp;view.&lt;/p&gt;
&lt;p&gt;Nobody - not even Microsoft - can deny that the world is moving more and
more to open source. It&amp;#8217;s already the de-facto standard on the Internet,
but it&amp;#8217;s moving more and more to the desktop every day. And, as this
happens, the expectations of what open means (increasingly more
transparent than just &amp;#8220;open&amp;#8221;) are also increasing. The software world -
both proprietary and open source - will have to keep up. And, hopefully,
as the generation raised on the Internet begins to fill the ranks of
geeks in the workforce, we&amp;#8217;ll see more and more open source&amp;nbsp;usage.&lt;/p&gt;
&lt;p&gt;As a side note, I&amp;#8217;d be very interested to see how open source use
compares to demographics. I know that Linux use (on student-owned
computers) at most colleges is way above the global average, and the
same goes for&amp;nbsp;Firefox.&lt;/p&gt;</summary><category term="free"></category><category term="hacker"></category><category term="linux"></category><category term="open source"></category><category term="svn"></category></entry><entry><title>Subversion ‘is missing or not locked’ error</title><link href="http://blog.jasonantman.com/2010/01/subversion-is-missing-or-not-locked-error/" rel="alternate"></link><updated>2010-01-29T15:58:00-05:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2010-01-29:2010/01/subversion-is-missing-or-not-locked-error/</id><summary type="html">&lt;p&gt;Recently I was doing some work on a few &lt;span class="caps"&gt;PHP&lt;/span&gt; scripts, and came by a
rather annoying error while trying to commit to&amp;nbsp;subversion:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;svn: Commit failed (details follow):
svn: Working copy &amp;#39;/srv/www/htdocs/newcall/stats/generated&amp;#39; is missing or not locked
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The problem was a directory, &amp;#8220;generated&amp;#8221;. This particular app makes use
of &lt;a href="http://naku.dohcrew.com/libchart"&gt;libchart&lt;/a&gt; to draw simple charts in
&lt;span class="caps"&gt;PHP&lt;/span&gt;. Libchart writes the charts to files, and therefore needs a
directory writable by the Apache user. So, I created the &lt;code&gt;generated/&lt;/code&gt;
directory for these output files, and &lt;code&gt;chown&lt;/code&gt;ed &lt;code&gt;wwwrun:www&lt;/code&gt;. Now,
apparently, the subversion &lt;code&gt;svn add&lt;/code&gt; command doesn&amp;#8217;t check
ownership/writable permissions before adding a directory. So, it added
&lt;code&gt;generated/&lt;/code&gt; to the main list of files, but couldn&amp;#8217;t write the &lt;code&gt;.svn&lt;/code&gt;
directory and add a lock. &lt;span class="caps"&gt;IMHO&lt;/span&gt;, this is an error in the svn&amp;nbsp;client.&lt;/p&gt;
&lt;p&gt;I couldn&amp;#8217;t find any solutions to the problem online. Essentially, I have
an empty directory (or at least nothing useful in it) that got partially
added to svn - it was added to the &lt;code&gt;.svn/entries&lt;/code&gt; file in the parent
directory, but never had its own &lt;code&gt;.svn&lt;/code&gt; directory&amp;nbsp;created.&lt;/p&gt;
&lt;p&gt;The only solution that I found is to manually edit the &lt;code&gt;.svn/entries&lt;/code&gt;
file in the parent directory. &lt;strong&gt;&lt;span class="caps"&gt;WARNING&lt;/span&gt;:&lt;/strong&gt; this isn&amp;#8217;t for the faint of
heart. Be sure you don&amp;#8217;t screw anything&amp;nbsp;up.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open the &lt;code&gt;.svn/entries&lt;/code&gt; file in the parent directory in a text
    editor (i.e. if the problem directory is &lt;code&gt;stats/generated&lt;/code&gt;, edit
    &lt;code&gt;stats/.svn/entries&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Find the &lt;code&gt;entry&lt;/code&gt; node with the correct &amp;#8220;name&amp;#8221; attribute for the
    directory in question. For stats/generated, in the
    &lt;code&gt;stats/.svn/entries&lt;/code&gt; file, it should look&amp;nbsp;like:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;entry&lt;/span&gt;
   &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;generated&amp;quot;&lt;/span&gt;
   &lt;span class="na"&gt;kind=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dir&amp;quot;&lt;/span&gt;
   &lt;span class="na"&gt;schedule=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;add&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Make the entries file writable (&lt;code&gt;chmod u+w entries&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Remove the entry from the&amp;nbsp;file.&lt;/li&gt;
&lt;li&gt;Set the entries file back to non-writable (&lt;code&gt;chmod u-w entries&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Remove any save files if they were created (i.e. &lt;code&gt;entries~&lt;/code&gt; for&amp;nbsp;emacs)&lt;/li&gt;
&lt;li&gt;Remove the directory itself and re-create it, this time adding to
    svn before setting the&amp;nbsp;ownership.&lt;/li&gt;
&lt;li&gt;Commit. It should now&amp;nbsp;work.&lt;/li&gt;
&lt;/ol&gt;</summary><category term="subversion"></category><category term="svn"></category><category term="version control"></category></entry></feed>
<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jason Antman's Blog</title><link>http://newblog.jasonantman.com/</link><description></description><atom:link href="http://newblog.jasonantman.com/feeds/tags/windows.rss.xml" rel="self"></atom:link><lastBuildDate>Tue, 20 Mar 2012 18:12:00 -0400</lastBuildDate><item><title>Leap Year Windows Azure Cloud Outage</title><link>http://newblog.jasonantman.com/2012/03/leap-year-windows-azure-cloud-outage/</link><description>&lt;p&gt;I haven&amp;#8217;t talked about Microsoft in quite a while (mainly because I
don&amp;#8217;t follow mainstream tech news as much anymore), but I happened by a
very interesting &lt;a href="http://blogs.msdn.com/b/windowsazure/archive/2012/03/09/summary-of-windows-azure-service-disruption-on-feb-29th-2012.aspx"&gt;post on the Windows Azure
blog&lt;/a&gt;
the other day. It&amp;#8217;s a very detailed postmortem of the major outage of
the Windows Azure cloud service which occurred from 4:00 &lt;span class="caps"&gt;PM&lt;/span&gt; &lt;span class="caps"&gt;PST&lt;/span&gt; on
February 28&lt;sup&gt;th&lt;/sup&gt; through 2:15 &lt;span class="caps"&gt;AM&lt;/span&gt; on March 1&lt;sup&gt;st&lt;/sup&gt;. Before I get into any of
the details, I should say that it really is a nice, well-done post. And
the fact that they&amp;#8217;re willing to do such a detailed, public postmortem -
and admit the failures that they did - is a step in the right direction
for Microsoft (a company that I don&amp;#8217;t particularly care for, to put it&amp;nbsp;lightly).&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m going to glance over the majority of the post, though I highly
recommend that anyone interested in running web-scale services,
specifically highly available ones, read it. The general overview
(really just the points that are germane to my discussion) is as
follows: An agent running inside the guest &lt;span class="caps"&gt;VM&lt;/span&gt; instances (i.e. domU)
communicates with a counterpart on the host &lt;span class="caps"&gt;OS&lt;/span&gt; (i.e. dom0) over an
encrypted channel, authenticated by certificate. The certs are generated
and passed from the guest to the host when the guest instance is first
initialized, which means when an app is first deployed, scaled out, &lt;span class="caps"&gt;OS&lt;/span&gt;
updated, or when an app is reinitialized on a new host. This cert was
generated for a 1-year validity period, by adding 1 to the integer year
- hence, the generation process failed on February 29th of a leap year,
as the cert end date wasn&amp;#8217;t valid. When the cert generation failed, the
guest agent essentially stopped cold. The host agent waited for a 25
minute timeout, then re-initialized the guest and started over. After
three of these failures, the host assumes there&amp;#8217;s a hardware error
(since the guest would have reported a more specific error otherwise),
declares itself in an error state, and tries to move its current
workload over to another host. Which re-initializes the guests on that
host, thereby causing a chain-reaction of failures in this case. Skip
forward the 2-1/2 hours it took them to identify the problem, and
further 2-1/2 hours to get a fix ready. They fast-tracked their fix to 7
clusters that had already been in the process of a software update, but
ended up with those clusters in an inconsistent state with
incompatibilities between the guest and host networking subsystems,
bringing down previously-unaffected instances on these&amp;nbsp;clusters.&lt;/p&gt;
&lt;p&gt;This whole scenario offers a few important points on both the
development and operations&amp;nbsp;sides:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Inputs need error checking, and errors need to be raised.&lt;/strong&gt; So the
first problem here was the failed cert generation. I&amp;#8217;ll leave alone the
fact that, in my opinion, doing math on a the integer year of a date is
a high school or college programming mistake, and never should have been
made by someone doing platform coding for a major company (believe it or
not, 25% of years are leap years &amp;lt;/sarcasm&gt;). If whatever code was
generating the cert was smart enough to check the cert end date validity
and error out, that error should have been pushed up the stack to
somewhere where it could be handled - or, at least, sent to a central
log server that does error&amp;nbsp;trending.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Secure communications when provisioning need an insecure error path.&lt;/strong&gt;
This is somewhat connected to the previous point. If the normal process
of creating a new instance and communicating errors up the stack relies
on certs and authentication or encryption, there should be some method
of communicating errors with &lt;em&gt;that&lt;/em&gt; process either up the stack, or to a
separate event correlation/trending system. Errors with a
certificate-based system are not unusual, and even something as simple
as a vastly incorrect time set on the guests could have caused this same
problem. In environments where management/control communication between
levels of a system are encrypted or authenticated, there should be some
way for lower levels of the system to deliver a meaningful error message
&amp;#8220;somewhere&amp;#8221;. Even if this is just a syslog server or web service that
listens for errors and can escalate a warning when the numbers spike,
it&amp;#8217;s a useful alarm and debugging&amp;nbsp;tool.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Autonomous systems shouldn&amp;#8217;t lightly assume hardware failures.&lt;/strong&gt; It&amp;#8217;s
arrogance for a host system to assume that just because it can&amp;#8217;t
instantiate new guests, a hardware failure exists. This entire incident
is a perfect example that, at least if hardware error indicators are
properly monitored, it&amp;#8217;s more likely for a software problem to be
falsely identified as a hardware problem than the other way around. All
of my points are somewhat related, but I can think of many more reasons
why a new guest can&amp;#8217;t be instantiated that are software-related rather
than&amp;nbsp;hardware-related.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Autonomous control mechanisms need historical trending, and need to
call for help if this looks wrong.&lt;/strong&gt; These host systems tried to
instantiate new guests three times, waiting 25 minutes in between, and
then declared themselves bad and tried to migrate guests to other hosts.
From what I understand, Microsoft got it right in having a &amp;#8220;kill switch&amp;#8221;
that prevented further migration of guests. What they didn&amp;#8217;t have right
was reporting of autonomous actions (guest migration) to a central
location that performs trending. The 25 minute timeout with three
attempts is a great safety feature, but if the status of guest creation
actions was reported to a central server, it would have been much more
quickly apparent that 100% of guest creations in the past, say, 10
minutes, had failed - across all clusters. I know plenty of shops that
do little, if any, real-time analysis and historical comparisons of
their log data. But when systems are designed to perform self-healing
and autonomous actions, it&amp;#8217;s imperative that these actions are tracked
in near-real-time, compared to historical averages, and that deviation
from a baseline is identified and escalated to&amp;nbsp;humans.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Release procedures are more, not less, important when the sky is
falling.&lt;/strong&gt; The extended downtime of the last seven clusters was because
of an improperly &lt;span class="caps"&gt;QA&lt;/span&gt;&amp;#8217;ed update that was pushed out bypassing the normal
release and testing procedures. As a matter of fact, it was so poorly
&lt;span class="caps"&gt;QA&lt;/span&gt;&amp;#8217;ed that the update totally broke networking for the guest VMs, and
was still pushed out. I&amp;#8217;m sure this was more of a management/executive
decision than one made by the actual engineers, but organizations (even
management) need to understand that when the sky is falling, services
are down, and everybody is stressed, it&amp;#8217;s &lt;em&gt;more&lt;/em&gt; likely for mistakes and
oversights to happen, and this is when a proper, well-documented &lt;span class="caps"&gt;QA&lt;/span&gt; and
release procedure (including phased rollout) is &lt;em&gt;most&lt;/em&gt; important.
Failure to follow these procedures results in exactly what happened in
this case - making an already bad problem much&amp;nbsp;worse.&lt;/p&gt;
&lt;p&gt;Even &lt;em&gt;I&lt;/em&gt; can&amp;#8217;t blame Microsoft specifically for all this (though the
whole thing would have been avoided if they just represented timestamps
as integers like the rest of us&amp;#8230;), but it is a good opportunity for us
all to learn from a major incident at a &amp;#8220;pretty well known&amp;#8221;&amp;nbsp;company.&lt;/p&gt;
&lt;p&gt;release procedures are most important when things are already going&amp;nbsp;wrong&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Tue, 20 Mar 2012 18:12:00 -0400</pubDate><guid>tag:newblog.jasonantman.com,2012-03-20:2012/03/leap-year-windows-azure-cloud-outage/</guid><category>azure</category><category>microsoft</category><category>outage</category><category>release</category><category>testing</category><category>windows</category></item><item><title>How to make software distribution secure</title><link>http://newblog.jasonantman.com/2010/09/how-to-make-software-distribution-secure/</link><description>&lt;p&gt;We were seeing some strange behavior with Mac client machines on the
network lately, specifically with &lt;span class="caps"&gt;DNS&lt;/span&gt; queries (I&amp;#8217;d guess that a lot of
it has to do with
&lt;a href="http://en.wikipedia.org/wiki/Bonjour_(software)"&gt;Bonjour&lt;/a&gt;), but the
discussion touched on the &lt;a href="http://isc.sans.edu/diary.html?storyid=3595"&gt;&lt;span class="caps"&gt;DNS&lt;/span&gt;
Changer&lt;/a&gt;
&lt;a href="http://www.dnschanger.com/"&gt;trojan&lt;/a&gt; for Mac. I&amp;#8217;d really never heard
about it before, and after some basic reading, it really got me thinking
about the state of software packaging, updates, and distribution.
Granted, some of my observations would require sweeping changes to how
packaging is handled (even on the *nixes), and would require buy-in
from more than just the vendor and distributor (well, I guess &lt;span class="caps"&gt;MS&lt;/span&gt; can
probably pressure ISVs to do whatever they want), but seems to be the
only way to keep appliancization from becoming the solution to security
issues. I&amp;#8217;ve written about this
&lt;a href="/2009/12/book-comments-the-future-of-the-internet-and-how-to-stop-it-by-jonathan-zittrain/"&gt;before&lt;/a&gt;,
and a while ago in respect to
&lt;a href="/2008/10/my-biggest-problem-with-linux/"&gt;Linux&lt;/a&gt;, but here&amp;#8217;s my current
take on what needs to be done to software packaging to allow our
machines to stay secure, no matter what &lt;span class="caps"&gt;OS&lt;/span&gt; they&amp;nbsp;run.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Allow packages to be installed as a user.&lt;/strong&gt; This is a mammoth task
    under Windows or Mac, but still an issue under Linux. The &lt;span class="caps"&gt;DNS&lt;/span&gt;
    Changer trojan is a case in point - there&amp;#8217;s no reason a &amp;#8220;video
    codec&amp;#8221; would need to be installed system-wide, and if that were
    simply installed user-specific, the malicious installer would never
    have the privileges to change system-wide &lt;span class="caps"&gt;DNS&lt;/span&gt; settings. This is also
    a big issue under Linux. Yum, apt, rpm, etc. should (if run as a
    non-root user) install packages in a user-local path under &lt;code&gt;/home&lt;/code&gt;
    by default. Of course, this would mean many things would need to
    change in order to cope - perhaps even a change to the
    &lt;a href="http://www.linuxfoundation.org/collaborate/workgroups/lsb"&gt;&lt;span class="caps"&gt;LSB&lt;/span&gt;&lt;/a&gt;&amp;nbsp;spec.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Warn about inconsistencies on package installation.&lt;/strong&gt; The package
    installation program should warn a user (whether installing packages
    system-wide or local to a user) if the package is going to modify
    system-wide files, i.e. files not specifically placed by that
    package and that package&amp;nbsp;only.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Real package management for Windows and Mac&lt;/strong&gt; It&amp;#8217;s about time that
    Apple and Microsoft admit that people without billions in funding
    can come up with good ideas. Get rid of these Installer programs
    (the many many different ones). Each &lt;span class="caps"&gt;OS&lt;/span&gt; should pick a package
    format, develop a yum-like (or, even better, zypper-like) package
    management program that understands repositories. I don&amp;#8217;t know how
    they&amp;#8217;d cope with the pervasive license keys and &lt;span class="caps"&gt;DRM&lt;/span&gt; in the non-nix
    world, but I&amp;#8217;m sure they could figure out a way that still allowed
    sane package management. The idea here is that vendors run
    repositories and are responsible for their &lt;span class="caps"&gt;GPG&lt;/span&gt; keys, so trojans
    claiming to be an update to a given vendor&amp;#8217;s software would be
    rejected. Also, isn&amp;#8217;t it about time that you can update all your
    software on Windows or Mac through one&amp;nbsp;tool?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Filesystem-based &lt;span class="caps"&gt;IDS&lt;/span&gt; for Windows and Mac&lt;/strong&gt; Assuming it will take a
    while to get everyone onboard with the packaging idea, and noting
    that users of these OSes like installing applications from arbitrary
    sources, there should be an &lt;span class="caps"&gt;OS&lt;/span&gt;-level feature to audit all filesystem
    changes made by untrusted/unsigned applications, and a way to alert
    the user to these changes if they appear suspisious (essentially
    what &lt;a href="http://www.safer-networking.org"&gt;Spybot Search &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Destroy /
    TeaTimer&lt;/a&gt; do, but builtin to the&amp;nbsp;&lt;span class="caps"&gt;OS&lt;/span&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vendor support of packaging/repositories&lt;/strong&gt; - Along with the idea
    of repositories, vendors should have a trust or signing system for
    ISVs signing keys. If users are installing arbitrary software,
    making them trust an arbitrary key won&amp;#8217;t do anything to improve
    security. Microsoft and Apple need to run a &lt;span class="caps"&gt;CA&lt;/span&gt; that signs the
    package signing keys of their ISVs. The also - and here&amp;#8217;s the big
    one - need to have a parallel framework for &amp;#8220;independent
    developers&amp;#8221;. I.e. something that doesn&amp;#8217;t cost any money for the
    packagers, and allows them to at least give a &amp;#8220;this person is who
    they say they are&amp;#8221;&amp;nbsp;message.&lt;/li&gt;
&lt;li&gt;Finally, &lt;strong&gt;Make package management pervasive&lt;/strong&gt; - Have a real push to
    apply the packaging and signing keys standard to all software for
    the&amp;nbsp;&lt;span class="caps"&gt;OS&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;On a final note, applicable to both the current state of Linux packaging
and my ideas about Mac and Windows&amp;#8230; &lt;span class="caps"&gt;DNS&lt;/span&gt; is the ideal method of key
distribution (granted, yes, this just means that the security of the
packager&amp;#8217;s &lt;span class="caps"&gt;DNS&lt;/span&gt; records, and their servers and signing key, is just more
of an issue). But even with Yum and Zypper, it seems to me to be logical
that the packager&amp;#8217;s public key should be stored in a &lt;span class="caps"&gt;DNS&lt;/span&gt; record (or at a
&lt;span class="caps"&gt;URL&lt;/span&gt; stored in a &lt;span class="caps"&gt;DNS&lt;/span&gt; &lt;span class="caps"&gt;TXT&lt;/span&gt; record). That way, it wouldn&amp;#8217;t be up to an end
user to import and trust a key, they&amp;#8217;d just have to trust the repository
(i.e. software.adobe.com) and the package manager would pull down the
key and verify that package X in software.adobe.com is, in fact, signed
by the software.adobe.com&amp;nbsp;key.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Fri, 17 Sep 2010 12:42:00 -0400</pubDate><guid>tag:newblog.jasonantman.com,2010-09-17:2010/09/how-to-make-software-distribution-secure/</guid><category>linux</category><category>mac</category><category>packaging</category><category>security</category><category>software</category><category>windows</category></item><item><title>PC vs Mac</title><link>http://newblog.jasonantman.com/2010/08/pc-vs-mac/</link><description>&lt;p&gt;Begin shameless&amp;nbsp;rant&amp;#8230;&lt;/p&gt;
&lt;p&gt;When I read the &amp;#8220;system requirements&amp;#8221; for hardware these days, and see
&amp;#8220;&lt;span class="caps"&gt;PC&lt;/span&gt; or Mac&amp;#8221;, I cringe. Surely someone who&amp;#8217;s developing the hardware
should understand the horrible inaccuracy of&amp;nbsp;this.&lt;/p&gt;
&lt;p&gt;The term &amp;#8220;&lt;span class="caps"&gt;PC&lt;/span&gt;&amp;#8221;, or Personal Computer, is used to refer to any hardware
that is (at this point, a derivative of) an &lt;span class="caps"&gt;IBM&lt;/span&gt; &lt;span class="caps"&gt;PC&lt;/span&gt; architecture clone.
This generally means Intel x86 (compatible)&amp;nbsp;systems.&lt;/p&gt;
&lt;p&gt;In 2005, Apple discontinued their PowerPC systems and made the move to
Intel-based computers. Since 2005, all Apple (Mac, iMac, MacBook, etc.)
computers have been&amp;nbsp;PCs.&lt;/p&gt;
&lt;p&gt;Similarly, &lt;span class="caps"&gt;PC&lt;/span&gt; refers just to the hardware, not the operating system. An
Intel-based computer running Linux is a&amp;nbsp;&lt;span class="caps"&gt;PC&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;If you mean &amp;#8220;Requires Microsoft Windows or Mac&amp;#8221;, say that. I don&amp;#8217;t know
whether it&amp;#8217;s more disturbing to see this on the box of a piece of (I
assume, engineered) hardware or in a tutorial or how-to supposedly
written by someone who knows something about&amp;nbsp;technology.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Sun, 15 Aug 2010 16:25:00 -0400</pubDate><guid>tag:newblog.jasonantman.com,2010-08-15:2010/08/pc-vs-mac/</guid><category>mac</category><category>pc</category><category>windows</category></item><item><title>Links for 2008-02-23</title><link>http://newblog.jasonantman.com/2008/02/links-for-2008-02-23/</link><description>&lt;p&gt;Some links for&amp;nbsp;today:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://arstechnica.com/news.ars/post/20080221-microsoft-launches-new-open-standards-interoperability-push.html"&gt;Microsoft&amp;#8217;s new promised on interoperability, open standards.
etc.&lt;/a&gt;
- somewhat ironic given the Office Open &lt;span class="caps"&gt;XML&lt;/span&gt; debacle on &amp;#8220;standards&amp;#8221;. &lt;a href="http://arstechnica.com/journals/linux.ars/2008/02/21/red-hat-not-impressed-with-microsofts-interoperability-plans"&gt;And
Red Hat&amp;#8217;s worries about
it&lt;/a&gt;.
(Ars&amp;nbsp;Technica)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.groklaw.net/article.php?story=20080221184924826"&gt;Groklaw&amp;#8217;s lengthy analysis of the
promises&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.zdnet.com/threatchaos/"&gt;Pakistan removed from the Internet, causes global YouTube
outage&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.guardian.co.uk/theguardian/2008/feb/23/internet.usa"&gt;A Guardian article on the WikiLeaks
debacle&lt;/a&gt;
- perhaps the biggest affront to the First Amendment this&amp;nbsp;year.&lt;/p&gt;
&lt;p&gt;An&lt;a href="http://www.informationweek.com/story/showArticle.jhtml?articleID=206800800&amp;amp;cid=RSSfeed_IWK_All"&gt;InformationWeek article about some guys from BlackHat &lt;span class="caps"&gt;D.C.&lt;/span&gt; who said
that they will be able to crack &lt;span class="caps"&gt;GSM&lt;/span&gt; encryption in under 30 minutes with
$1,000 of technology or 30 seconds with
$100,000&lt;/a&gt;
(FPGAs - Maybe a cluster of&amp;nbsp;&lt;span class="caps"&gt;PS3&lt;/span&gt;&amp;#8217;s?)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://citp.princeton.edu/memory/"&gt;A Princeton Unviersity blog about cold boots possibly able to crack the
Windows BitLocker system&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.mozilla.com/blog/2008/02/21/500-million-firefox-downloads-complete-500-million-grains-in-progress/"&gt;Yay! Firefox has hit its&amp;#8217; 500 Millionth
download!!!&lt;/a&gt;
And there was much&amp;nbsp;rejoicing&amp;#8230;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://arstechnica.com/news.ars/post/20080219-opera-browser-market-isnt-functioning-thanks-to-microsoft.html"&gt;An ArsTechnica article on Internet Explorer, what should be done to fix
it, and how there can still be a non-standards-compliant
browser&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jeremy.linuxquestions.org/"&gt;Jeremy&amp;#8217;s Blog&lt;/a&gt; - the mind behind
&lt;a href="http://www.linuxquestions.org/"&gt;LinuxQuestions.org&lt;/a&gt; - &lt;a href="http://jeremy.linuxquestions.org/2008/02/21/2007-linuxquestionsorg-members-choice-award-winners/"&gt;provides a recap
of the 2007 &lt;span class="caps"&gt;LQ&lt;/span&gt; Members&amp;#8217; Choice
awards&lt;/a&gt;.
Some interesting winners were VirtualBox for virtualization package,
Debain for server distro, Knoppix for Live Distro, Eclipse for &lt;span class="caps"&gt;IDE&lt;/span&gt;/Web
Development Environment, Python for language of the year, and - much to
my chagrin - vi/vim for&amp;nbsp;editor.&lt;/p&gt;
&lt;p&gt;A &lt;a href="http://www.linuxjournal.com/content/whats-next-open-source-and-public-media"&gt;LinuxJournal article on What&amp;#8217;s Next for Open Source and Public
Meida&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.linuxinsider.com/rsstory/61803.html"&gt;LinuxInsider - &lt;span class="caps"&gt;EU&lt;/span&gt; taking Microsoft&amp;#8217;s promises with a grain of
salt&lt;/a&gt;, noting that &lt;span class="caps"&gt;MS&lt;/span&gt;
has made &amp;#8220;at least four similar statements&amp;#8221; in the&amp;nbsp;past.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://utcc.utoronto.ca/~cks/space/blog/"&gt;Chris Siebenmann&lt;/a&gt; - &lt;a href="http://utcc.utoronto.ca/~cks/space/blog/tech/SharingRisk"&gt;Where
the risk is with virtualization (and
iSCSI)&lt;/a&gt; and
&lt;a href="http://utcc.utoronto.ca/~cks/space/blog/sysadmin/WirelessMachineRoom"&gt;Wireless, machine rooms, and the Asus
eeePC&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.ibm.com/developerworks/library/x-ooxmlstandard.html?ca=dgr-lnxw06OOXMLBigDeal&amp;amp;S_TACT=105AGX59&amp;amp;S_CMP=GR"&gt;&lt;span class="caps"&gt;IBM&lt;/span&gt; DeveloperWorks - &lt;span class="caps"&gt;OOXML&lt;/span&gt;: What&amp;#8217;s the big
deal?&lt;/a&gt;
- outlining the technical objections to &lt;span class="caps"&gt;OOXML&lt;/span&gt; as a standard. Linked from
a &lt;a href="http://rootprompt.org/article.php3?article=11548"&gt;rootprompt.org&lt;/a&gt;
article mentioning that &amp;#8220;&lt;span class="caps"&gt;OOXML&lt;/span&gt; is essentially a complete replication of
every chunk of data that a Microsoft Office application might possibly
save in a&amp;nbsp;file&amp;#8221;.&lt;/p&gt;
&lt;p&gt;Slashdot &lt;span class="caps"&gt;YRO&lt;/span&gt; - &lt;a href="http://yro.slashdot.org/article.pl?sid=08/02/25/0159250&amp;amp;from=rss"&gt;a guy who got hist stock photos stolen, entered into a
long legal battle, and
won&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Microsoft&amp;#8217;s &lt;a href="http://seattlepi.nwsource.com/business/352442_vista23.html"&gt;Windows Vista Capable lawsuit granted class-action
status&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A &lt;a href="http://www.washingtonpost.com/wp-dyn/content/article/2008/02/23/AR2008022300693.html"&gt;Washington Post article on Hans Reiser&amp;#8217;s Geek Defense
strategy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A &lt;a href="http://apple.slashdot.org/article.pl?sid=08/02/23/1915254&amp;amp;from=rss"&gt;Slashdot post linking to news that Apple sent a cease-and-decist
order to the Hymn
Project&lt;/a&gt;,
which produces software to remove &lt;span class="caps"&gt;DRM&lt;/span&gt; from iTunes songs. Apple had their
&lt;span class="caps"&gt;ISP&lt;/span&gt; remove all download links. (I guess the only solution is for us all
to buy bandwidth right from a&amp;nbsp;&lt;span class="caps"&gt;NSP&lt;/span&gt;&amp;#8230;)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://news.yahoo.com/s/ap/20080222/ap_on_hi_te/yahoo_shareholder_lawsuit"&gt;Yahoo&amp;#8217;s shareholders are suing it for not gobbling up the Microsoft
deal&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://arstechnica.com/news.ars/post/20080220-disgruntled-customer-sues-comcast-over-p2p-throttling.html"&gt;Comcast getting sued &lt;span class="caps"&gt;AGAIN&lt;/span&gt; for &lt;span class="caps"&gt;P2P&lt;/span&gt;
filtering&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.wired.com/music/2008/02/riaa-training-v.html"&gt;A leaked &lt;span class="caps"&gt;RIAA&lt;/span&gt; training video for
prosecutors&lt;/a&gt;,
going so far as to say that &lt;span class="caps"&gt;IP&lt;/span&gt; piracy can lead to arrests for drugs,
weapons, or terrorism. It also includes instructions on how to get a
&lt;span class="caps"&gt;RIAA&lt;/span&gt; investigator certified as a court&amp;nbsp;expert.&lt;/p&gt;
&lt;p&gt;A &lt;a href="http://www.nytimes.com/2008/02/21/fashion/21webgirls.html?_r=2&amp;amp;oref=slogin&amp;amp;oref=slogin"&gt;New York Times article on - gasp - women using the
Internet&lt;/a&gt;.
Linked from &lt;a href="http://yesthattom.livejournal.com"&gt;Tom Limoncelli&amp;#8217;s blog&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Mon, 25 Feb 2008 11:20:00 -0500</pubDate><guid>tag:newblog.jasonantman.com,2008-02-25:2008/02/links-for-2008-02-23/</guid><category>apple</category><category>bitlocker</category><category>cellphone</category><category>EU</category><category>firefox</category><category>gsm</category><category>microsoft</category><category>ooxml</category><category>pakistan</category><category>riaa</category><category>virtualization</category><category>wikileaks</category><category>windows</category><category>youtube</category></item><item><title>Why hasn’t Linux caught up to Windows?</title><link>http://newblog.jasonantman.com/2007/02/why-hasnt-linux-caught-up-to-windows/</link><description>&lt;p&gt;Those of us who are involved in the Linux community are often frustrated
by the lack of widespread acceptance of Linux. Granted, I haven&amp;#8217;t used
all of the newest &amp;#8220;desktop&amp;#8221; distributions (&amp;#8216;distros&amp;#8217;), but I know that
my choice - openSuSE - is far from being ready to compete with Windows
for the novice user market. From the first few screens of the
installation, it&amp;#8217;s clear that this isn&amp;#8217;t something for the uninitiated.
However, to get off on a short tangent, openSuSE has also severely
hampered access to the command-line-only, text-mode installation, which
I need in order to install on many of my&amp;nbsp;servers.&lt;/p&gt;
&lt;p&gt;Granted, it will take a lot of work to get Linux to retain its&amp;#8217; strong
points, and still be user-friendly for the non-technical user. However,
there are three main points that I see as being the biggest problems for
new users. All of which, coincidentally, are ones which some people
would bill as strong points of Linux. And they all have to do directly
with some of the founding principles of Linux - interoperability and&amp;nbsp;choice.&lt;/p&gt;
&lt;h2 id="packaging"&gt;Packaging.&lt;/h2&gt;
&lt;p&gt;Searching for a package for a linux system goes something like this:
figure out what package format your distro uses, figure out the distro
version and architecture, and then start checking the online
repositories. If it&amp;#8217;s something simple, you may be able to use a you
distro-specific maintenance program to automatically upgrade it. If not,
you can sift through the myriad online repositories for packages that
fit your package manager (&lt;span class="caps"&gt;RPM&lt;/span&gt;, Apt, etc.) and your distro/architecture.
If you have no luck there, find the package&amp;#8217;s homepage, and hope someone
has contributed packages for your distro and architecture - usually a
hit-or-miss situation. Last but not least, when all else has failed, you
choose either to compile from source yourself, or give up. Compiling
from source not only requires some knowledge of your system, Linux, and
the compilation sequence used by the software - hopefully the generic
&lt;span class="caps"&gt;GNU&lt;/span&gt;-style ./configure, make, make install and not some more esoteric
scheme. Furthermore, compilation requires a whole slew of tools to be
installed on your system - make, gcc, autoconf, and may others,
depending on package. While it&amp;#8217;s not practical for people with limited
resources, homogenous environments, or novice users, I operate in a
largely heterogeneous environment - i586/compatible systems running SuSE
9.3-10.2 - and therefore maintain a dedicated system for compilation, if&amp;nbsp;merited.&lt;/p&gt;
&lt;p&gt;All of this complexity just enforces the novice&amp;#8217;s idea that there is not
much software available for Linux, as many novices are limited (due to
technical knowledge) to the packages that come with their&amp;nbsp;&lt;span class="caps"&gt;OS&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;While there are a few schemes to standardize all of this, the real
solution is quite complex, and would be based on a single package system
to be adopted by all distros (beginning with the main ones). Such a
system should have the following&amp;nbsp;features:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ability to work easily with all&amp;nbsp;distros&lt;/li&gt;
&lt;li&gt;I main configuration file which can define which directories to use -
i.e. /etc, /bin,&amp;nbsp;etc.&lt;/li&gt;
&lt;li&gt;Support for both simple, novice-oriented interfaces and expert-level&amp;nbsp;configuration&lt;/li&gt;
&lt;li&gt;Multiple interfaces, including command-line, text/ncurses, &lt;span class="caps"&gt;GTK&lt;/span&gt;, and
other graphical&amp;nbsp;subsystems&lt;/li&gt;
&lt;li&gt;A generalized package format that is&amp;nbsp;non-distro-specific&lt;/li&gt;
&lt;li&gt;Integration with an online master-list of&amp;nbsp;repositories&lt;/li&gt;
&lt;li&gt;Ability to search, download, and install packages from these&amp;nbsp;repositories&lt;/li&gt;
&lt;li&gt;Automatic update&amp;nbsp;ability&lt;/li&gt;
&lt;li&gt;Ability to mine the repositories for updates, and display a list on
screen or emailed to a user&amp;nbsp;account&lt;/li&gt;
&lt;li&gt;Very good tools for easy compilation from&amp;nbsp;source.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Some of these ideas would be incorporated in the tool itself, and some
as add-on&amp;nbsp;modules.&lt;/p&gt;
&lt;p&gt;The features that I, as administrator of a largely heterogeneous network
of about 10 machines, would most like to see&amp;nbsp;are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Truly automatic updates via list - select which packages can be
automatically updated, and run a cron job nightly to check for any
updates for those packages and automatically get and install&amp;nbsp;them.&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;LAN&lt;/span&gt;-based updating - A single server on the &lt;span class="caps"&gt;LAN&lt;/span&gt; maintains a list
(perhaps gathered via an automatic tool) of &lt;span class="caps"&gt;ALL&lt;/span&gt; packages installed on
&lt;span class="caps"&gt;ALL&lt;/span&gt; &lt;span class="caps"&gt;LAN&lt;/span&gt; machines. Each night the configured clients will update this
list over the network, and then the master server will download all
available updates for all packages. Once this is complete, it will send
a message to all &lt;span class="caps"&gt;LAN&lt;/span&gt; machines, which will then update their software
from the central repository on the &lt;span class="caps"&gt;LAN&lt;/span&gt;. This would, in effect,
automatically keep all &lt;span class="caps"&gt;LAN&lt;/span&gt; machines on the same version of each
package and totally&amp;nbsp;up-to-date.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Kernel updates would be done manually, but should have an option for the
administrator to push the update to all&amp;nbsp;machines.&lt;/p&gt;
&lt;h2 id="distro-specific-tools-filesystem-layout-etc"&gt;Distro-specific tools, filesystem layout,&amp;nbsp;etc.&lt;/h2&gt;
&lt;p&gt;This is not only a barrier for novice users, but experienced users as
well. If you do a search online for Linux training, you will surely come
by a nubmer of certifications - &lt;span class="caps"&gt;NCLE&lt;/span&gt;, &lt;span class="caps"&gt;RHCE&lt;/span&gt;, etc. The many distinct
certifications - offered by each Linux vendor and independent training
companies - underscore the inherent differences in Linux distributions.
While I&amp;#8217;m perfectly comfortable working with SuSE Linux (by Novell), if
I was to sit down in front of a Gentoo system, I would probably be
totally&amp;nbsp;lost.&lt;/p&gt;
&lt;p&gt;While the &lt;span class="caps"&gt;LSB&lt;/span&gt; project (http://www.linux-foundation.org/en/&lt;span class="caps"&gt;LSB&lt;/span&gt;) has aimed
to provide compatibility between distros, there are three main points
which must still be&amp;nbsp;addressed:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The organization of filesystems on different distros, specifically
the directory tree and default locations for certain components, still
differs. In the interest of usability, the Linux directory tree should
be standardized, so that locations of programs, files, etc. will be
identical across&amp;nbsp;distributions.&lt;/li&gt;
&lt;li&gt;An effort needs to be made to make administration as similar as
possible across all distros. This means that program names,
functionality, location, etc. should be standardized as much as&amp;nbsp;possible.&lt;/li&gt;
&lt;li&gt;It seems that each distro has its&amp;#8217; own administration tool - YaST for
SuSE, and others for other distros. An effort needs to be made to
develop a tool encompassing all of the features in one, distro-neutral
form. Webmin (www.webmin.com) has done this wonderfully in a web-based
interface, but attention should be focused on a text-mode console
version as&amp;nbsp;well.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="gui"&gt;&lt;span class="caps"&gt;GUI&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Perhaps the biggest hurdle for novices using Linux, and the biggest
development challenge, is general ease of use. While the above two
points may fall into this category, I am specifically referring to the
general, day-to-day use of the operating&amp;nbsp;system.&lt;/p&gt;
&lt;p&gt;While I will not begin to suggest solutions, the main problems that I
see are as&amp;nbsp;follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The stability and security of Linux must be kept intact, unlike
distros such as&amp;nbsp;Lindows.&lt;/li&gt;
&lt;li&gt;There must remain a way for advanced users to perform advanced&amp;nbsp;tasks.&lt;/li&gt;
&lt;li&gt;As much of the inner workings should be hidden from the end-user as
possible, unless specifically&amp;nbsp;requested.&lt;/li&gt;
&lt;li&gt;I good system would have a field added to a users&amp;#8217; &lt;span class="caps"&gt;GECOS&lt;/span&gt; data
specifying their level of &amp;#8220;novice-ness&amp;#8221; - i.e. allowing a dumbed-down
interface for users while retaining a full interface with Expert
features for those who want&amp;nbsp;it.&lt;/li&gt;
&lt;li&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;Mysterious&amp;#8221; things such as file permissions should be hidden from
novice-level users when not absolutely&amp;nbsp;needed.&lt;/li&gt;
&lt;li&gt;There must be a strong integration with &amp;#8220;anti-mistake&amp;#8221; tools and &lt;span class="caps"&gt;DWIM&lt;/span&gt;
technology. The system itself should manage file permissions in a way
that grants only the minimum needed&amp;nbsp;access.&lt;/li&gt;
&lt;li&gt;There should be good, strong mistake detection, specifically in terms
of catching a user&amp;#8217;s inadvertent changing of file permissions, deleting
required files,&amp;nbsp;etc.&lt;/li&gt;
&lt;li&gt;Tools should be built so that the novice user is never required to
login as root or run a root&amp;nbsp;shell.&lt;/li&gt;
&lt;li&gt;Perhaps, and I&amp;#8217;m sure this is controversial, the root account should
be given either &lt;span class="caps"&gt;CLI&lt;/span&gt;-only access, or should not have X running by
default, so as to discourage novice users from running day-to-day tasks
as&amp;nbsp;root.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I&amp;#8217;m sure I&amp;#8217;ve missed a lot, and have also probably mentioned a number of
things that are already in place. However, the bottom line is that Linux
has to be able to achieve the easy of use and interoperability (between
distros) that Windows currently has, while retaining the extensibility,
advanced features, security, and stability that make Linux what it&amp;nbsp;is.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Mon, 19 Feb 2007 17:20:00 -0500</pubDate><guid>tag:newblog.jasonantman.com,2007-02-19:2007/02/why-hasnt-linux-caught-up-to-windows/</guid><category>compatibility</category><category>development</category><category>distribution</category><category>linux</category><category>novice</category><category>windows</category></item></channel></rss>
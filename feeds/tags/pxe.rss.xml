<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jason Antman's Blog</title><link>http://newblog.jasonantman.com/</link><description></description><atom:link href="http://newblog.jasonantman.com/feeds/tags/pxe.rss.xml" rel="self"></atom:link><lastBuildDate>Mon, 09 Apr 2012 13:52:00 -0400</lastBuildDate><item><title>Adjusting the VirtualBox F12 BIOS Boot Prompt Timeout</title><link>http://newblog.jasonantman.com/2012/04/adjusting-the-virtualbox-f12-bios-boot-prompt-timeout/</link><description>&lt;p&gt;I&amp;#8217;m working from home today, connected by &lt;span class="caps"&gt;VPN&lt;/span&gt;. I&amp;#8217;m in the process of
testing a bunch of Puppet stuff, and needed to re-image a bunch of
&lt;a href="https://www.virtualbox.org/"&gt;VirtualBox&lt;/a&gt; VMs on my desktop at work,
using &lt;span class="caps"&gt;PXE&lt;/span&gt; boot to &lt;a href="https://fedorahosted.org/cobbler/"&gt;Cobbler&lt;/a&gt;. I&amp;#8217;m only
connected to the desktop by &lt;span class="caps"&gt;SSH&lt;/span&gt;, and running the VMs with &lt;code&gt;VBoxHeadless&lt;/code&gt;
and connecting to them via &lt;span class="caps"&gt;RDP&lt;/span&gt; (well, &lt;span class="caps"&gt;VRDP&lt;/span&gt;). The problem with this is
that if I start a &lt;span class="caps"&gt;VM&lt;/span&gt; on my console window, then switch to my &lt;span class="caps"&gt;RDP&lt;/span&gt; client
and connect, by the time the &lt;span class="caps"&gt;VM&lt;/span&gt; gets keyboard focus, it&amp;#8217;s already past
the VBox &amp;#8220;Press F12 to select boot device&amp;#8221; prompt and booting from disk.
I could modify the boot order on the &lt;span class="caps"&gt;VM&lt;/span&gt;, but then that becomes a pain
when it reboots after the&amp;nbsp;install.&lt;/p&gt;
&lt;p&gt;Thanks to some of the guys on the &lt;a href="https://www.virtualbox.org/wiki/IRC"&gt;VirtualBox &lt;span class="caps"&gt;IRC&lt;/span&gt;
channel&lt;/a&gt;, I found out about the
&lt;code&gt;--bioslogodisplaytime&lt;/code&gt; option for VMs, which controls the length of
time (in milliseconds) that the boot splash screen is shown (the default
value seems to be 0). It&amp;#8217;s included in the &lt;a href="http://www.virtualbox.org/manual/ch08.html#vboxmanage-modifyvm"&gt;reference guide to
VBoxManage&lt;/a&gt;
in the modifyvm section. Setting this to a value of 10 seconds or so, as
shown below, is more than enough for me to start the &lt;span class="caps"&gt;VM&lt;/span&gt;, Alt-Tab to my
&lt;span class="caps"&gt;RDP&lt;/span&gt; client, connect to the &lt;span class="caps"&gt;VM&lt;/span&gt;, and hit &amp;#8216;F12&amp;#8217; to select a one-time
network&amp;nbsp;boot:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;VBoxManage modifyvm VMNAME --bioslogodisplaytime 10000
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Mon, 09 Apr 2012 13:52:00 -0400</pubDate><guid>tag:newblog.jasonantman.com,2012-04-09:2012/04/adjusting-the-virtualbox-f12-bios-boot-prompt-timeout/</guid><category>provisioning</category><category>pxe</category><category>rdp</category><category>sysadmin</category><category>vbox</category><category>virtualbox</category><category>virtualization</category><category>vm</category></item><item><title>Xen/Etherboot and DHCP Problems</title><link>http://newblog.jasonantman.com/2010/04/xenetherboot-and-dhcp-problems/</link><description>&lt;p&gt;Well, I&amp;#8217;ve spend the better part of the last week or so debugging a
problem with out new Xen VMs (on one host) not getting &lt;span class="caps"&gt;DHCP&lt;/span&gt; leases.
Since our &lt;span class="caps"&gt;DHCP&lt;/span&gt; servers (&lt;span class="caps"&gt;ISC&lt;/span&gt; DHCPd 3.0.6) are using Brian Masney&amp;#8217;s &lt;a href="http://personal.cfw.com/~masneyb/"&gt;&lt;span class="caps"&gt;LDAP&lt;/span&gt;
patch&lt;/a&gt; (which has recently been
included in &lt;a href="http://www.isc.org/files/release-notes/42b2_0.html"&gt;mainline
DHCPd&lt;/a&gt;), I assumed
that this might be the source of some of the&amp;nbsp;problems.&lt;/p&gt;
&lt;p&gt;The Xen client booting process uses &lt;a href="http://etherboot.org/"&gt;Etherboot&lt;/a&gt;
(specifically 5.4.2 on my machines) to get &lt;span class="caps"&gt;DHCP&lt;/span&gt; and &lt;span class="caps"&gt;PXE&lt;/span&gt; for the client.
The Etherboot &lt;span class="caps"&gt;ROM&lt;/span&gt; is generated online with
&lt;a href="http://rom-o-matic.net/"&gt;&lt;span class="caps"&gt;ROM&lt;/span&gt;-o-Matic&lt;/a&gt; (by the Xen devs) and is then
packaged into &lt;code&gt;hvmloader&lt;/code&gt; (though I would not find this out until much
later in my investigation, given the piss-poor documentation about it).
So, aside from pulling the &lt;span class="caps"&gt;SRPM&lt;/span&gt; for Xen and looking around, I decided I
couldn&amp;#8217;t really debug much on the client end (I wasn&amp;#8217;t getting any
&lt;span class="caps"&gt;BIOS&lt;/span&gt;-like messages from Xen, so the client end seemed to be pretty much
a black&amp;nbsp;box).&lt;/p&gt;
&lt;p&gt;After a week of re-examining our &lt;span class="caps"&gt;DHCP&lt;/span&gt; servers, moving the client between
pieces of hardware and different networks, tracing out the &lt;span class="caps"&gt;DHCP&lt;/span&gt; logs,
and debugging everything in-between, I finally resorted to doing packet
captures and analyzing them. Last Thursday (my last work day of the
week), I popped my laptop on the same network, set it up in &lt;span class="caps"&gt;DHCP&lt;/span&gt;, and
did some captures of the laptop (which worked correctly) and the problem&amp;nbsp;&lt;span class="caps"&gt;VM&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Sometime around 10:00 &lt;span class="caps"&gt;PM&lt;/span&gt;, long after I&amp;#8217;d gotten home, I had opened
captures of both the good and bad hosts in separate
&lt;a href="http://www.wireshark.org/"&gt;Wireshark&lt;/a&gt; windows, and was going through
them line-by-line. I&amp;#8217;d also written a nifty little &lt;a href="/GFX/dhcptest.pl"&gt;Perl
script&lt;/a&gt; (my weakest language) using
&lt;a href="http://search.cpan.org/~fvandun/Net-DHCP-0.11/lib/Net/DHCP/Packet.pm"&gt;Net::&lt;span class="caps"&gt;DHCP&lt;/span&gt;::Packet&lt;/a&gt;
to craft packets identical to the ones from the working and &lt;span class="caps"&gt;FUBAR&lt;/span&gt; hosts,
and inject them into the network. The only thing I could find different
was the value of the &amp;#8220;secs&amp;#8221; field of the &lt;span class="caps"&gt;DHCPDISCOVER&lt;/span&gt; packets (octets 9
and 10), which are supposed to contain the number of seconds that have
passed since the host started booting (&lt;a href="http://www.faqs.org/rfcs/rfc1541.html"&gt;&lt;span class="caps"&gt;RFC&lt;/span&gt;
1541&lt;/a&gt;). My laptop (the working
host) started getting replies from the server at 21 seconds. I took my
Perl packet-injecting script, and started adjusting the &amp;#8220;secs&amp;#8221; values of
both the working and bad packets. Sure enough, with identical packets
from each host, the values converged. Anything with &amp;#8220;secs&amp;#8221; below 2 got
no response from the &lt;span class="caps"&gt;DHCP&lt;/span&gt; server, anything with 2 or greater got a
correct&amp;nbsp;lease.&lt;/p&gt;
&lt;p&gt;Then it hit me. When we used to have a primary/secondary &lt;span class="caps"&gt;DHCP&lt;/span&gt; server
setup (with manual failover), we&amp;#8217;d configured the secondary server with
&lt;code&gt;min-secs: 2&lt;/code&gt;, instructing it to not give out any leases to clients with
a &amp;#8220;secs&amp;#8221; value of under 2, to prevent the secondary server from
answering if, for some reason, the primary was still online.&amp;nbsp;Bingo.&lt;/p&gt;
&lt;p&gt;At this point, I&amp;#8217;m waiting to have a meeting of the binds before I add a
network-level override of &amp;#8220;min-secs: 0&amp;#8221; for the networks in question.
But I&amp;#8217;m relatively confident that everything will go smoothly from there&amp;nbsp;on.&lt;/p&gt;
&lt;p&gt;This experience highlighted that one small &amp;#8220;bug&amp;#8221; can confuse 3 people
for the better part of a&amp;nbsp;week:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://etherboot.org/"&gt;Etherboot&lt;/a&gt; (at least 5.4.2) doesn&amp;#8217;t increment
the &amp;#8220;secs&amp;#8221; field in its &lt;span class="caps"&gt;DISCOVER&lt;/span&gt; packets as &lt;span class="caps"&gt;RFC&lt;/span&gt; 1541 suggests. Therefore
anyone with &amp;#8220;min-secs&amp;#8221; in their dhcpd configuration won&amp;#8217;t ever give out
a&amp;nbsp;lease.&lt;/p&gt;
&lt;p&gt;In hindsight, it really was a brain-dead moment. There was a little note
in the dhcpd logs that I, and the others, totally overlooked:
&amp;#8220;&lt;span class="caps"&gt;DHCPDISCOVER&lt;/span&gt; (&amp;#8230;) 0 secs &amp;lt; 2&amp;#8221;. I guess I should have turned my brain
on and realized that those few characters were probably important, and
there for a reason, no matter how unassuming (and un-error-like) they
may&amp;nbsp;be&amp;#8230;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Tue, 20 Apr 2010 10:46:00 -0400</pubDate><guid>tag:newblog.jasonantman.com,2010-04-20:2010/04/xenetherboot-and-dhcp-problems/</guid><category>dhcp</category><category>dhcpd</category><category>etherboot</category><category>ldap</category><category>pxe</category><category>xen</category></item><item><title>How To Wipe a Bunch of Machines Quickly</title><link>http://newblog.jasonantman.com/2009/02/how-to-wipe-a-bunch-of-machines-quickly/</link><description>&lt;p&gt;&lt;strong&gt;Updated 2009-03-05, see&amp;nbsp;bottom.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;At work the other week, we decommissioned 24 old desktops - Dell &lt;span class="caps"&gt;GX280&lt;/span&gt;&amp;#8217;s
that were used in the student labs as print release stations. They
didn&amp;#8217;t have anything sensitive on them, just Windows &lt;span class="caps"&gt;XP&lt;/span&gt;, but with
licensing and all we have to wipe Windows off of them before surplussing
them. Since there were 24 of them, it wasn&amp;#8217;t exactly going to be the
quickest task. Moreover, the &lt;span class="caps"&gt;GX280&lt;/span&gt;&amp;#8217;s we used don&amp;#8217;t have &lt;em&gt;any&lt;/em&gt; removable
media&amp;nbsp;drives.&lt;/p&gt;
&lt;p&gt;A few people mentioned &lt;a href="http://www.dban.org/"&gt;Darik&amp;#8217;s Boot And Nuke&lt;/a&gt;
(&lt;span class="caps"&gt;DBAN&lt;/span&gt;), which is a bootable Linux distro (&lt;span class="caps"&gt;CD&lt;/span&gt; or floppy) aimed at wiping
all of the fixed disks attached to a machine. While they do offer an
&amp;#8220;Enterprise&amp;#8221; version that supports network booting (and logging wipe
verifications to a central machine), the pricing isn&amp;#8217;t exactly favorable
for a small project (or something that just needs Windows to go away,
not a DoD-grade 7-pass overwrite with random data). Between the lack of
a &lt;span class="caps"&gt;CD&lt;/span&gt; drive and the apparent need to select wiping options at boot, this
didn&amp;#8217;t seem to be the best method for&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;Luckily, with a little googling, I came by the
&lt;a href="https://fedorahosted.org/cobbler/"&gt;Cobbler&lt;/a&gt; project, a ready-to-run
install server aimed at automating network-based &lt;span class="caps"&gt;OS&lt;/span&gt; installation. It
turns out that Cobbler has a wiki article on &lt;a href="https://fedorahosted.org/cobbler/wiki/SystemRetirement"&gt;system
retirement&lt;/a&gt; that
deals with using Cobbler to automate a network boot of &lt;span class="caps"&gt;DBAN&lt;/span&gt;. Cobbler
takes control of &lt;span class="caps"&gt;DHCP&lt;/span&gt; and &lt;span class="caps"&gt;TFTP&lt;/span&gt;, boots the machine(s) to a &lt;span class="caps"&gt;PXE&lt;/span&gt; boot menu,
and allows selection of one of the cobbler&amp;nbsp;&amp;#8220;profiles&amp;#8221;.&lt;/p&gt;
&lt;p&gt;The general procedure is something along these&amp;nbsp;lines:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Get the &lt;span class="caps"&gt;DBAN&lt;/span&gt; iso and grab the .ima image off of it. Loopback mount&amp;nbsp;it.&lt;/li&gt;
&lt;li&gt;Copy the &lt;code&gt;initrd&lt;/code&gt; and kernel into &lt;code&gt;/opt/cobbler/dban&lt;/code&gt; as
    &lt;code&gt;initrd.img&lt;/code&gt; and &lt;code&gt;vmlinuz&lt;/code&gt;,&amp;nbsp;respectively.&lt;/li&gt;
&lt;li&gt;Assuming you have cobblerd running (cobbler check), add a Distro for
    &lt;span class="caps"&gt;DBAN&lt;/span&gt;:
    &lt;code&gt;cobbler distro add --name=DBAN-1.0.7-i386 --kernel=/opt/cobbler/dban/vmlinuz --initrd=/opt/cobbler/dban/initrd.img --kopts="root=/dev/ram0 init=/rc nuke=dwipe floppy=0,16,cmos"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add a Profile for it:
    &lt;code&gt;cobbler profile add --name=DBAN-1.0.7-i386 --distro=DBAN-1.0.7-i386&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cobbler sync&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Assuming all went well, when we &lt;span class="caps"&gt;PXE&lt;/span&gt; boot a machine on the same &lt;span class="caps"&gt;LAN&lt;/span&gt; as
the Cobbler system, we&amp;#8217;ll get &lt;span class="caps"&gt;DHCP&lt;/span&gt; and a &lt;span class="caps"&gt;PXE&lt;/span&gt; boot menu which will list
&lt;code&gt;DBAN-1.0.7.i386&lt;/code&gt; as one of the options. On some of the &lt;span class="caps"&gt;GX280&lt;/span&gt;&amp;#8217;s that I
did, I had to go into the &lt;span class="caps"&gt;BIOS&lt;/span&gt; and enable &lt;span class="caps"&gt;PXE&lt;/span&gt; boot (or select &lt;span class="caps"&gt;PXE&lt;/span&gt; from
the &lt;span class="caps"&gt;BIOS&lt;/span&gt; boot menu). Now, when &lt;span class="caps"&gt;DBAN&lt;/span&gt; boots, we&amp;#8217;ll get the standard dmesg
output and then a selection screen allowing us to pick a wipe type (I
used the single pass all zeros for just getting rid of the old &lt;span class="caps"&gt;OS&lt;/span&gt;) and
select which disks to wipe. If you use the default wipe, just press
&amp;#8220;space&amp;#8221; to select all disks and then &amp;#8220;F10&amp;#8221; to begin the&amp;nbsp;wipe.&lt;/p&gt;
&lt;p&gt;This process allowed me to wipe 7 machines at once (8 port &lt;span class="caps"&gt;KVM&lt;/span&gt;, 1 port
for the server). With a better &lt;span class="caps"&gt;KVM&lt;/span&gt; or (even better yet) a totally
automatic system as described below, it would essentially be limited to
whatever the server and network hardware will&amp;nbsp;handle.&lt;/p&gt;
&lt;p&gt;To add a little more automation, we can run
&lt;code&gt;cobbler system add --name=default --profile=DBAN-1.0.7-i386&lt;/code&gt; which adds
a default profile to Cobbler, saying that any machines with MACs not
specifically assigned to a profile should boot the &lt;span class="caps"&gt;DBAN&lt;/span&gt; profile, and
bypassing the &lt;span class="caps"&gt;PXE&lt;/span&gt; boot&amp;nbsp;menu.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;WARNING&lt;/span&gt;:&lt;/strong&gt; what follows will setup Cobbler and &lt;span class="caps"&gt;DBAN&lt;/span&gt; to automatically
wipe all &lt;span class="caps"&gt;PXE&lt;/span&gt;-booting devices without &lt;span class="caps"&gt;ANY&lt;/span&gt; human intervention. Use at your
own risk and, for God&amp;#8217;s sake, don&amp;#8217;t plug your server into a production
network (I recommend this only in a lab environment with a dedicated
switch, all machines in one physical area, and no possibility of getting
on the same &amp;#8216;net as production&amp;nbsp;machines).&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s theoretically possible to totally automate this setup. According to
the &lt;span class="caps"&gt;DBAN&lt;/span&gt; docs, it will also accept kernel options (kopts) that effect
how dnuke works - specifically, &lt;code&gt;--autonuke&lt;/code&gt; to tell it to wipe without
human intervention and a method option such as &lt;code&gt;--method=zero&lt;/code&gt; to select
the wipe method. This means that if we &lt;span class="caps"&gt;PXE&lt;/span&gt; boot with kernel options set
to &lt;code&gt;nuke="dwipe --autonuke --method=zero"&lt;/code&gt; we should go straight to the
dwipe utility (the heart of &lt;span class="caps"&gt;DBAN&lt;/span&gt;) and automatically wipe all disks by
writing zeros once - without operator intervention. Unfortunately,
there&amp;#8217;s a &lt;a href="https://fedorahosted.org/cobbler/ticket/148"&gt;bug&lt;/a&gt; in the
current (1.4.0) Cobbler which prevents quote-encapsulated strings in
kopts, meaning that we can&amp;#8217;t set one kernel option to a string with
whitespace as needed here. If this bug is fixed, it should allow this
process to work without any operator intervention, assuming the clients
will &lt;span class="caps"&gt;PXE&lt;/span&gt;&amp;nbsp;boot.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Updated 2009-03-05&lt;/strong&gt; I haven&amp;#8217;t tested it yet, but apparently the
Cobbler bug preventing complex kernel options has &lt;a href="https://fedorahosted.org/pipermail/cobbler/2009-February/002874.html"&gt;been
fixed&lt;/a&gt;.
The fix should be included in the 1.4.3 release and is currently in the
development&amp;nbsp;tree.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Tue, 03 Feb 2009 15:51:00 -0500</pubDate><guid>tag:newblog.jasonantman.com,2009-02-03:2009/02/how-to-wipe-a-bunch-of-machines-quickly/</guid><category>automation</category><category>cobbler</category><category>dban</category><category>pxe</category><category>retirement</category><category>security</category><category>wiping</category></item></channel></rss>
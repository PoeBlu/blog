<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jason Antman's Blog</title><link>http://newblog.jasonantman.com/</link><description></description><atom:link href="http://newblog.jasonantman.com/feeds/tags/facebook.rss.xml" rel="self"></atom:link><lastBuildDate>Tue, 24 Apr 2012 19:31:00 -0400</lastBuildDate><item><title>Instagram - Scaling a Startup</title><link>http://newblog.jasonantman.com/2012/04/instagram-scaling-a-startup/</link><description>&lt;p&gt;If you keep up with news on the &amp;#8216;net, you may have heard about photo
sharing startup &lt;a href="http://instagr.am"&gt;Instagram&lt;/a&gt;, which was &lt;a href="http://finance.fortune.cnn.com/2012/04/09/breaking-facebook-buying-instagram-for-1-billion/?section=magazines_fortune"&gt;purchased by
Facebook for $1
Billion&lt;/a&gt;
just 9 days after they released their Android app. Well, not only are
they based mostly on open source software (well, yeah, pretty much a
given for web startups these days), but they&amp;#8217;ve dealt with scaling
issues like a million new users in 12 hours, and they&amp;#8217;re &lt;a href="http://instagram-engineering.tumblr.com/post/20541814340/keeping-instagram-up-with-over-a-million-new-users-in"&gt;talking about
it&lt;/a&gt;.
There&amp;#8217;s the &lt;a href="http://techcrunch.com/2012/04/12/how-to-scale-a-1-billion-startup-a-guide-from-instagram-co-founder-mike-krieger/"&gt;slide deck to a talk that co-founder Mike Krieger
gave&lt;/a&gt;
on TechCrunch and
&lt;a href="http://www.scribd.com/doc/89025069/Mike-Krieger-Instagram-at-the-Airbnb-tech-talk-on-Scaling-Instagram"&gt;Scribd&lt;/a&gt;,
along with a &lt;a href="http://highscalability.com/blog/2012/4/16/instagram-architecture-update-whats-new-with-instagram.html"&gt;High Scalability article about
it&lt;/a&gt;,
and an &lt;a href="http://highscalability.com/blog/2012/4/9/the-instagram-architecture-facebook-bought-for-a-cool-billio.html"&gt;earlier High Scalability article that gives an overview of the
company and some details of what and how they&amp;#8217;re
running&lt;/a&gt;.
Instagram Engineering also has a
&lt;a href="http://instagram-engineering.tumblr.com/"&gt;tumblr&lt;/a&gt; account, with a bunch
of cool posts like &lt;a href="http://instagram-engineering.tumblr.com/post/20541814340/keeping-instagram-up-with-over-a-million-new-users-in"&gt;Keeping Instagram up with over a million new users
in twelve
hours&lt;/a&gt;
(which specifically mentions &lt;a href="http://github.com/etsy/statsd/"&gt;statsd&lt;/a&gt;,
&lt;a href="http://blog.bitbucket.org/2011/05/17/tracking-slow-requests-with-dogslow/"&gt;dogslow&lt;/a&gt;,
&lt;a href="http://pgfouine.projects.postgresql.org/"&gt;PGFouine&lt;/a&gt;,
&lt;a href="http://github.com/Instagram/node2dm"&gt;node2dm&lt;/a&gt; and some database stuff)
and &lt;a href="http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances-dozens-of"&gt;What Powers Instagram: Hundreds of Instances, Dozens of
Technologies&lt;/a&gt;
which talks about their &lt;span class="caps"&gt;OS&lt;/span&gt; and hosting (Ubuntu 11.04 on &lt;span class="caps"&gt;EC2&lt;/span&gt;), load
balancing (nginx, &lt;span class="caps"&gt;DNS&lt;/span&gt; and Amazon Elastic Load Balancer), Django, Redis,
Solr, Munin,&amp;nbsp;etc.&lt;/p&gt;
&lt;p&gt;This is a really cool company, doing some &lt;em&gt;really&lt;/em&gt; cool stuff, at a
&lt;em&gt;really&lt;/em&gt; large scale, and growing&amp;nbsp;fast.&lt;/p&gt;
&lt;p&gt;On another note, I&amp;#8217;m continuing my attempt to read all of the excellent
Puppet articles on &lt;a href="http://www.masterzen.fr/blog/archives/"&gt;Brice Figureau&amp;#8217;s (aka masterzen)
blog&lt;/a&gt;. It&amp;#8217;s taking a while, as
it&amp;#8217;s really good, in-depth information that I want to rememeber, but I&amp;#8217;d
highly recommend it for anyone working with&amp;nbsp;Puppet.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Tue, 24 Apr 2012 19:31:00 -0400</pubDate><guid>tag:newblog.jasonantman.com,2012-04-24:2012/04/instagram-scaling-a-startup/</guid><category>dogslow</category><category>facebook</category><category>high scalability</category><category>instagram</category><category>node2dm</category><category>pgfouine</category><category>puppet</category><category>scaling</category><category>statsd</category></item><item><title>A Collection of Great Links on Monitoring, SysAdmin, Scaling, etc.</title><link>http://newblog.jasonantman.com/2012/04/a-collection-of-great-links-on-monitoring-sysadmin-scaling-etc/</link><description>&lt;p&gt;I&amp;#8217;ve had a bunch of tabs open in my browser for a while - stuff that I
read, thought was wonderful, and wanted to comment on. At risk of
letting it pile up forever, here&amp;#8217;s a collection of links that I thought
were really interesting or&amp;nbsp;insightful&amp;#8230;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.mongodb.org/post/172254834/mongodb-is-fantastic-for-logging"&gt;MongoDB is Fantastic for
    Logging&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;I was looking into some log storage ideas, and came by this post
(on the MongoDB blog) about why Mongo is well-suited to storing&amp;nbsp;logs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.sonian.com/cloud-monitoring-sensu/"&gt;Sensu&lt;/a&gt; - a
    Ruby-based cloud-oriented monitoring system. It uses &lt;span class="caps"&gt;AMQP&lt;/span&gt;/RabbitMQ
    to communicate between the clients and server, which is a really big
    part of what I think monitoring should&amp;nbsp;be.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://highscalability.com/"&gt;High Scalability&lt;/a&gt; - this is one of the
    few blogs I follow on a regular basis. Some really wonderful stuff,
    and great food for&amp;nbsp;thought.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://everythingsysadmin.com/2012/03/fear-of-rebooting.html"&gt;Everything Sysadmin: Fear of
    Rebooting&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;A great article on Tom Limoncelli&amp;#8217;s blog about why we fear
rebooting machines and why this is bad - moreover, why we should
reboot&amp;nbsp;often.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://techblog.netflix.com/2012/02/fault-tolerance-in-high-volume.html"&gt;The Netflix Tech Blog: Fault Tolerance in a High Volume,
    Distributed
    System&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;This is a &lt;em&gt;really, really&lt;/em&gt; cool post NetFlix about how latency
increases in a single subsystem can bring down their whole &lt;span class="caps"&gt;API&lt;/span&gt; in
seconds, and how they combat this. Really cool&amp;nbsp;stuff.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arstechnica.com/business/news/2012/04/exclusive-a-behind-the-scenes-look-at-facebook-release-engineering.ars/1"&gt;Ars Technica - Exclusive: a behind-the-scenes look at Facebook
    release
    engineering&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Ars Technical is more or less &amp;#8220;mainstream media&amp;#8221; to me, but this
is a really interesting writeup on Facebook&amp;#8217;s release engineering
process, albeit at a higher level. Specifically, it talks about
their automation, phased rollouts, rollbacks, and how they release
the Facebook codebase as a single giant binary, sent out via&amp;nbsp;BitTorrent.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monitoringsucks/blog-posts"&gt;Monitoring Sucks blog posts
    (github)&lt;/a&gt; - The
    &amp;#8220;monitoing sucks&amp;#8221; movement really speaks to me, having worked
    extensively with Nagios, Cacti, and similar technologies.
    Specifically, having rolled out monitoring in a variety of &amp;#8220;weird&amp;#8221;
    scenarios (a lot of monitoring devices or whole networks behind &lt;span class="caps"&gt;NAT&lt;/span&gt;,
    on dynamic &lt;span class="caps"&gt;IP&lt;/span&gt; connections, or otherwise unreachable from a central
    server), I&amp;#8217;ve felt a lot of pain in the current want of doing
    things. There are a lot of &lt;strong&gt;really&lt;/strong&gt; good thoughts linked here,
    especially the &lt;a href="http://jedi.be/blog/2012/01/03/monitoring-wonderland-survey-introduction"&gt;&amp;#8220;wonderland&amp;#8221; series by Patrick
    Debois&lt;/a&gt;
    and the &lt;a href="http://holmwood.id.au/~lindsay/2012/01/09/monitoring-sucks-latency-sucks-more"&gt;&amp;#8220;Latency sucks&amp;#8221; series by Lindsay
    Holmwood&lt;/a&gt;.
    This really got me thinking about my ideal monitoring system, which
    among other things, would integrate the &amp;#8220;alerting&amp;#8221; functions of
    Nagios with graphing/trending and correlation, would be based on
    some sort of message queue architecture (that supports multiple
    levels of proxies that could gracefully support &lt;span class="caps"&gt;NAT&lt;/span&gt; and multiple
    hops), and would be configured almost totally on the originating
    &amp;#8220;client&amp;#8221; (unlike the pain of distributed&amp;nbsp;Nagios/Icinga).&lt;/li&gt;
&lt;li&gt;&lt;a href="http://assets.en.oreilly.com/1/event/65/Metrics-driven%20Engineering%20at%20Etsy%20Presentation.pdf"&gt;Mike Brittain - Metrics Driven Engineering at Etsy (3.&lt;span class="caps"&gt;2MB&lt;/span&gt;
    &lt;span class="caps"&gt;PDF&lt;/span&gt;)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;presentation slides. I&amp;#8217;d &lt;em&gt;love&lt;/em&gt; to see the video. Some really good
ideas about putting the science back into being a SysAdmin. Also
mentions a few tools I really want to play around with (including
ganglia, graphite, logster and StatsD). Also mentions adding &lt;span class="caps"&gt;PHP&lt;/span&gt;
memory usage and time to Apache logs, which I don&amp;#8217;t believe I never
thought&amp;nbsp;of.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Some really thoughtful posts from &lt;span class="caps"&gt;R. I.&lt;/span&gt; Pienaar on &lt;a href="http://www.devco.net/archives/2011/03/19/thinking_about_monitoring_frameworks.php"&gt;Thinking about
    monitoring
    frameworks&lt;/a&gt;
    and &lt;a href="http://www.devco.net/archives/2011/04/04/monitoring_framework_composable_architectures.php"&gt;Composable
    Architectures&lt;/a&gt;.
    Some really good stuff, but what else would you expect from someone
    &lt;a href="https://github.com/ripienaar/"&gt;like this&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Sat, 21 Apr 2012 10:24:00 -0400</pubDate><guid>tag:newblog.jasonantman.com,2012-04-21:2012/04/a-collection-of-great-links-on-monitoring-sysadmin-scaling-etc/</guid><category>amqp</category><category>etsy</category><category>facebook</category><category>limoncelli</category><category>links</category><category>mongodb</category><category>monitoring</category><category>monitoringsucks</category><category>netflix</category><category>sensu</category></item></channel></rss>
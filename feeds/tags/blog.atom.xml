<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jason Antman's Blog</title><link href="http://blog.jasonantman.com/" rel="alternate"></link><link href="http://blog.jasonantman.com/feeds/tags/blog.atom.xml" rel="self"></link><id>http://blog.jasonantman.com/</id><updated>2014-02-28T22:21:00-05:00</updated><entry><title>Converting WordPress Posts to Pelican MarkDown</title><link href="http://blog.jasonantman.com/2014/02/converting-wordpress-posts-to-pelican-markdown/" rel="alternate"></link><updated>2014-02-28T22:21:00-05:00</updated><author><name>Jason Antman</name></author><id>tag:blog.jasonantman.com,2014-02-28:2014/02/converting-wordpress-posts-to-pelican-markdown/</id><summary type="html">&lt;p&gt;A few weeks ago, I
&lt;a href="/2014/01/planning-migration-from-wordpress-to-static-site/"&gt;posted&lt;/a&gt; about my
plans to convert my self-hosted WordPress blog to a static site using a static
blog generator. Since then, I&amp;#8217;ve decided to stop working on my exhaustive
&lt;a href="https://docs.google.com/spreadsheet/ccc?key=0AnHh-ye5DNiNdF9DWkJrT2kzSkNsNVp6cjMzLXJ6VEE&amp;amp;usp=sharing"&gt;static blog generator comparison spreadsheet&lt;/a&gt;
and just try &lt;a href="http://getpelican.com"&gt;Pelican&lt;/a&gt; - mainly because it&amp;#8217;s written in
Python which is my current strongest language, comes highly recommended, seems
to have most of the features I want, and seems to be easily&amp;nbsp;extensible.&lt;/p&gt;
&lt;p&gt;So, I walked through the documentation for the latest version (3.3.0), started
a &lt;a href="https://github.com/jantman/blog"&gt;GitHub repo&lt;/a&gt;, and tweaked a bunch of
settings. The repo is public, so if you want to take a look behind the scenes,
see my &lt;a href="https://github.com/jantman/blog/blob/master/fabfile.py"&gt;fabfile&lt;/a&gt;,
etc. feel&amp;nbsp;free. &lt;/p&gt;
&lt;h2 id="initial-wordpress-import-attempt"&gt;Initial WordPress Import&amp;nbsp;Attempt&lt;/h2&gt;
&lt;p&gt;I used the WordPress &lt;span class="caps"&gt;XML&lt;/span&gt; Export tool, as instructed in the &lt;a href="http://docs.getpelican.com/en/latest/importer.html"&gt;Pelican Importer documentation&lt;/a&gt;.
At first, I attempted to do a more-or-less default import from WordPress using
the &lt;code&gt;pelican-import&lt;/code&gt; tool, which writes rST, and then build the blog. What I
ended up with was thousands of errors complaining about &amp;#8220;Inline interpreted
text or phrase reference start-string without end-string&amp;#8221;, &amp;#8220;Explicit markup
ends without a blank line; unexpected uninden&amp;#8221;, &amp;#8220;malformed hyperlink target&amp;#8221;,
&amp;#8220;Unknown target name&amp;#8221; on all of my links, and a bevy of other Docutils
errors. It was so utterly awful that I gave&amp;nbsp;up.&lt;/p&gt;
&lt;h2 id="wordpress-import-as-markdown"&gt;WordPress Import as&amp;nbsp;MarkDown&lt;/h2&gt;
&lt;p&gt;Next I tried importing as MarkDown instead of rST,&amp;nbsp;using:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;pelican-import --markup markdown --wpfile -o content/ --dir-page jasonantman039sblog.wordpress.2014-01-11.xml
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That built without errors, and the posts looked somewhat right out of the
box, without any of the previous thousands of errors. And the links looked
mostly right - even the captions for images. Though I&amp;#8217;m working at a Python
shop and writing a lot of Python these days, my knowledge of MarkDown is still
much better than rST, so this is fine for me. (I even wrote a &lt;code&gt;fab post&lt;/code&gt; task
that prompts for a title, generates all of the post metadata, writes it to the
right file, and opens up an editor on&amp;nbsp;it.)&lt;/p&gt;
&lt;p&gt;The first problem was that the import script gave me one &amp;#8220;content&amp;#8221; directory
with 346 &amp;#8220;.md&amp;#8221; files in it - not exactly easy to work with. Luckily the
metadata was right, so a quick little
&lt;a href="https://github.com/jantman/blog/blob/master/move_wordpress.sh"&gt;bash script&lt;/a&gt;
moved the posts into a &lt;span class="caps"&gt;YYYY&lt;/span&gt;/&lt;span class="caps"&gt;MM&lt;/span&gt; directory&amp;nbsp;hierarchy.&lt;/p&gt;
&lt;h2 id="obvious-problems-with-imported-posts"&gt;Obvious Problems with Imported&amp;nbsp;Posts&lt;/h2&gt;
&lt;p&gt;After getting the MarkDown import working, and the posts moved to the proper
paths, I was still having some&amp;nbsp;issues&amp;#8230;&lt;/p&gt;
&lt;h3 id="syntax-hilighting-gone"&gt;Syntax Hilighting&amp;nbsp;Gone&lt;/h3&gt;
&lt;p&gt;In WordPress, I was using the
&lt;a href="http://wordpress.org/extend/plugins/wp-syntax/"&gt;&lt;span class="caps"&gt;WP&lt;/span&gt;-Syntax&lt;/a&gt; plugin to perform
syntax hilighting via &lt;a href="http://qbnz.com/highlighter/"&gt;GeSHi&lt;/a&gt;. The plugin uses
&lt;pre&gt; tags with a &lt;code&gt;lang=&lt;/code&gt; attribute to specify the language,&amp;nbsp;like:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&amp;lt;pre lang=&amp;quot;bash&amp;quot;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Unfortunately, these translated to some really ugly MarkDown fenced blocks&amp;nbsp;like:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;~~~~ {lang=&amp;quot;bash&amp;quot;}
cp /boot/efi/EFI/fedora/grub.cfg /boot/efi/EFI/fedora/grub.cfg.bak
echo &amp;#39;GRUB_DISABLE_OS_PROBER=&amp;quot;true&amp;quot;&amp;#39; &amp;gt;&amp;gt; /etc/default/grub
grub2-mkconfig &amp;gt; /boot/efi/EFI/fedora/grub.cfg
~~~~
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;that seem to be just a bit off from what MarkDown/Pygments can handle. The
places where I just used bare &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; blocks translated&amp;nbsp;fine.&lt;/p&gt;
&lt;p&gt;http://blog.gastove.com/2013-09-17_enabling_line_numbers_for_pygments.html&lt;/p&gt;
&lt;p&gt;Fixed this by using fenced blocks with the 'lang=' stuff removed, and in class
syntax like the MarkDown docs suggest. Some four-tab-indents with
:::identifier&amp;nbsp;work.&lt;/p&gt;
&lt;h3 id="broken-links"&gt;Broken&amp;nbsp;Links&lt;/h3&gt;
&lt;p&gt;It seems that something in the conversion process introduced line wraps (could
it really be Pandoc itself???) Unfortunately, this wreaks havoc with any
explicit reference links
that use long (long enough to break across lines) titles, depending on where
they are in the line. It seems that in some places they end up breaking
differently in the link in the text and in the link definition, which MarkDown misses, and
then renders broken links and plain text of the link table at the bottom of
the page. Manually removing the line breaks and any extraneous spaces seems to
fix&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;So, yes, Pandoc was doing this because of the &lt;code&gt;--reference-links&lt;/code&gt; parameter
that &lt;code&gt;pelican-import&lt;/code&gt; was calling it with. There was an
&lt;a href="https://github.com/getpelican/pelican/issues/348"&gt;issue&lt;/a&gt; and
&lt;a href="https://github.com/getpelican/pelican/pull/642"&gt;pull request&lt;/a&gt; to fix this,
but when I started with Pelican the last release was 3.3.0 (4 months ago) and
the &lt;span class="caps"&gt;PR&lt;/span&gt; was merged after that. So, if you're having the same problem and the
latest release of Pelican is still 3.3.0, you might as well just apply
&lt;a href="https://github.com/getpelican/pelican/commit/83e4d35b44a422ee8d4b077f505970d03e555f45"&gt;the patch&lt;/a&gt;
yourself - it's just a very simple removal of a parameter in
&lt;code&gt;pelican_import.py&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="overall-results"&gt;Overall&amp;nbsp;Results&lt;/h2&gt;
&lt;p&gt;I'm quite happy with the overall results. I also spent a &lt;em&gt;lot&lt;/em&gt; of time manually fixing
markup issues that didn't translate well through Pandoc, but I suppose that's to be
expected given that many of my older blog posts had &lt;span class="caps"&gt;HTML&lt;/span&gt;&amp;nbsp;issues.&lt;/p&gt;</summary><category term="pelican"></category><category term="wordpress"></category><category term="blog"></category><category term="markdown"></category></entry><entry><title>Planning Migration from WordPress to Static Site</title><link href="http://blog.jasonantman.com/2014/01/planning-migration-from-wordpress-to-static-site/" rel="alternate"></link><updated>2014-01-01T15:15:00-05:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2014-01-01:2014/01/planning-migration-from-wordpress-to-static-site/</id><summary type="html">&lt;p&gt;Right now, this blog, my email, and a whole bunch of other services are
hosted on a &lt;a href="http://linode.com"&gt;Linode&lt;/a&gt; Xen &lt;span class="caps"&gt;VM&lt;/span&gt;. I don&amp;#8217;t really keep up
to date with administration and upgrades the way I used to, and
honestly, I&amp;#8217;d rather spend my time working on other things (like
actually writing all of the blog posts that I&amp;#8217;ve been planning to. The
first thing I&amp;#8217;ve identified for migration is this blog itself. It&amp;#8217;s
currently on WordPress and, frankly, I don&amp;#8217;t either need nor like it.
But there are some features I like. I&amp;#8217;d like to end up with a static
site generator, hosted from either S3 or GitHub Pages. I know that means
I&amp;#8217;ll lost comments (unless I move to a third-party, &lt;span class="caps"&gt;JS&lt;/span&gt;-based comment
system like &lt;a href="http://disqus.com/"&gt;Disqus&lt;/a&gt;, which means I&amp;#8217;ll lose
&lt;em&gt;control&lt;/em&gt; over my comments) but I suppose I can live with that. What I
really want is something simple, static, cheap or free (that I&amp;#8217;ll likely
put behind a small ec2 instance running nginx for&amp;nbsp;redirects/rewrites).&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m still in the planning phase, and trying to come up with a
feature-by-feature comparison of my options. I&amp;#8217;ll likely post that when
I finally have it done (at the moment it&amp;#8217;s in a very rough &lt;a href="https://docs.google.com/spreadsheet/ccc?key=0AnHh-ye5DNiNdF9DWkJrT2kzSkNsNVp6cjMzLXJ6VEE&amp;amp;usp=sharing"&gt;Google Docs
spreadsheet&lt;/a&gt;).
I&amp;#8217;m trying to round up my static site generator options and see which
ones will do most, if not all, of what I want (though I still haven&amp;#8217;t
discounted using hosted wordpress if it comes down to it). Here are the
features I currently &amp;#8220;use&amp;#8221; (have) on my WordPress&amp;nbsp;blog:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User-defined permalinks to&amp;nbsp;posts&lt;/li&gt;
&lt;li&gt;Overall &lt;span class="caps"&gt;RSS&lt;/span&gt; feed of blog (currently powered by FeedBurner) and of&amp;nbsp;comments)&lt;/li&gt;
&lt;li&gt;Categories (a post can be in multiple&amp;nbsp;categories)&lt;/li&gt;
&lt;li&gt;Tags&lt;/li&gt;
&lt;li&gt;Category and Tag&amp;nbsp;pages&lt;/li&gt;
&lt;li&gt;per-Category and per-Tag feeds&amp;nbsp;(&lt;span class="caps"&gt;RSS&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;Tag cloud &amp;#8220;widget&amp;#8221; in&amp;nbsp;sidebar&lt;/li&gt;
&lt;li&gt;Themes. I actually like my current &lt;span class="caps"&gt;WP&lt;/span&gt;&amp;nbsp;theme&amp;#8230;&lt;/li&gt;
&lt;li&gt;Visitor statistics (currently self-hosted
    &lt;a href="http://piwik.org/"&gt;Piwik&lt;/a&gt;, formerly Google&amp;nbsp;Analytics)&lt;/li&gt;
&lt;li&gt;Post publishing via cron&amp;#8217;ed script (&lt;em&gt;see below&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Draft/Pending status (i.e. let me save a partial post, and let me
    save a complete post but mark it &amp;#8220;pending&amp;#8221; so I can just publish it&amp;nbsp;later)&lt;/li&gt;
&lt;li&gt;Commenting (this will probably be the big sticking&amp;nbsp;point)&lt;/li&gt;
&lt;li&gt;Syntax&amp;nbsp;hilighting&lt;/li&gt;
&lt;li&gt;As &amp;#8220;weird&amp;#8221; as this is, I write all my posts in raw &lt;span class="caps"&gt;HTML&lt;/span&gt;, and am
    perfectly happy doing&amp;nbsp;that.&lt;/li&gt;
&lt;li&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;Subscribe via Email&amp;#8221; FeedBurner&amp;nbsp;widget&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;XML&lt;/span&gt;&amp;nbsp;Sitemap&lt;/li&gt;
&lt;li&gt;Twitter&amp;nbsp;box/widget&lt;/li&gt;
&lt;li&gt;Pingbacks (not that these are really useful for anything other than
    spam these&amp;nbsp;days)&lt;/li&gt;
&lt;li&gt;Automatic or manual post excerpts for feeds,&amp;nbsp;etc.&lt;/li&gt;
&lt;li&gt;Remote publishing via &lt;span class="caps"&gt;XML&lt;/span&gt;-&lt;span class="caps"&gt;RPC&lt;/span&gt;/Android app (not that I&amp;#8217;ve used it
    more than once or&amp;nbsp;twice)&lt;/li&gt;
&lt;li&gt;Advertising - I currently use Google AdSense on my blog. The revenue
    from my tiny hit count isn&amp;#8217;t enough to offset the cost of a Linode,
    but if I moved to a much less expensive hosting service, it might be
    worth considering (you can&amp;#8217;t run ads on the free hosted WordPress,
    and I doubt you can on GitHub Pages&amp;nbsp;either).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I should be updating this post when I do some more research and have a
comparison of the&amp;nbsp;options.&lt;/p&gt;
&lt;p&gt;Note on &amp;#8220;Post publishing via cron&amp;#8217;ed script&amp;#8221; - sometimes I sit down and
write half a dozen or so blog posts at a time. But I don&amp;#8217;t want them all
to show up immediately, and spam the few people who still use &lt;span class="caps"&gt;RSS&lt;/span&gt;
readers after the death of Google Reader. So I set the posts to
&amp;#8220;Pending&amp;#8221; status, and I have a cron&amp;#8217;ed script that runs every weekday
morning and publishes the one oldest &amp;#8220;pending&amp;#8221; post. Who knows if this
actually does any good or&amp;nbsp;not&amp;#8230;&lt;/p&gt;</summary><category term="blog"></category><category term="jekyll"></category><category term="pelican"></category><category term="python"></category><category term="static site"></category><category term="wordpress"></category></entry><entry><title>Piwik Web Analytics, and some unfortunate stats about my blog</title><link href="http://blog.jasonantman.com/2012/08/piwik-web-analytics-and-some-unfortunate-stats-about-my-blog/" rel="alternate"></link><updated>2012-08-26T13:18:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2012-08-26:2012/08/piwik-web-analytics-and-some-unfortunate-stats-about-my-blog/</id><summary type="html">&lt;p&gt;Back in March when I selected a new template for this blog, I
&lt;a href="/2012/03/new-blog-theme/"&gt;posted&lt;/a&gt; that I was looking into open source
self-hosted web analytics tools to replace &lt;a href="http://www.google.com/analytics/"&gt;Google
Analytics&lt;/a&gt;. There were a few reasons
for this; most importantly, it started from a discussion with some
privacy-conscious coworkers, who said that they use
&lt;a href="http://noscript.net/"&gt;NoScript&lt;/a&gt; and specifically block Google from
tracking them (which also breaks Google Analytics). This was a serious
issue for me, as I no longer process server-side logs but relied solely
on Google Analytics for traffic information. So, I decided to try
something other than Google and ended up settling on
&lt;a href="http://piwik.org/"&gt;Piwik&lt;/a&gt; as my solution. I will say, in full
disclosure, that the amount of information Piwki gives is a bit scary; I
can watch users navigate this blog in realtime, and even the initial
dashboard page gives a list of the most recent visitors, with their &lt;span class="caps"&gt;IP&lt;/span&gt;
address, country of origin, browser, &lt;span class="caps"&gt;OS&lt;/span&gt;, and the pages they visited.
However my decision was made on two main points: first, that I wanted
something withich could use server-side &lt;span class="caps"&gt;PHP&lt;/span&gt; to log visits (albeit with a
lot less information) of people who had JavaScript or tracking disabled,
and second, that if &lt;em&gt;someone&lt;/em&gt; is going to have such amazingly detailed
information on my visitors, it should be me, so I can ensure that I&amp;#8217;m
the only person who has access to it and that it isn&amp;#8217;t used for the
wrong&amp;nbsp;purposes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Aside: The only revenue I get from this site is through &lt;a href=""&gt;Google
AdSense&lt;/a&gt;, which isn&amp;#8217;t a whole lot given the low traffic (certainly
not enough to pay for the hosting). Other than that, I keep this blog
to try and share my knowledge with others, and hope that someone else
can find the solution to their problem here instead of doing the work
that I did. So, I find analytics very helpful; I check my stats now
and then, go back and update or add to the most popular posts, and try
to write relevant posts if it seems like a lot of people are finding
their way here for something slightly different than the actual post
they landed on. Unfortunately, that last point isn&amp;#8217;t as easy since
&lt;a href="http://googleblog.blogspot.com/2011/10/making-search-more-secure.html"&gt;Google switched to &lt;span class="caps"&gt;HTTPS&lt;/span&gt; Search for logged-in users on October 18th,
2011&lt;/a&gt;
- I can no longer use Piwik see the search keywords that got Google
users to my site. Luckily, these are still available through &lt;a href="https://www.google.com/webmasters/tools/"&gt;Google
Webmaster Tools&lt;/a&gt; (via
Traffic -&gt; Search Queries on the left menu), though it adds an
additional step and removes some of my motivation to check regularly
and make sure people are getting useful content. Also, perhaps most
importantly, it doesn&amp;#8217;t let me associate search query with other stats
like time on page, so even if one search query was very popular, I
have no way of knowing whether all those people actually read the
page, or took one look at it and&amp;nbsp;left.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I really like Piwki. I don&amp;#8217;t use most of it terribly often, but it gives
me a nice overview visits graph on the WordPress dashboard (via the
&lt;a href="http://wordpress.org/extend/plugins/wp-piwik/"&gt;&lt;span class="caps"&gt;WP&lt;/span&gt;-Piwik&lt;/a&gt; plugin),
infinitely detailed information (most of which I haven&amp;#8217;t even looked at)
in the Piwki web interface, and nightly email reports of visits to the
site. It also supports multiple sites, so I have it on my ancient
&lt;a href="http://wiki.jasonantman.com"&gt;wiki&lt;/a&gt;, my
&lt;a href="http://redmine.jasonantman.com"&gt;Redmine&lt;/a&gt; instance, and even
&lt;a href="/2012/03/adding-piwik-web-analytics-integration-to-viewvc/"&gt;ViewVC&lt;/a&gt;.
I&amp;#8217;d highly recommend it; it&amp;#8217;s full-featured (beyond anything I can even
comprehend,&amp;nbsp;really)&lt;/p&gt;
&lt;p&gt;I was recently looking through the stats for this blog, and came by some
unfortunate, though not surprising, trends. Below is the graph of visits
per day, from April 1, 2012 through today (August 26,&amp;nbsp;2012):&lt;/p&gt;
&lt;p&gt;&lt;img alt="blog visits chart" src="/GFX/blog_visits.png" /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It&amp;#8217;s probably not terribly unusual for a site with as much technical
    content as mine (and mostly professional stuff, not just for
    hobbyists), my weekend traffic is usually a full 50% lower than
    weekday traffic. This can also be seen in the graph of visits by
    visitor&amp;#8217;s local time, which is decidedly biased towards the 9am-5pm
    window:&lt;br /&gt;
&lt;img alt="blog visits chart by visitor local
    time" src="/GFX/blog_visits_localtime.png" /&gt;&lt;br /&gt;
    I guess there&amp;#8217;s nothing I can really do about that, and it just
    gives me a nice maintenance window at 4am on Sunday mornings&amp;nbsp;:)&lt;/li&gt;
&lt;li&gt;Looking at the overall graph, there also appears to be quite a bit
    of oscillation of the average visits over time. It&amp;#8217;s nothing
    terribly large, but at a guess, I&amp;#8217;d attribute it to my sporadic&amp;nbsp;posting.&lt;/li&gt;
&lt;li&gt;Though it&amp;#8217;s not visible in these graphs, this site has an 80% bounce
    rate (the percent of visitors that viewed only one page and then
    left the site). I guess that&amp;#8217;s also not terribly unusual for a site
    with mostly how-to information on a wide variety of&amp;nbsp;topics.&lt;/li&gt;
&lt;li&gt;To add a little more information to some of the previous items, here
    is the chart of my &lt;a href="http://feedburner.google.com"&gt;Feedburner&lt;/a&gt;
    &lt;span class="caps"&gt;RSS&lt;/span&gt;/Atom feed, since I started using Feedburner in February. The
    number of subscribers is in green, and the reach (number of people
    who actually clicked through to a post) is in blue:&lt;br /&gt;
&lt;img alt="Feedburner stats" src="/GFX/feedburner_stats.png" /&gt;&lt;br /&gt;
    This is a clear indication of something even stronger than the
    &amp;#8220;bounce rate&amp;#8221;; the apparently high number of people who subscribe to
    and then unsubscribe from my feed (if these stats are accurate). To
    me, this is an even stronger indication that what I really need to
    do is post useful content on a more regular basis - I have a
    tendency to blog in spurts, and either start a draft and never
    finish it, or write a few posts and set them to &amp;#8220;pending&amp;#8221; status
    with the intent of publishing them over a few days&amp;#8230; and then
    forget the last&amp;nbsp;part.&lt;/li&gt;
&lt;/ol&gt;</summary><category term="blog"></category><category term="google analytics"></category><category term="piwik"></category></entry><entry><title>New Blog Theme</title><link href="http://blog.jasonantman.com/2012/03/new-blog-theme/" rel="alternate"></link><updated>2012-03-20T19:25:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2012-03-20:2012/03/new-blog-theme/</id><summary type="html">&lt;p&gt;In a follow-up to my &lt;a href="/2012/03/some-thoughts-on-choosing-a-new-wordpress-theme/"&gt;Some Thoughts on Choosing a New Wordpress
Theme&lt;/a&gt; post
from a few days ago, I decided on the
&lt;a href="http://wordpress.org/extend/themes/admired"&gt;Admired&lt;/a&gt;
&lt;a href="http://wp-ultra.com/themes/admired/"&gt;theme&lt;/a&gt; by &lt;a href="https://plus.google.com/103391260195864203534/posts"&gt;Brad
Thomas&lt;/a&gt;. It&amp;#8217;s
amazingly full-featured and has a good set of options. I had to manually
change a few things in the &lt;span class="caps"&gt;CSS&lt;/span&gt; (I wanted to tweak the top bar colors a
bit in a way that&amp;#8217;s not supported in the options), but overall it was a
very simple transition. While it&amp;#8217;s unfortunately very far from valid
&lt;a href="http://validator.w3.org/check?verbose=1&amp;amp;uri=http://blog.jasonantman.com/"&gt;&lt;span class="caps"&gt;HTML&lt;/span&gt;&lt;/a&gt;
or
&lt;a href="http://jigsaw.w3.org/css-validator/validator?profile=css3&amp;amp;warning=0&amp;amp;uri=http://blog.jasonantman.com/"&gt;&lt;span class="caps"&gt;CSS&lt;/span&gt;&lt;/a&gt;,
it seems quite&amp;nbsp;nice.&lt;/p&gt;
&lt;p&gt;If you happen to read this post and see anything wrong with the theme,
or it doesn&amp;#8217;t display properly for you, please leave a comment below
(with browser version and &lt;span class="caps"&gt;OS&lt;/span&gt;, if you&amp;nbsp;please).&lt;/p&gt;
&lt;p&gt;My next project, continuing on from my &lt;a href="/2012/03/inaccuracies-in-google-analytics-for-website-stats/"&gt;Inaccuracies in Google Analytics
for Website
Stats&lt;/a&gt;
post, is to compare the two self-hosted JavaScript-based open source
Google Analytics alternatives I&amp;#8217;ve identified
(&lt;a href="http://piwik.org/"&gt;Piwik&lt;/a&gt; and &lt;a href="http://www.openwebanalytics.com/"&gt;Open Web
Analytics&lt;/a&gt;) and try one out on my site
(keeping in mind that my server is pretty heavily loaded, and I don&amp;#8217;t
want to push it over the edge). Once I come to some sort of conclusion
on that, I&amp;#8217;ll get back to some useful&amp;nbsp;posts.&lt;/p&gt;</summary><category term="blog"></category><category term="theme"></category><category term="wordpress"></category></entry><entry><title>Some Thoughts on Choosing a New Wordpress Theme</title><link href="http://blog.jasonantman.com/2012/03/some-thoughts-on-choosing-a-new-wordpress-theme/" rel="alternate"></link><updated>2012-03-17T11:48:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2012-03-17:2012/03/some-thoughts-on-choosing-a-new-wordpress-theme/</id><summary type="html">&lt;p&gt;I think I&amp;#8217;m going to choose a new theme for my blog. The current theme
is &lt;a href="http://wordpress.org/extend/themes/inove"&gt;iNove&lt;/a&gt; (albeit an older
version with some custom modifications), and I feel like it looks a bit
messy and has gotten a bit cluttered, so it&amp;#8217;s time to find something
new. I like the 2-column layout, and have a few other things I&amp;#8217;m looking
for - specifically, aside from something with advanced features like
lots of widget support and hooks, something that has good visual
separation between different posts and widgets. I also really want
something, if possible, with relative column widths. My current home and
work desktops both have dual monitors, and the minimum resolution I have
on one screen is 1920x1080. When I look at my blog in a maximized
window, about half the screen width is wasted with empty space. So,
ideally, I&amp;#8217;d like a theme that&amp;#8217;s based on relative widths, probably with
a &amp;#8220;min-width&amp;#8221; property so it wouldn&amp;#8217;t get compressed to an absurdly
narrow width on small&amp;nbsp;screens.&lt;/p&gt;
&lt;p&gt;I use &lt;a href="http://www.google.com/analytics/"&gt;Google Analytics&lt;/a&gt; (as noted in
the &lt;a href="/privacy-policy/"&gt;privacy policy&lt;/a&gt;) for visitor statistics on this
blog (more about that in a moment). So, I took a peek at the breakdown
of visitors by screen resolution, and saw that for the past year, 94% of
the 27,500 visits had a screen width of 1024px or more (and the majority
of the others looked like mobile device resolutions, so they&amp;#8217;d probably
zoom the page correctly). So, my first gut reaction was to assume that I
could use a theme approximately 1000px wide. Unfortunately, there&amp;#8217;s two
main problems with that: first, as mentioned by &lt;a href="http://css-tricks.com/screen-resolution-notequalto-browser-window/"&gt;Chris Coyier on
&lt;span class="caps"&gt;CSS&lt;/span&gt;-Tricks.com&lt;/a&gt;,
just because someone has a given screen resolution doesn&amp;#8217;t mean their
browser window (let alone the viewport) is that size. As a matter of
fact, I usually have my main browser window set at about 80% of the
width of one of my monitors, with my instant messaging client
&lt;a href="http://pidgin.im/"&gt;Pidgin&lt;/a&gt; taking up the rest of the space. So there&amp;#8217;s
one inaccuracy. There&amp;#8217;s a potentially much greater inaccuracy in my
stats as well, which I&amp;#8217;m going to discuss in a &lt;a href="/2012/03/inaccuracies-in-google-analytics-for-website-stats/"&gt;separate
post&lt;/a&gt;.&lt;/p&gt;</summary><category term="analysis"></category><category term="analytics"></category><category term="blog"></category><category term="google"></category><category term="logging"></category><category term="stats"></category><category term="theme"></category><category term="wordpress"></category></entry><entry><title>New Project - Blog Migration to WordPress</title><link href="http://blog.jasonantman.com/2008/09/new-project-blog-migration-to-wordpress/" rel="alternate"></link><updated>2008-09-18T12:49:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2008-09-18:2008/09/new-project-blog-migration-to-wordpress/</id><summary type="html">&lt;p&gt;For quite some time, I&amp;#8217;ve been frustrated with Blogger. First of all,
its&amp;#8217; publishing system is horribly inefficient. As everything is static
&lt;span class="caps"&gt;HTML&lt;/span&gt;, at this point, writing this blog entry alone will require it to
re-publish approximately &lt;strong&gt;6 &lt;span class="caps"&gt;MB&lt;/span&gt;&lt;/strong&gt; to my server. Seems sort&amp;#8217;a pointless.
Not to mention, it doesn&amp;#8217;t allow any of the stuff that I really want,
such as multiple categories with per-category &lt;span class="caps"&gt;RSS&lt;/span&gt;, or good searching. It
also means that, though this blog is hosted on my own server, I&amp;#8217;m
dependent on Blogger to add&amp;nbsp;posts.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m still horribly busy dealing with insurance companies and the police
in relation to my stolen truck, as well as looking around and trying to
figure out what my next vehicle will be, and how much I can spend on&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;Anyway, I&amp;#8217;ve decided that at some point in the future, I&amp;#8217;ll be migrating
to &lt;a href="http://www.wordpress.org"&gt;WordPress&lt;/a&gt; for the blog. It will, of
course, be hosted on my own machine, and will hopefully also include a
migration of everything from this Blogger account. And, somehow, will
include some sort of redirection from old posts to the relevant new
ones. Most importantly, though, I plan on deferring the project until I
get my multiple static &lt;span class="caps"&gt;IP&lt;/span&gt; service from &lt;a href="http://www.optimum.com"&gt;Optimum
Online&lt;/a&gt;, as the new blog (and the rest of my
subdomains) will be moved from GoDaddy forwarding to their own
subdomains setup as Apache name-based&amp;nbsp;VHosts.&lt;/p&gt;
&lt;p&gt;Stay tuned for progress&amp;nbsp;updates&amp;#8230;&lt;/p&gt;</summary><category term="blog"></category><category term="wordpress"></category></entry><entry><title>Custom MediaWiki Sidebar; New Blog?</title><link href="http://blog.jasonantman.com/2008/06/custom-mediawiki-sidebar-new-blog/" rel="alternate"></link><updated>2008-06-18T22:26:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2008-06-18:2008/06/custom-mediawiki-sidebar-new-blog/</id><summary type="html">&lt;p&gt;As you may have noticed, some &lt;a href="http://www.spreadfirefox.com/node&amp;amp;id=238326&amp;amp;t=305"&gt;Firefox
3&lt;/a&gt;
&lt;a href="http://www.spreadfirefox.com/?q=affiliates/homepage"&gt;buttons&lt;/a&gt; have
popped up not only here on my blog, but also on my
&lt;a href="http://www.jasonantman.com/"&gt;wiki&lt;/a&gt;. While adding the buttons to
&lt;a href="http://www.blogger.com/"&gt;Blogger&lt;/a&gt; was a simple addition to the
template, getting them in the sidebar of MediaWiki wasn&amp;#8217;t exactly as
easy (yeah, I&amp;#8217;m considering the arduous project of moving my whole 102+
page wiki to &lt;a href="http://drupal.org/"&gt;Drupal&lt;/a&gt; or another good F/&lt;span class="caps"&gt;OSS&lt;/span&gt;&amp;nbsp;&lt;span class="caps"&gt;CMS&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;After some serious grepping through the source, and adding &lt;span class="caps"&gt;HTML&lt;/span&gt; comments
to see where they appeared, I finally found a solution to add the button
to the MediaWiki sidebar - though I&amp;#8217;d really like it to appear below the
search box (I guess that&amp;#8217;s something for my to-do list). I&amp;#8217;m using the
MonoBook skin (though somewhat modified). I&amp;#8217;m using &amp;#8220;MonoBook nouveau&amp;#8221;,
and it should be the version that shipped with &lt;span class="caps"&gt;MW&lt;/span&gt; 1.10.1. In this
version, I added the code around line 166. Specifically, this was added
before the &lt;code&gt;&amp;lt;div id="p-search" class="portlet"&amp;gt;&lt;/code&gt; line, and after the end
of the &lt;code&gt;foreach ($this-&amp;gt;data['sidebar'] as $bar =&amp;gt; $cont)&lt;/code&gt; loop. This
threw the button in a box directly above the search box, and below all
of my sidebar&amp;nbsp;links.&lt;/p&gt;
&lt;p&gt;The code looked something&amp;nbsp;like:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php } ?&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- firefox link added to MonoBook.php by jantman 2008-06-18 --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;portlet&amp;#39;&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;p-logos&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h5&amp;gt;&lt;/span&gt;Cool Stuff&lt;span class="nt"&gt;&amp;lt;/h5&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;pBody&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.spreadfirefox.com/node&amp;amp;id=238326&amp;amp;t=305&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_blank&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;border=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Firefox 3&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Firefox 3&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://sfx-images.mozilla.org/affiliates/Buttons/firefox3/110x32_best-yet.png&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- end firefox link --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;p-search&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;portlet&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In other news, I&amp;#8217;m taking a Data Driven Websites class this summer
(&lt;span class="caps"&gt;PHP&lt;/span&gt;/MySQL, but for some reason they switched to a Windows server&amp;#8230;
endless problems, and I can&amp;#8217;t even edit with Nano on the server, let
alone emacs). Our first project was to build a blog engine, which I&amp;#8217;m
working on right now. Anyway, it got me thinking&amp;#8230; the one thing that
Blogger is missing is the ability to post to a given category, and allow
users to view or subscribe to a specific category (or everything). So I
think I may look into writing something like that myself, if I can&amp;#8217;t
find a good alternative that&amp;#8217;s already done and is F/&lt;span class="caps"&gt;OSS&lt;/span&gt;. Regardless,
I&amp;#8217;ll probably be keeping the Blogger template as well as (ugh) moving
over all of my current posts, which Blogger chose to store in raw &lt;span class="caps"&gt;HTML&lt;/span&gt;.
So there&amp;#8217;s going to be a lot of parsing on my&amp;nbsp;future&amp;#8230;&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;PS&lt;/span&gt; - When I get a new blog engine, I&amp;#8217;m also going to go for a slightly
modified template that uses relative widths and placement - so that
code, like the snippet here, fits the screen&amp;nbsp;correctly.&lt;/p&gt;</summary><category term="blog"></category><category term="firefox"></category><category term="mediawiki"></category><category term="PHP"></category></entry><entry><title>Website, Blog, Bacula</title><link href="http://blog.jasonantman.com/2007/10/website-blog-bacula/" rel="alternate"></link><updated>2007-10-10T13:35:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2007-10-10:2007/10/website-blog-bacula/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Website&lt;/strong&gt; - In personal news, I&amp;#8217;ve finished migrating all of the
information content of &lt;a href="http://www.jasonantman.com"&gt;JasonAntman.com&lt;/a&gt; to
a wiki, based on &lt;a href="http://www.mediawiki.org"&gt;MediaWiki&lt;/a&gt;. I&amp;#8217;m still
getting some kinks ironed out, and working on customization, but it
seems to be coming along very well. It&amp;#8217;s wonderfully easy to update
information and to link between articles. Most of the content is more
like notes than articles, but I&amp;#8217;m trying to put most of my SysAdmin and
programming notes up there, both for my own future reference and that of
anyone who happens by the site. As always, though, some content will
just live its&amp;#8217; life as a blog entry, so I encourage searching of my blog
as well. This is my fourth instance of MeidaWiki, and while I haven&amp;#8217;t
set them up to play together, they all run wonderfully - and share a lot
of common configuration (though I have separate instances of the code).
Hopefully I&amp;#8217;ll do a bunch of reorganization of the wiki sometime, and
keep adding new content. Some of the newer pages include pages on
&lt;a href="http://www.jasonantman.com/wiki/index.php/DenyHosts"&gt;DenyHosts&lt;/a&gt; and
&lt;a href="http://www.jasonantman.com/wiki/index.php/Hpasm"&gt;&lt;span class="caps"&gt;HPASM&lt;/span&gt;&lt;/a&gt; (from my blog&amp;nbsp;post).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Blog&lt;/strong&gt; - I know the template is awful. It&amp;#8217;s on my list of things to
do, and should be at the top of the queue in approximately&amp;nbsp;2056.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bacula&lt;/strong&gt; - Up to now, my backups have been a total kludge. The mere
explanation of this elicits a feeling of nausea. A shell script on my
backup storage server executes via cron. Each of the four important
servers on my network (mail, web, monitoring, and development) have
shell scripts that handle local backups - tar&amp;#8217;ing up a list of
directories, MySQL dumps, etc. - then tar gzip the whole thing and plop
it in a local directory. The backup server executes these scripts and
then copies the temporary files to its own disk via &lt;span class="caps"&gt;SCP&lt;/span&gt;. All of this is
handled through an &lt;a href="http://expect.nist.gov/"&gt;expect&lt;/a&gt; script, that runs
each server consecutively. By morning, I end up with a 6+ hour job
that&amp;#8217;s finished, and dumped gigs of files on the backup server. Before
finishing each machine, it deletes any backups on the backup server that
are older than 10 days. After copying everything, it deletes the
client&amp;#8217;s local copy. The bottom line is that if a machine goes down, I
can re-install the &lt;span class="caps"&gt;OS&lt;/span&gt; and all packages, and then have the backups of
just /etc and user data. Not beautiful. Even worse, my backup storage
server doesn&amp;#8217;t have a tape drive. When I get around to it, I run a
script on my development/storage box that copies the latest backups from
each machine, located on the backup server, to a tempdir and then writes
them to tape. To top it all off, I have only one network, so all of
these gigs of data are crawling across my ancient 10/100 switch, along
with all other connectivity to the outside&amp;nbsp;world.&lt;/p&gt;
&lt;p&gt;Unfortunately, it doesn&amp;#8217;t look like I&amp;#8217;ll have the money to upgrade to
Gig-E any time soon, even just for the 5 machines involved. More to the
point, there&amp;#8217;s no way that I&amp;#8217;ll have the money to buy a manageable Gig-E
switch that can come anywhere close to my &lt;a href="http://www.jasonantman.com/wiki/index.php/BayStack_450-24T"&gt;BayStack
450-24T&lt;/a&gt;.
So, it&amp;#8217;s time to invest&amp;#8230; well&amp;#8230; time&amp;#8230; in a good backup
infrastructure. After doing a lot of research, I came to two&amp;nbsp;findings:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The two main options seem to be &lt;a href="http://www.amanda.org/"&gt;&lt;span class="caps"&gt;AMANDA&lt;/span&gt;&lt;/a&gt; and
    &lt;a href="http://www.bacula.org/"&gt;Bacula&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I don&amp;#8217;t like how &lt;span class="caps"&gt;AMANDA&lt;/span&gt;&amp;nbsp;works.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, I&amp;#8217;m going to give Bacula a shot. I did consult the
&lt;a href="http://www.sage.org/"&gt;&lt;span class="caps"&gt;SAGE&lt;/span&gt;&lt;/a&gt; mailing list for advice, and got some
recommendations for &lt;a href="http://backuppc.sourceforge.net/"&gt;BackupPC&lt;/a&gt;, but
Bacula seems to be more my type of thing. Well, I did an install, and
spent about 8 hours hacking around with the config files. No luck.
Bacula is designed to be highly modular and scalable, but to be honest,
I find the config files to be *very* complicated. Furthermore, I
wasn&amp;#8217;t able to find any good example configurations with documentation.
After brainstorming for a while (laying in bed watching Law &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Order and
reading the Bacula docs on dead trees) I decided to give in - despite my
continued efforts to stop using it, I checked
&lt;a href="http://www.webmin.com"&gt;Webmin&lt;/a&gt; and, surely enough, they have a Bacula
module. After starting with fresh config files, I was able to get Bacula
up and running on my development/storage server (a fresh install of
openSuSE 10.1) as the director. I got a file daemon installed on the web
server. Everything looked&amp;nbsp;wonderful.&lt;/p&gt;
&lt;p&gt;The current status: My backup storage server does only that - storage of
backups. Nothing else. It&amp;#8217;s still running SuSE 9.3. The Bacula RPMs for
9.3 are from the 1.x tree, and all of my other machines are running
openSuSE 10.x, with Bacula 2.x. I gave it a shot but, sure enough, a
Bacula 2.x director won&amp;#8217;t jive with a 1.x storage daemon. And I&amp;#8217;m in
dependency hell - Bacula 2.x requires upgrades of everything from the C
libs all the way up. So, I&amp;#8217;m going to give a shot at an upgrade of the
storage machine via YaST, and see where I&amp;nbsp;get.&lt;/p&gt;</summary><category term="bacula"></category><category term="blog"></category><category term="jasonantman"></category><category term="mediawiki"></category><category term="wiki"></category></entry></feed>
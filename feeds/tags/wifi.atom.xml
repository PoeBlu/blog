<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jason Antman's Blog - wifi</title><link href="https://blog.jasonantman.com/" rel="alternate"></link><link href="https://blog.jasonantman.com/feeds/tags/wifi.atom.xml" rel="self"></link><id>https://blog.jasonantman.com/</id><updated>2018-11-01T18:07:00-04:00</updated><entry><title>Open Source WiFi Site Survey Heatmap Tool</title><link href="https://blog.jasonantman.com/2018/11/open-source-wifi-site-survey-tool/" rel="alternate"></link><published>2018-11-01T18:07:00-04:00</published><updated>2018-11-01T18:07:00-04:00</updated><author><name>Jason Antman</name></author><id>tag:blog.jasonantman.com,2018-11-01:/2018/11/open-source-wifi-site-survey-tool/</id><summary type="html">&lt;p&gt;A bit about a Python project I wrote to plot floorplan heatmaps of wireless site&amp;nbsp;surveys.&lt;/p&gt;</summary><content type="html">&lt;p&gt;This week I finally bought myself a new wireless access point (&lt;span class="caps"&gt;AP&lt;/span&gt;) to replace my current ones, a pair of older Ubiquiti models that have been continually in service without issue for &lt;a href="https://twitter.com/j_antman/status/1029135879695228929"&gt;nine years&lt;/a&gt; and five years, respectively. I bought another Ubiquiti, of course, but wanted to be a bit more methodical and scientific in figuring out the best placement of it in my&amp;nbsp;house.&lt;/p&gt;
&lt;p&gt;Years ago when part of my job was supporting an extremely large wireless network, we used some expensive proprietary Windows software (I&amp;#8217;m pretty sure it was &lt;a href="https://www.ekahau.com/products/ekahau-site-survey/overview/"&gt;Ekahau Site Survey&lt;/a&gt;) for performing site surveys to
determine &lt;span class="caps"&gt;AP&lt;/span&gt; location. Essentially you temporarily rig up a running &lt;span class="caps"&gt;AP&lt;/span&gt; where you propose locating one, load a floorplan of the building into the site survey software, and then walk around the area tapping on the floorplan at your current location. At each tap, the software performs some measurements through the &lt;span class="caps"&gt;AP&lt;/span&gt; (I don&amp;#8217;t remember what the specific software we used did, but generally it&amp;#8217;s some bandwidth measurement like &lt;a href="https://software.es.net/iperf/"&gt;iperf&lt;/a&gt;) and ends up plotting a (predictive, interpolated) heatmap of signal strength or data transfer speeds over the&amp;nbsp;floorplan.&lt;/p&gt;
&lt;p&gt;I wanted to do something similar for my new &lt;span class="caps"&gt;AP&lt;/span&gt;, but was rather surprised that I couldn&amp;#8217;t find any existing F/&lt;span class="caps"&gt;OSS&lt;/span&gt; solution; only a handful of proprietary options costing anywhere from &amp;#8220;more than I&amp;#8217;d pay for a one-time thing&amp;#8221; to astronomical prices, and none of them clearly with Linux support. The closest I was able to find - and I&amp;#8217;m very thankful that I found it - was a &lt;a href="https://github.com/beaugunderson/wifi-heatmap"&gt;GitHub repository from Beau Gunderson&lt;/a&gt; that plots a heatmap superimposed on a floorplan using a &lt;span class="caps"&gt;CSV&lt;/span&gt; file of WiFi signal strength measurements. This was enough to get me started on a similar project to automate the&amp;nbsp;process.&lt;/p&gt;
&lt;p&gt;Over a couple of afternoons I came up with a really rough tool, &lt;a href="https://github.com/jantman/python-wifi-survey-heatmap"&gt;python-wifi-survey-heatmap&lt;/a&gt; to handle this. The full documentation is in the &lt;a href="https://github.com/jantman/python-wifi-survey-heatmap/blob/master/README.rst"&gt;&lt;span class="caps"&gt;README&lt;/span&gt;&lt;/a&gt;, but the gist is that it&amp;#8217;s a Python &lt;span class="caps"&gt;GUI&lt;/span&gt; (wxPython) and &lt;span class="caps"&gt;CLI&lt;/span&gt; application that automates the process. It&amp;#8217;s currently Linux-only because it uses &lt;code&gt;iwlib&lt;/code&gt; (wireless_tools) to pull wireless information and perform scans, but that could be fixed by adding collector classes for other OSes. In short you run an iperf3 server somewhere on your &lt;span class="caps"&gt;LAN&lt;/span&gt;, connect to the &lt;span class="caps"&gt;SSID&lt;/span&gt; you want to test, fire up the &lt;span class="caps"&gt;GUI&lt;/span&gt; passing it the path to an image to use as the floorplan background and the &lt;span class="caps"&gt;IP&lt;/span&gt; or hostname of the iperf3 server, and then walk around clicking the floorplan at your current location. For each click the application will draw a yellow circle and then change it to green when measurement is complete, about a minute&amp;nbsp;later.&lt;/p&gt;
&lt;p&gt;For each measurement point (location on the floorplan), the application&amp;nbsp;captures:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Current wireless statistics including quality, signal strength, and noise level (like &lt;code&gt;iwconfig&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;A current scan (like &lt;code&gt;iwlist scan&lt;/code&gt;) of all visible networks and their signal&amp;nbsp;strength/quality.&lt;/li&gt;
&lt;li&gt;Three 10-second iperf3 measurements to the iperf&amp;nbsp;server:&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;TCP&lt;/span&gt; upload (client/application to&amp;nbsp;server)&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;TCP&lt;/span&gt; download (server to&amp;nbsp;client)&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;UDP&lt;/span&gt;&amp;nbsp;upload&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After each measurement is complete all data is saved to a &lt;span class="caps"&gt;JSON&lt;/span&gt; file in the current directory, and the gui application can optionally load an existing &lt;span class="caps"&gt;JSON&lt;/span&gt; output file to continue a previous survey. None of this uses any sort of shell/subprocess/exec hackery; we interface with iwconfig and iwlist information via the python &lt;a href="https://pypi.org/project/iwlib/"&gt;iwlib&lt;/a&gt; package, a cffi Python wrapper around wireless_tools&amp;#8217; iwlib, and with iperf3 via the &lt;a href="https://pypi.org/project/iperf3/"&gt;iperf3&lt;/a&gt; package, a cdll wrapper around&amp;nbsp;libiperf.&lt;/p&gt;
&lt;p&gt;Once you&amp;#8217;ve completed capturing data for your site survey, the &lt;code&gt;wifi-heatmap&lt;/code&gt; &lt;span class="caps"&gt;CLI&lt;/span&gt; entrypoint processes the data and generates some heatmaps as well as channel utilization graphs like&amp;nbsp;these:&lt;/p&gt;
&lt;p&gt;&lt;a href="/GFX/channels24_WAP1.png"&gt;&lt;img alt="example 2.4 GHz channel usage" src="/GFX/channels24_WAP1_sm.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/GFX/channels5_WAP1.png"&gt;&lt;img alt="example 5 GHz channel usage" src="/GFX/channels5_WAP1_sm.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/GFX/jitter_WAP1.png"&gt;&lt;img alt="example jitter heatmap" src="/GFX/jitter_WAP1_sm.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/GFX/quality_WAP1.png"&gt;&lt;img alt="example quality heatmap" src="/GFX/quality_WAP1_sm.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/GFX/rssi_WAP1.png"&gt;&lt;img alt="example rssi heatmap" src="/GFX/rssi_WAP1_sm.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/GFX/tcp_download_Mbps_WAP1.png"&gt;&lt;img alt="example tcp download heatmap" src="/GFX/tcp_download_Mbps_WAP1_sm.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/GFX/tcp_upload_Mbps_WAP1.png"&gt;&lt;img alt="example tcp upload heatmap" src="/GFX/tcp_upload_Mbps_WAP1_sm.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/GFX/udp_Mbps_WAP1.png"&gt;&lt;img alt="example udp upload heatmap" src="/GFX/udp_Mbps_WAP1_sm.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;All of the code and some initial documentation is available at &lt;a href="https://github.com/jantman/python-wifi-survey-heatmap"&gt;https://github.com/jantman/python-wifi-survey-heatmap&lt;/a&gt;. It&amp;#8217;s very alpha and rough around the edges, and I doubt I&amp;#8217;ll be actively developing or supporting it once I&amp;#8217;m done installing my new &lt;span class="caps"&gt;AP&lt;/span&gt;, but I very much hope that it might be of use to someone else and maybe someone will even improve it a&amp;nbsp;bit.&lt;/p&gt;</content><category term="wifi"></category><category term="survey"></category><category term="wireless"></category><category term="heatmap"></category><category term="python"></category></entry><entry><title>WiFi tether for Droid</title><link href="https://blog.jasonantman.com/2010/08/wifi-tether-for-droid/" rel="alternate"></link><published>2010-08-15T10:29:00-04:00</published><updated>2010-08-15T10:29:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2010-08-15:/2010/08/wifi-tether-for-droid/</id><summary type="html">&lt;p&gt;My Motorola Droid (purchased on &lt;a href="/2009/11/droid/"&gt;November 10&lt;sup&gt;th&lt;/sup&gt;,
2009&lt;/a&gt;, 4 days after the release) is still running
Android 2.0.1. I guess this is somewhat out of laziness - I love the
Incredible and its new (and more refined) Android version and &lt;span class="caps"&gt;UI&lt;/span&gt;, but my
phone is rooted. I&amp;#8217;m …&lt;/p&gt;</summary><content type="html">&lt;p&gt;My Motorola Droid (purchased on &lt;a href="/2009/11/droid/"&gt;November 10&lt;sup&gt;th&lt;/sup&gt;,
2009&lt;/a&gt;, 4 days after the release) is still running
Android 2.0.1. I guess this is somewhat out of laziness - I love the
Incredible and its new (and more refined) Android version and &lt;span class="caps"&gt;UI&lt;/span&gt;, but my
phone is rooted. I&amp;#8217;m not willing to give up root, or any of my apps, and
I have yet to find a tutorial for the upgrade to 2.1 (or 2.2??) without
losing root or my apps or&amp;nbsp;data.&lt;/p&gt;
&lt;p&gt;Anyway, I&amp;#8217;m in North Carolina for the weekend and though the hotel
advertised free wifi, much as I feared, nobody bothered to do a site
survey or a real installation, and the signal level in my room is
useless (despite a pretty low noise floor). So after a little googling,
I managed to find the &lt;a href="http://szym.net/projects/barnacle/"&gt;Barnacle Wifi
Tether&lt;/a&gt; (&lt;a href="market://search?q=pname:net.szym.barnacle"&gt;Market
link&lt;/a&gt;) app. Sure enough, it
allows any Droid users with a rooted phone to setup an ad-hoc wireless
network for tethering without a custom kernel. In fact, I&amp;#8217;m writing this
right now on my MacBook Pro tethered to my phone over WiFi. I&amp;#8217;m seeing
764Kbps down and 234Kbps up. Not enough for serious work (forget my
girlfriend&amp;#8217;s hope of playing Warcraft), but definitely enough for email,
web browsing and &lt;span class="caps"&gt;SSH&lt;/span&gt; on a much larger&amp;nbsp;screen.&lt;/p&gt;
&lt;p&gt;My only real complaints are that it&amp;#8217;s an ad-hoc network (which
apparently is a limitation of the Android WiFi driver for the phone), it
doesn&amp;#8217;t support anything better than &lt;span class="caps"&gt;WEP&lt;/span&gt; (so no online banking, and the
usual security concerns with what I&amp;#8217;d equate to public open WiFi), and I
can&amp;#8217;t seem to figure out how to get the &lt;span class="caps"&gt;MAC&lt;/span&gt; &lt;span class="caps"&gt;ACL&lt;/span&gt; to&amp;nbsp;work.&lt;/p&gt;
&lt;p&gt;But given how little I travel, it&amp;#8217;s definitely a good app, a quick
install and setup, and a lot less complex than trying to get &lt;span class="caps"&gt;USB&lt;/span&gt;
tethering working when I eventually get Linux on the&amp;nbsp;&lt;span class="caps"&gt;MBP&lt;/span&gt;.&lt;/p&gt;</content><category term="android"></category><category term="droid"></category><category term="tether"></category><category term="wifi"></category></entry><entry><title>Madwifi on the eeePC</title><link href="https://blog.jasonantman.com/2008/05/madwifi-on-the-eeepc/" rel="alternate"></link><published>2008-05-04T22:32:00-04:00</published><updated>2008-05-04T22:32:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2008-05-04:/2008/05/madwifi-on-the-eeepc/</id><summary type="html">&lt;p&gt;So, I&amp;#8217;ve started a new &lt;a href="http://www.opensuse.org"&gt;OpenSuSE&lt;/a&gt; install on my
eeePC. The &lt;span class="caps"&gt;4GB&lt;/span&gt; &lt;span class="caps"&gt;SDHC&lt;/span&gt; card that I originally used was getting a bit
cramped - I couldn&amp;#8217;t even fit the kernel source! So, I bought a new &lt;span class="caps"&gt;8GB&lt;/span&gt;
&lt;span class="caps"&gt;SDHC&lt;/span&gt; card and started from scratch. I know that OpenSuSE 11 is …&lt;/p&gt;</summary><content type="html">&lt;p&gt;So, I&amp;#8217;ve started a new &lt;a href="http://www.opensuse.org"&gt;OpenSuSE&lt;/a&gt; install on my
eeePC. The &lt;span class="caps"&gt;4GB&lt;/span&gt; &lt;span class="caps"&gt;SDHC&lt;/span&gt; card that I originally used was getting a bit
cramped - I couldn&amp;#8217;t even fit the kernel source! So, I bought a new &lt;span class="caps"&gt;8GB&lt;/span&gt;
&lt;span class="caps"&gt;SDHC&lt;/span&gt; card and started from scratch. I know that OpenSuSE 11 is coming up
soon, but I just couldn&amp;#8217;t wait, so I just used OpenSuSE 10.3&amp;nbsp;again.&lt;/p&gt;
&lt;p&gt;I followed my &lt;a href="http://www.jasonantman.com/wiki/index.php/OpenSuSE_10.3_on_eeePC_External_SDHC"&gt;previous
how-to&lt;/a&gt;,
and also am updating it with some new information - such as my
xorg.conf. Most interestingly, though, I actually got MadWiFi to work
with the &lt;a href="http://madwifi.org/wiki/Compatibility/Atheros#AtherosAR5BXB63"&gt;Atheros
&lt;span class="caps"&gt;AR5BXB63&lt;/span&gt;&lt;/a&gt;
on the eeePC! I haven&amp;#8217;t tested everything yet (specifically &lt;span class="caps"&gt;WPA&lt;/span&gt;/&lt;span class="caps"&gt;WPA2&lt;/span&gt;)
but it seems to work fine. I&amp;#8217;ve updated &lt;a href="http://www.jasonantman.com/wiki/index.php/OpenSuSE_10.3_on_eeePC_External_SDHC#Update_2008-05-02"&gt;my
HowTo&lt;/a&gt;
with the instructions, but mainly it hinges on using
madwifi-ng-r2756+ar5007 (&lt;a href="http://snapshots.madwifi.org/special/madwifi-ng-r2756+ar5007.tar.gz"&gt;gzipped
tarball&lt;/a&gt;)
and compiling from&amp;nbsp;source.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This HowTo is based on the original eeePC 701 4G and OpenSuSE
10.3. It may not be needed for newer versions of OpenSuSE or newer
versions of the&amp;nbsp;eeePC.&lt;/p&gt;</content><category term="atheros"></category><category term="eeepc"></category><category term="madwifi"></category><category term="wifi"></category><category term="wireless"></category></entry></feed>
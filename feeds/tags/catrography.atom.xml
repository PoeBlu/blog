<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jason Antman's Blog - catrography</title><link href="https://blog.jasonantman.com/" rel="alternate"></link><link href="https://blog.jasonantman.com/feeds/tags/catrography.atom.xml" rel="self"></link><id>https://blog.jasonantman.com/</id><updated>2009-12-01T14:11:00-05:00</updated><entry><title>Using Google Maps to produce usable, printable maps</title><link href="https://blog.jasonantman.com/2009/12/using-google-maps-to-produce-usable-printable-maps/" rel="alternate"></link><published>2009-12-01T14:11:00-05:00</published><updated>2009-12-01T14:11:00-05:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2009-12-01:/2009/12/using-google-maps-to-produce-usable-printable-maps/</id><summary type="html">&lt;p&gt;This is a follow-up to my &lt;a href="/2009/11/making-maps-from-gis-data-with-inkscape/"&gt;Making maps from &lt;span class="caps"&gt;GIS&lt;/span&gt; data with
Inkscape&lt;/a&gt; post. After
playing around with Inkscape for quite a while, and coming up with the
dismal results seen in that post, I decided there has to be an easier
way. A little Googling turned up &lt;a href="http://www.wipeout44.com/video/misc/google_maps_large.asp"&gt;this video …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is a follow-up to my &lt;a href="/2009/11/making-maps-from-gis-data-with-inkscape/"&gt;Making maps from &lt;span class="caps"&gt;GIS&lt;/span&gt; data with
Inkscape&lt;/a&gt; post. After
playing around with Inkscape for quite a while, and coming up with the
dismal results seen in that post, I decided there has to be an easier
way. A little Googling turned up &lt;a href="http://www.wipeout44.com/video/misc/google_maps_large.asp"&gt;this video
tutorial&lt;/a&gt; on
how to print large scale maps from Google Maps. It turns out that the
Google Maps &lt;span class="caps"&gt;API&lt;/span&gt; will honor almost any pixel resolution that it&amp;#8217;s passed.
The &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/1146"&gt;Screengrab&lt;/a&gt;
add-on for Firefox has the wonderful capability of being able to capture
a screengrab of page content, at actual resolution, regardless of screen
resolution. So load up a 5000x5000 pixel Google Map, use the Screengrab
addon, and end up with a full 5000x5000 pixel image&amp;nbsp;file.&lt;/p&gt;
&lt;p&gt;After testing this a bit, I decided to go the Google Maps route. This
also has a lot of other added bonuses - I can store my overlay data in
simple &lt;span class="caps"&gt;XML&lt;/span&gt; files, add and remove layers on-the-fly, and also make it
available online (and, theoretically, to any Google Maps-equipped device
used by responders). This even opens up the possibility of using paper
maps as a last resort, and providing the Fire Department with live
hydrant maps on &lt;span class="caps"&gt;GPS&lt;/span&gt;-enabled handheld devices and&amp;nbsp;phones.&lt;/p&gt;
&lt;p&gt;The quirks, however, may need some serious photoshopping (err, rather,
&lt;a href="http://www.gimp.org/"&gt;gimp&lt;/a&gt;ing) to&amp;nbsp;fix:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;With all of the background color, how will this look when&amp;nbsp;printed?&lt;/li&gt;
&lt;li&gt;How do I make the town borders easily defined? It would be a &lt;em&gt;lot&lt;/em&gt;
    of raster editing to remove the background color of areas outside of&amp;nbsp;town.&lt;/li&gt;
&lt;li&gt;How do I overlay a grid for a street name&amp;nbsp;index?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The first step was to setup a large Google Map to develop with. I used
&lt;span class="caps"&gt;PHP&lt;/span&gt; and Monte Ohrt&amp;#8217;s
&lt;a href="http://www.phpinsider.com/php/code/GoogleMapAPI/"&gt;GoogleMapAPI&lt;/a&gt; &lt;span class="caps"&gt;PHP&lt;/span&gt;
wrapper class. It was simple enough to setup a big (3300x5100px) map,
zoom out in Firefox, and start adding some stuff. My examples and
development pages, if you want to take a peek at the code, are available
in &lt;a href="/GFX/googleMaps.tar.gz"&gt;googleMaps.tar.gz&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The first step was to draw a polygon for the outline of the town. I
found some very detailed information on how to get zip code boundary
lines on Matt Cutts&amp;#8217;
&lt;a href="http://www.mattcutts.com/blog/fun-with-zip-codes/"&gt;blog&lt;/a&gt;. Apparently,
he&amp;#8217;s a Google software engineer, heading up their webspam team. I
grabbed the files from the Census, as described, and came up with the
boundary for my zip code looking&amp;nbsp;like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;        60      -0.741427638843858E+02       0.409963180802469E+02
      -0.741375870000000E+02       0.410075970000000E+02
      -0.741308870000000E+02       0.410061970000000E+02
      -0.741308870000000E+02       0.410061970000000E+02
      -0.741307260000000E+02       0.410032600000000E+02
      -0.741326870000000E+02       0.409955970000000E+02
      -0.741278870000000E+02       0.409943970000000E+02
      -0.741280870000000E+02       0.409938970000000E+02
      -0.741327870000000E+02       0.409853970000000E+02
      -0.741352870000000E+02       0.409830970000000E+02
      -0.741369600000000E+02       0.409818620000000E+02
      -0.741410520000000E+02       0.409821940000000E+02
      -0.741412870000000E+02       0.409826970000000E+02
      -0.741412870000000E+02       0.409826970000000E+02
      -0.741417870000000E+02       0.409847970000000E+02
      -0.741427870000000E+02       0.409863970000000E+02
      -0.741482870000000E+02       0.409868970000000E+02
      -0.741536880000000E+02       0.409899970000000E+02
      -0.741510880000000E+02       0.409929970000000E+02
      -0.741531880000000E+02       0.409965970000000E+02
      -0.741571880000000E+02       0.409988970000000E+02
      -0.741557880000000E+02       0.410013970000000E+02
      -0.741461870000000E+02       0.410018970000000E+02
      -0.741400870000000E+02       0.410065970000000E+02
      -0.741375870000000E+02       0.410075970000000E+02
&lt;span class="caps"&gt;END&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As per Matt&amp;#8217;s instructions, I stripped off the first and last lines,
converted everything to normal decimal notation, and built it into a &lt;span class="caps"&gt;PHP&lt;/span&gt;&amp;nbsp;array:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$MP_boundary = array();&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.137587, 41.007597);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.130887, 41.006197);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.130887, 41.006197);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.130726, 41.003260);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.132687, 40.995597);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.127887, 40.994397);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.128087, 40.993897);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.132787, 40.985397);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.135287, 40.983097);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.136960, 40.981862);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.141052, 40.982194);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.141287, 40.982697);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.141287, 40.982697);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.141787, 40.984797);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.142787, 40.986397);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.148287, 40.986897);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.153688, 40.989997);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.151088, 40.992997);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.153188, 40.996597);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.157188, 40.998897);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.155788, 41.001397);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.146187, 41.001897);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.140087, 41.006597);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.137587, 41.007597);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Though this data doesn&amp;#8217;t seem exactly 100% accurate (at least by my
knowledge of the town, and every map I can find) it&amp;#8217;s quite close and a
very good&amp;nbsp;start.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ll update later this week when I have some more&amp;nbsp;done&amp;#8230;&lt;/p&gt;</content><category term="catrography"></category><category term="emergency"></category><category term="EMS"></category><category term="google"></category><category term="maps"></category><category term="PHP"></category></entry></feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jason Antman's Blog</title><link href="http://blog.jasonantman.com/" rel="alternate"></link><link href="http://blog.jasonantman.com/feeds/tags/dream-network.atom.xml" rel="self"></link><id>http://blog.jasonantman.com/</id><updated>2009-02-07T01:15:00-05:00</updated><entry><title>My DreamÂ Network</title><link href="http://blog.jasonantman.com/2009/02/my-dream-network/" rel="alternate"></link><updated>2009-02-07T01:15:00-05:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2009-02-07:2009/02/my-dream-network/</id><summary type="html">&lt;p&gt;On the same thread as the &lt;a href="/2009/02/community-datacenter/"&gt;last
post&lt;/a&gt;, some
thoughts on my ideal network, or the hosts on that&amp;nbsp;network:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;One &amp;#8220;gold master&amp;#8221; installation/kickstart file of a single chosen
    distro, with a base set of packages, including site-specific
    packages. (or something like this implemented in a configuration
    management&amp;nbsp;system)&lt;/li&gt;
&lt;li&gt;All new installations performed over the network in an automated
    fashion, and from a local&amp;nbsp;repository.&lt;/li&gt;
&lt;li&gt;Software updates are automated (either through a configuration
    management tool or something like the behemoth I talked about
    &lt;a href="/2008/10/my-biggest-problem-with-linux/"&gt;here&lt;/a&gt;)
    and pulled from a local repository (perhaps one which mirrors the
    mainline repos, but only downloads a package the first time it&amp;#8217;s&amp;nbsp;requested?).&lt;/li&gt;
&lt;li&gt;&lt;a href="http://reductivelabs.com/trac/puppet"&gt;Puppet&lt;/a&gt; or
    &lt;a href="http://www.cfengine.org/"&gt;CFengine&lt;/a&gt; on each machine. Better than
    just having them is having each machine automatically added when
    it&amp;#8217;s created. Even better yet would be to have Puppet or CFengine
    combined with something like
    &lt;a href="https://fedorahosted.org/cobbler/"&gt;Cobbler&lt;/a&gt;, so I can define a new
    machine in {puppet|cfengine}, list its&amp;#8217; &lt;span class="caps"&gt;MAC&lt;/span&gt; address, then netboot
    the box and come back in a few hours to have an &lt;span class="caps"&gt;OS&lt;/span&gt; installed,
    packages installed and the machine configured, monitored in Nagios,
    monitored for security and backed&amp;nbsp;up.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.tripwire.com/"&gt;Tripwire&lt;/a&gt; or some other sort of security
    software, as well as centralized logging and auditing, on every&amp;nbsp;box.&lt;/li&gt;
&lt;li&gt;A small number of additional &amp;#8220;package groups&amp;#8221; to add to the &amp;#8220;gold
    master&amp;#8221; via config management - something like &amp;#8220;web server&amp;#8221;
    (Apache2, &lt;span class="caps"&gt;PHP&lt;/span&gt;, MySQL, log analysis for them, etc.), &amp;#8220;development
    server&amp;#8221; (&lt;span class="caps"&gt;CVS&lt;/span&gt;, debuggers, etc.). These would also update the backup
    system to include appropriate directories, update Nagios configs,&amp;nbsp;etc.&lt;/li&gt;
&lt;li&gt;A good way - if even a human making notes in a per-machine text file&lt;ul&gt;
&lt;li&gt;of tracking the &amp;#8220;little stuff&amp;#8221; like that one cron script that
makes everything work right, the location of that hacked-together
Python script, etc. A way to easily remember the things needed to
recreate a box which aren&amp;#8217;t found in &lt;code&gt;rpm -qa&lt;/code&gt; or any obvious&amp;nbsp;overviews.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.bacula.org"&gt;Bacula&lt;/a&gt; or &lt;a href="http://www.amanda.org/"&gt;&lt;span class="caps"&gt;AMANDA&lt;/span&gt;&lt;/a&gt;
    setup to backup every box, perhaps with some sort of template system
    for server types - every machine gets &lt;code&gt;/root&lt;/code&gt; and &lt;code&gt;/etc&lt;/code&gt; backed up,
    but web servers get &lt;code&gt;/srv/www&lt;/code&gt; and mail servers get &lt;code&gt;/var/mail&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Nagios setup to monitor everything logical on every box. Perhaps
    this would use a configuration management engine to handle Nagios
    configs, so that for example if any Proliant hardware is used,
    {config management program} will figure this out, install the &lt;span class="caps"&gt;HPASM&lt;/span&gt;
    packages, put the appropriate check scripts on the box, and update
    the Nagios configs. Likewise, adding Apache to a machine should
    cause it to be monitored in the Nagios&amp;nbsp;configs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Unfortunately, as I&amp;#8217;m not independently wealthy, I don&amp;#8217;t have the time
to quit my job, wipe every machine I own, and start from scratch. But it
sure would be nice to be able to, one day, start a server farm from
scratch and be able to implement some of these cool&amp;nbsp;things&amp;#8230;&lt;/p&gt;</summary><category term="configuration"></category><category term="dream network"></category><category term="ideal network"></category><category term="management"></category></entry></feed>
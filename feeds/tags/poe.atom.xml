<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jason Antman's Blog</title><link href="http://blog.jasonantman.com/" rel="alternate"></link><link href="http://blog.jasonantman.com/feeds/tags/poe.atom.xml" rel="self"></link><id>http://blog.jasonantman.com/</id><updated>2007-01-16T22:55:00-05:00</updated><entry><title>The ultimate Geek alarmÂ clock!</title><link href="http://blog.jasonantman.com/2007/01/the-ultimate-geek-alarm-clock/" rel="alternate"></link><updated>2007-01-16T22:55:00-05:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2007-01-16:2007/01/the-ultimate-geek-alarm-clock/</id><summary type="html">&lt;p&gt;So, here&amp;#8217;s an idea that I&amp;#8217;ve been toying around with for a&amp;nbsp;while.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve been dong some development on a pair of
&lt;a href="http://www.soekris.com"&gt;Soekris&lt;/a&gt; embedded Linix boards I bought to use
as a firewall/router and &lt;span class="caps"&gt;WAP&lt;/span&gt;. So, naturally, my interest in embedded
systems is piqued. I know that there are some smaller embedded Linux
devices out there. So, the idea is as&amp;nbsp;follows:&lt;/p&gt;
&lt;p&gt;Get an embedded Linux box that is either PoE or uses a hardwired
connection with a wall-wart, or better yet, uses both, so it can be
designed to have PoE as the primary power, with a 9v battery backup (ok,
it won&amp;#8217;t run too long, but can handle minor power losses if the PoE
switch isn&amp;#8217;t on a&amp;nbsp;&lt;span class="caps"&gt;UPS&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;Attach to it a clock-style &lt;span class="caps"&gt;LED&lt;/span&gt; display, or a matrix &lt;span class="caps"&gt;LED&lt;/span&gt; display, and an
additional really bright red &lt;span class="caps"&gt;LED&lt;/span&gt;, both controlled by software (serial or&amp;nbsp;&lt;span class="caps"&gt;GPIO&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;The system has one &lt;span class="caps"&gt;RJ&lt;/span&gt;-45 connector for Ethernet (10-BaseT) and a serial
console. The console is a captive login to a setup program to define &lt;span class="caps"&gt;IP&lt;/span&gt;,
etc. but by default uses&amp;nbsp;&lt;span class="caps"&gt;DHCP&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Plug it in, and it queries your &lt;span class="caps"&gt;DHCP&lt;/span&gt; server for an &lt;span class="caps"&gt;NTP&lt;/span&gt; server (or in the
absence of one, uses a default Stratum 2). We re-update the time every
day or so. Now, you have an accurate-to-the-second&amp;nbsp;clock.&lt;/p&gt;
&lt;p&gt;We add a speaker to the box, and have a few default built-in MP3s or
WAVs for alarm tones, and add a &lt;span class="caps"&gt;GPIO&lt;/span&gt; &amp;#8220;snooze&amp;#8221; and &amp;#8220;off&amp;#8221;&amp;nbsp;button.&lt;/p&gt;
&lt;p&gt;The serial console allows setting a daily alarm or two, as well as
selecting one of the default&amp;nbsp;tones.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Geekier Part:&lt;/strong&gt;
The alarm clock is controlled by a script called by a Cron job. Now, we
add the miniserv web server and a &lt;span class="caps"&gt;PHP&lt;/span&gt; admin gateway. Login via a
password (user-selectable) and we can upload new audio files for alarms,
as well as adding alarms via the web as cron jobs - now I can program in
my class schedule, and automatically have an alarm at the right time
each day of the&amp;nbsp;week!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Geekiest Part:&lt;/strong&gt;
Remember the matrix display and that additional really bright &lt;span class="caps"&gt;LED&lt;/span&gt;? We
setup simple communication between machines via &lt;span class="caps"&gt;SNMP&lt;/span&gt; or a script on the
clock (called with an Expect script on a remote machine) and we can
activate the super-bright &lt;span class="caps"&gt;LED&lt;/span&gt;, a custom sound, and even a scrolling
message on the &lt;span class="caps"&gt;LED&lt;/span&gt; display (alternates between message and time, of
course) for critical events. Now, when the servers go down, I have
another device (in addition to the &lt;span class="caps"&gt;SMS&lt;/span&gt; alerts on my cell) to tell me to
wake up and deal with it. If we want to get even more fancy, we can
enable a feature through the serial console or web interface that emits
a loud tone for a few seconds and blinks the &lt;span class="caps"&gt;LED&lt;/span&gt; if PoE is lost, or we
can&amp;#8217;t ping a user-selectable address for more than, say, one&amp;nbsp;minute.&lt;/p&gt;
&lt;p&gt;I guess I have too much free time on my&amp;nbsp;hands..&lt;/p&gt;</summary><category term="alarm clock"></category><category term="embedded"></category><category term="geek"></category><category term="PoE"></category></entry></feed>
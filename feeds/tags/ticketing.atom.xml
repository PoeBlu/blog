<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jason Antman's Blog</title><link href="http://newblog.jasonantman.com/" rel="alternate"></link><link href="http://newblog.jasonantman.com/feeds/tags/ticketing.atom.xml" rel="self"></link><id>http://newblog.jasonantman.com/</id><updated>2008-12-17T16:44:00-05:00</updated><entry><title>Verizon Wireless uses Mantis for ticketing</title><link href="http://newblog.jasonantman.com/2008/12/verizon-wireless-uses-mantis-for-ticketing/" rel="alternate"></link><updated>2008-12-17T16:44:00-05:00</updated><author><name>admin</name></author><id>tag:newblog.jasonantman.com,2008-12-17:2008/12/verizon-wireless-uses-mantis-for-ticketing/</id><summary type="html">&lt;p&gt;Many times, I&amp;#8217;ve wished that I paid the $20 to get software for my &lt;a href="http://www.palm.com/us/products/smartphones/treo700p/"&gt;Treo
700p&lt;/a&gt; to record
phone calls. About a month or two ago, I had some issues with my phone
and had to call Verizon Wireless. The poor woman was trying to open a
ticket for me, but said that she was having some problems, as they were
moving from one ticketing system to another, she was having some issues
with the new one, and the old one was down at her&amp;nbsp;location.&lt;/p&gt;
&lt;p&gt;As she waited for a rep from another location to come on the line and
enter the ticket, I happened to remark that I work in &lt;span class="caps"&gt;IT&lt;/span&gt; and had been
doing some work with them (&lt;a href="http://eventum.mysql.com"&gt;Eventum&lt;/a&gt;) lately.
She mentioned that the old one was a proprietary system, but asked if
I&amp;#8217;d ever heard of &lt;a href="http://www.mantisbt.org/"&gt;Mantis&lt;/a&gt;. Of course, I said
that I had. And was then asked if I knew much about it, and whether I
might know what the problem she was having was caused by. Unfortunately,
I had to say no, as I&amp;#8217;d never used it for more than a few minutes. But I
did get to confirm that a company as large and closed (they won&amp;#8217;t
support Linux, their phones run closed &lt;span class="caps"&gt;OS&lt;/span&gt;&amp;#8217;s, and they block my port 80)
as Verizon is happily transitioning from closed-source proprietary
software to a &lt;span class="caps"&gt;GPL&lt;/span&gt;&amp;#8217;d alternative. I also got another item to add to my
list of telephone tech support people who have asked me (the customer)
for&amp;nbsp;support.&lt;/p&gt;
&lt;p&gt;Unfortunately, I don&amp;#8217;t see Verizon listed on the list of &lt;a href="http://www.mantisbt.org/directory.php"&gt;known Mantis
users&lt;/a&gt;, so I have no way to fully
confirm&amp;nbsp;this.&lt;/p&gt;</summary><category term="mantis"></category><category term="ticketing"></category><category term="verizon"></category></entry><entry><title>Update, Eventum/MySQLTicketing Integration</title><link href="http://newblog.jasonantman.com/2008/02/update-eventummysqlticketing-integration/" rel="alternate"></link><updated>2008-02-21T14:53:00-05:00</updated><author><name>admin</name></author><id>tag:newblog.jasonantman.com,2008-02-21:2008/02/update-eventummysqlticketing-integration/</id><summary type="html">&lt;p&gt;Well I know I haven&amp;#8217;t updated in a while. I have a whole bunch of links
that I&amp;#8217;d like to comment on, but things have been horribly busy. You can
find the links in my &lt;a href="http://del.icio.us/jantman/1-toblog"&gt;&amp;#8220;1-toblog&amp;#8221; folder on
del.icio.us&lt;/a&gt; (prefixed with &amp;#8220;1-&amp;#8221; so
it shows up at the beginning of my bookmark&amp;nbsp;menu).&lt;/p&gt;
&lt;p&gt;In monitoring land, I&amp;#8217;ve paused my &lt;a href="http://www.hyperic.com/products/hq_oss.html"&gt;Hyperic
&lt;span class="caps"&gt;HQ&lt;/span&gt;&lt;/a&gt; &lt;span class="caps"&gt;VM&lt;/span&gt; as I wasn&amp;#8217;t too
pleased with how the features panned out. I was invited to beta test
&lt;a href="http://www.groundworkopensource.com/"&gt;Groundwork Open Source&lt;/a&gt; 5.2b, but
I&amp;#8217;m not crazy about the open-ness of a non-public Beta, and am honestly
not that intrigued by the small feature set (though, admittedly, they do
need more documentation on the F/&lt;span class="caps"&gt;OSS&lt;/span&gt; version). I&amp;#8217;d still like to try
them all, especially &lt;a href="http://www.zenoss.com/product/core"&gt;Zenoss Core&lt;/a&gt;,
but I&amp;#8217;m pretty busy with class, and things are heating up at work and
with a few consulting&amp;nbsp;projects.&lt;/p&gt;
&lt;p&gt;In my &amp;#8220;spare time&amp;#8221; (read: staying up until 5 &lt;span class="caps"&gt;AM&lt;/span&gt; and somehow still
getting up for work at 9) I&amp;#8217;ve been working on something that&amp;#8217;s been
bugging me for a while - getting &lt;a href="http://www.nagios.org/"&gt;Nagios&lt;/a&gt; to
automatically open and update tickets in
&lt;a href="http://eventum.mysql.org"&gt;Eventum&lt;/a&gt;, the ticketing system that I (and
MySQL) use. The general idea is to use a &amp;#8220;glue&amp;#8221; script, written in &lt;span class="caps"&gt;PHP&lt;/span&gt;
(Eventum&amp;#8217;s native language). It will (hopefully) keep track of which
hosts/services it has opened tickets for (and what the ticket &lt;span class="caps"&gt;ID&lt;/span&gt; is),
and decide from that whether to open a new ticket or, if one already
exists for that host/service, update it. It should also handle changes
to assigned user/group, update categories, priorities, etc. This will
all be based on a &lt;span class="caps"&gt;DB&lt;/span&gt; table that maps problem severities and
hosts/services to the users, groups, categories, and priorities that
they should be&amp;nbsp;assigned.&lt;/p&gt;
&lt;p&gt;The biggest problem is that I&amp;#8217;m not a whiz at object-oriented &lt;span class="caps"&gt;PHP&lt;/span&gt;, and
like any good &lt;span class="caps"&gt;OO&lt;/span&gt; program, Eventum is broken down into dozens of objects,
classes, and files. With the help of the &lt;a href="http://xdebug.org/"&gt;Xdebug debugging extension for
&lt;span class="caps"&gt;PHP&lt;/span&gt;&lt;/a&gt;, which prints full debugging output including
stack and function call traces, I&amp;#8217;ve been able to *finally* - after
about four hours of work - write a simple little 15-line script that
uses &lt;span class="caps"&gt;ONLY&lt;/span&gt; existing Eventum classes, unmodified (except for a separate
init.php with some stuff commented out), which gets a list of users
assigned to an issue. From here, it shouldn&amp;#8217;t be difficult to get full
issue information and then, hopefully, add and update&amp;nbsp;issues.&lt;/p&gt;
&lt;p&gt;I have a &lt;a href="http://www.jasonantman.com/wiki/index.php/Monitoring_Ticketing"&gt;basic description of the project on my
wiki&lt;/a&gt;,
and the current (development, so could be broken) source code in &lt;span class="caps"&gt;CVS&lt;/span&gt;,
which can be &lt;a href="http://cvs.jasonantman.com/cvs/Eventum-Nagios/"&gt;seen through ViewVC on my
site&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Stay&amp;nbsp;Tuned!&lt;/p&gt;</summary><category term="eventum"></category><category term="monitoring"></category><category term="mysql"></category><category term="programming"></category><category term="ticketing"></category></entry><entry><title>Bug/Issue Tracking - Update / Review of Eventum</title><link href="http://newblog.jasonantman.com/2007/09/bugissue-tracking-update-review-of-eventum/" rel="alternate"></link><updated>2007-09-17T14:47:00-04:00</updated><author><name>admin</name></author><id>tag:newblog.jasonantman.com,2007-09-17:2007/09/bugissue-tracking-update-review-of-eventum/</id><summary type="html">&lt;p&gt;So, after many hours of investigating potential bug/issue tracking
packages, I have chosen one. And gone live with it, all in one weekend.
After much evaluation, my final choice was
&lt;a href="http://eventum.mysql.com/"&gt;Eventum&lt;/a&gt; from MySQL (I&amp;#8217;m using the current
version, 2.0.1). I will admit that it is not perfect. There are some
features I wanted that weren&amp;#8217;t there, and the documentation is awful.
But it&amp;#8217;s written in&amp;nbsp;&lt;span class="caps"&gt;PHP&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;That being said, it is very much a community-driven project. The support
on the mailing list, both from other community members and from Bryan
Alsdorf, has been wonderful. I had some issues viewing the help
documents, specifically those in pop-ups, but I&amp;#8217;ve been told that most
new documentation has been moved to the wiki at the link&amp;nbsp;above.&lt;/p&gt;
&lt;p&gt;The project provides for advanced bug- and issue-tracking including time
tracking, file attachments, and customizable statuses, priorities, and
categories. It also provides email integration, both in terms of sending
email alerts and opening issues (as well as updating and tracking) by
parsing incoming emails. The email alerts worked out-of-the-box, but I
did not configure parsing of&amp;nbsp;emails.&lt;/p&gt;
&lt;p&gt;One of my main requirements which was met perfectly by Eventum is its&amp;#8217;
ability to easily handle multiple projects. It also has a built-in
capability to allow anonymous issue submission (enabled on a
project-by-project basis). You can define custom fields for issues on a
project-by-project basis, and set them as required fields for either
registered users, anonymous users, or&amp;nbsp;both.&lt;/p&gt;
&lt;p&gt;One feature that I found lacking was the possibility for a user to view
all of the open issues assigned to them. Currently, all user interface
is on a project-by-project basis. Therefore, listing of open issues is
only available for the currently selected project. To cope with this, I
hacked together a little &lt;span class="caps"&gt;PHP&lt;/span&gt; script that just queries the database for
issues by user and displays it in a simple little&amp;nbsp;page.&lt;/p&gt;
&lt;p&gt;One of the major features about Eventum that caught my eye was
integration with a version control system (&lt;span class="caps"&gt;SCM&lt;/span&gt;, as far as the Eventum
docs are concerned). The feature list stated integration with &lt;span class="caps"&gt;CVS&lt;/span&gt; and
&lt;span class="caps"&gt;SVN&lt;/span&gt;. When I actually looked into integrating it with &lt;span class="caps"&gt;CVS&lt;/span&gt;, however, the
problems began. Firstly, the javascript-based help popup would not
display anything, let alone the proper page. Installation was otherwise
perfect under Apache2. I was forced to browse to the included &lt;span class="caps"&gt;HTML&lt;/span&gt; file
manually and check it out. The overview seemed simple enough - throw a
script in your &lt;span class="caps"&gt;CVSROOT&lt;/span&gt; loginfo file, update a few variables in the
web-based Eventum configuration, and you&amp;#8217;re off to the races. Reading
on, I found that the installation page was a confusing jumble of
references to a deprecated perl script and the current &lt;span class="caps"&gt;PHP&lt;/span&gt; script to
call from loginfo. Furthermore, database access is provided by having
the script called from loginfo parse the logging information and then
&lt;em&gt;run a &lt;span class="caps"&gt;HTTP&lt;/span&gt; &lt;span class="caps"&gt;GET&lt;/span&gt;&lt;/em&gt; on a local script served in the Eventum web
directory. This added level of abstraction not only confuses me to no
end, but also introduces the possibility for malicious users to insert
data in the Eventum &lt;span class="caps"&gt;SCM&lt;/span&gt; database simply by visiting a well-known&amp;nbsp;&lt;span class="caps"&gt;URL&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;More importantly, the script provided to be called by loginfo seems to
expect the old &lt;span class="caps"&gt;CVS&lt;/span&gt; logging format, not the new one being provided by my
installation of &lt;span class="caps"&gt;CVS&lt;/span&gt; 1.12.12. While annoying, this ended up being a minor
fix in the provided &amp;#8220;process_cvs_commits.php&amp;#8221; - I simply had to
rewrite the argument parsing code so that it no longer expects the file,
old version, and new version (%{sVv}) information to be space-separated
on the command line in the form of s,V,v tuples, but expects everything
to be space-separated. I should be cleaning up my fix a bit and
submitting it for inclusion in the next&amp;nbsp;release.&lt;/p&gt;
&lt;p&gt;Once patched, &lt;span class="caps"&gt;CVS&lt;/span&gt; integration works perfectly. Simply append an
identifier to the end of your commit log message, such as &amp;#8220;(issue: 21)&amp;#8221;
or &amp;#8220;(bug: 21)&amp;#8221; and the commit will be automatically associated with the
issue of that number. When viewing an issue, a list of associated &lt;span class="caps"&gt;CVS&lt;/span&gt;
commits can be&amp;nbsp;viewed.&lt;/p&gt;
&lt;p&gt;It must be remembered that, as I have read, Eventum is used internally
by MySQL. It is, therefor, a mature project that is well tested in one
circumstance. I believe that it is mature and generally well-working
(though I&amp;#8217;ve heard reports that the 2.x tree isn&amp;#8217;t as stable as the
older versions, which are most likely still in use at MySQL). It must
also be noted that the issue with &lt;span class="caps"&gt;CVS&lt;/span&gt; integration is most likely only
with the newer &lt;span class="caps"&gt;CVS&lt;/span&gt; versions using the new logging format (I don&amp;#8217;t know
when the switch was made) and will probably not be noticed in older
projects which have established &lt;span class="caps"&gt;CVS&lt;/span&gt;&amp;nbsp;systems.&lt;/p&gt;
&lt;p&gt;Now, for the opinion section. Eventum has thousands of features. I have
detailed every issue that I have, which total about five. I found it to
be a stable system, ready-to-run out of the box. Overall, I think it has
the best feature set of the open-source bug tracking systems that I
surveyed, which are probably most of the ones out there. It&amp;#8217;s a great
project which I&amp;#8217;d recommend to anyone, though if you want more advanced
features (like integration with &lt;span class="caps"&gt;CVS&lt;/span&gt;, or things not offered such as
anonymous issue viewing) you should be comfortable with coding in &lt;span class="caps"&gt;PHP&lt;/span&gt;
until someone makes patches&amp;nbsp;available.&lt;/p&gt;</summary><category term="bug tracking"></category><category term="eventum"></category><category term="PHP"></category><category term="review"></category><category term="ticketing"></category></entry><entry><title>Bug / Issue Tracking Software</title><link href="http://newblog.jasonantman.com/2007/09/bug-issue-tracking-software/" rel="alternate"></link><updated>2007-09-07T11:44:00-04:00</updated><author><name>admin</name></author><id>tag:newblog.jasonantman.com,2007-09-07:2007/09/bug-issue-tracking-software/</id><summary type="html">&lt;p&gt;I recently posted the following to the DevShed forum in hope of an&amp;nbsp;answer:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I&amp;#8217;ve spent the last 48 hours reading up on bug
tracking software. At the moment, I&amp;#8217;m using the SourceForge tracker for
my public projects and a custom (lightweight kludge) system for internal
and customer-specific&amp;nbsp;stuff.&lt;/p&gt;
&lt;p&gt;First off, I&amp;#8217;m looking for something that&amp;#8217;s F/&lt;span class="caps"&gt;OSS&lt;/span&gt; and no-cost. Beyond
that, it should have a web-based interface, preferably coded in &lt;span class="caps"&gt;PHP&lt;/span&gt; as
that&amp;#8217;s what I&amp;#8217;m most comfortable writing code&amp;nbsp;for.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve looked into many possibilities. At the moment, they&amp;#8217;re pretty much
narrowed down to &lt;span class="caps"&gt;RT&lt;/span&gt;, FlySpray, Codetrack, Trac, and a few other
america&amp;#8217;s promise rorabaugh3possibilities. I&amp;#8217;ve immediately disregarded
anything without an online demo, so some may have slipped by&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;I can do some coding to add a few features as needed, but here&amp;#8217;s what
I&amp;#8217;m looking&amp;nbsp;for:&lt;/p&gt;
&lt;p&gt;1) Web-based interface
2) Ability to handle multiple projects
3) Ability to handle modules/branches of a project - specifically to be
used for projects which also have custom, user-specific modifications on
a branch.
4) *multiple* bug submission forms - ideally, one for team
members/technical users, one (simplified) for non-technical end users,
and one for non-technical users which also collects browser/&lt;span class="caps"&gt;OS&lt;/span&gt;
information, as many of my projects are web-based.
5) If possible, integration with &lt;span class="caps"&gt;CVS&lt;/span&gt; or &lt;span class="caps"&gt;SVN&lt;/span&gt; so that I can track commits
related to a specific bug.
6) Fine-grained access control. There should be a way to submit an
anonymous (unregistered user) bug. Anonymous submissions and registered
user submissions should be authorized on a project-by-project (or
branch-by-branch) basis. There should also be access control on viewing
*any* information at all for certain projects/modules (so the same
system can be used for internal-only&amp;nbsp;projects).&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m sure that I have a lot of other requirements, but these are the ones
that stuck out in my mind. Also, though I don&amp;#8217;t have a system up and
running yet, there&amp;#8217;s a possibility I may be moving to &lt;span class="caps"&gt;LDAP&lt;/span&gt; for all auth,
so something where I could drop in a custom auth module would be a&amp;nbsp;plus.&lt;/p&gt;
&lt;p&gt;Any&amp;nbsp;suggestions?&lt;/p&gt;
&lt;p&gt;I know I probably won&amp;#8217;t find *all* of this in one place, but I&amp;#8217;d like
to minimize the amount of programming I have to do. After all, starting
a new programming project to track bugs in an existing one isn&amp;#8217;t
especially&amp;nbsp;efficient.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We&amp;#8217;ll see what happens out of&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;I recently received a few emails from someone attempting to get &lt;a href="http://www.php-ems-tools.com"&gt;&lt;span class="caps"&gt;PHP&lt;/span&gt; &lt;span class="caps"&gt;EMS&lt;/span&gt;
Tools&lt;/a&gt; up and running for his &lt;span class="caps"&gt;EMS&lt;/span&gt; agency.
I did a lot of correspondence via email, and ended up in a bit of a
predicament. First off, since &lt;span class="caps"&gt;CVS&lt;/span&gt; is down, I had to make a copy of the
latest development sources from their live location on my web server,
and revert to using &lt;span class="caps"&gt;RCS&lt;/span&gt; for the development work. Secondly, he wasn&amp;#8217;t
familiar with the SourceForge trackers and didn&amp;#8217;t have an account with
them, so I had to manually enter the bug reports. This was not good. I
need something&amp;nbsp;better.&lt;/p&gt;
&lt;p&gt;I know that a lot of ticketing systems use e-mail interfaces, but I have
no interest in that - I want to be able to require certain information
for certain people. Moreover, I have a few main issues with most of the
ticketing software I&amp;#8217;ve&amp;nbsp;seen:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It&amp;#8217;s either designed for development team members or non-technical
    end users. I want a system that can present an end-user with a
    simple, non-jargon-filled issue submission form, yet put that right
    in with issues entered by developers, which would have a greater
    depth of technical content. Developers should be able to follow-up
    on users&amp;#8217; tickets and add technical details as needed. Most
    importantly, since most of my projects are web-based, I want to add
    &lt;span class="caps"&gt;JS&lt;/span&gt; to the form which will include the users&amp;#8217; browser and &lt;span class="caps"&gt;OS&lt;/span&gt;
    information in the&amp;nbsp;ticket.&lt;/li&gt;
&lt;li&gt;I don&amp;#8217;t have a server farm. I don&amp;#8217;t expect to be getting hundreds of
    bugs a year, let alone week. As such, it makes no sense for me to
    run a separate system for every project. I want a system that can
    handle multiple&amp;nbsp;projects.&lt;/li&gt;
&lt;li&gt;Furthermore, I want it to handle internal projects as well - server
    upgrades, hardware issue tracking, etc. As such, it should support
    fine-grained access control, both for viewing and submitting bugs.
    Some projects should allow anyone to view bugs, and allow a
    non-registered (provided the email address is valid) user to submit.
    Some projects shouldn&amp;#8217;t let anyone but me see&amp;nbsp;*anything*.&lt;/li&gt;
&lt;li&gt;I need support for branches within projects. While &lt;span class="caps"&gt;PHP&lt;/span&gt; &lt;span class="caps"&gt;EMS&lt;/span&gt; Tools
    only has the trunk publicly available, I now have two branches, one
    customized for my organization and one for this gentleman&amp;#8217;s
    organization. I want a system that can understand that these are
    branches of the main project, and that bugs may pertain to only one
    of these branches, but that all of the bugs from the trunk will
    pertain to&amp;nbsp;them.&lt;/li&gt;
&lt;li&gt;I would love a system that can somehow integrate with &lt;span class="caps"&gt;CVS&lt;/span&gt; or &lt;span class="caps"&gt;SVN&lt;/span&gt;, so
    that I can associate a specific commit with a specific&amp;nbsp;bug(s).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So far, I&amp;#8217;m considering FlySpray, &lt;span class="caps"&gt;RT&lt;/span&gt;, and Trac. I&amp;#8217;m also looking at
Eventum, Codetrac, and BugZero. I&amp;#8217;m interested in &lt;span class="caps"&gt;OTRS&lt;/span&gt; as I&amp;#8217;ve heard
good things about it, but I can&amp;#8217;t seem to find a web-based demo. Most
likely, I&amp;#8217;ll probably give two or three of them a whirl, and then add in
the custom code to do what I need. Of course, none of this will happen
until I either get &lt;span class="caps"&gt;CVS&lt;/span&gt; back up or migrate to&amp;nbsp;&lt;span class="caps"&gt;SVN&lt;/span&gt;.&lt;/p&gt;</summary><category term="bug tracking"></category><category term="bugs"></category><category term="bugzero"></category><category term="eventum"></category><category term="flyspray"></category><category term="otrs"></category><category term="rt"></category><category term="ticketing"></category><category term="trac"></category></entry></feed>
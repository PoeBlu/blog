<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jason Antman's Blog</title><link href="http://blog.jasonantman.com/" rel="alternate"></link><link href="http://blog.jasonantman.com/feeds/tags/ssh.atom.xml" rel="self"></link><id>http://blog.jasonantman.com/</id><updated>2012-07-16T08:47:00-04:00</updated><entry><title>Logging OpenSSH SFTP Transactions</title><link href="http://blog.jasonantman.com/2012/07/logging-openssh-sftp-transactions/" rel="alternate"></link><updated>2012-07-16T08:47:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2012-07-16:2012/07/logging-openssh-sftp-transactions/</id><summary type="html">&lt;p&gt;I just came across a really handy post on &lt;a href="https://plus.google.com/117561367404774597588/posts"&gt;David
Busby&lt;/a&gt;&amp;#8216;s blog:
&lt;a href="http://blog.oneiroi.co.uk/linux/enable-logging-in-the-sftp-subsystem/"&gt;Enable logging in the &lt;span class="caps"&gt;SFTP&lt;/span&gt; subsystem -
Oneiroi&lt;/a&gt;.
From OpenSSH 4.4 on, you can pass arguments to Subsystem calls, and the
sftp subsystem supports logging to an aribtrary syslog facility and
priority. Simply adding a line&amp;nbsp;like:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;Subsystem       sftp    /usr/libexec/openssh/sftp-server -f LOCAL5 -l INFO
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and the appropriate lines to your syslog config will give you a handy
transfer log&amp;nbsp;like:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;Jul 16 09:22:25 hostname sftp-server[2058]: session opened for local user jantman from [A.B.C.D]
Jul 16 09:22:26 hostname sftp-server[2058]: open &amp;quot;/home/jantman/temp/sftp_test&amp;quot; flags WRITE,CREATE,TRUNCATE mode 0666
Jul 16 09:22:45 hostname sftp-server[2058]: close &amp;quot;/home/jantman/temp/sftp_test&amp;quot; bytes read 0 written 1464813
Jul 16 09:23:08 hostname sftp-server[2058]: session closed for local user jantman from [A.B.C.D]
Jul 16 09:27:50 hostname sftp-server[2309]: session opened for local user jantman from [A.B.C.D]
Jul 16 09:27:50 hostname sftp-server[2309]: open &amp;quot;/home/jantman/temp/sftp_test&amp;quot; flags READ mode 0666
Jul 16 09:27:54 hostname sftp-server[2309]: close &amp;quot;/home/jantman/temp/sftp_test&amp;quot; bytes read 1464813 written 0
Jul 16 09:27:54 hostname sftp-server[2309]: session closed for local user jantman from [A.B.C.D]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you have syslog write these logs to their own file, remember to setup
log rotation for&amp;nbsp;them.&lt;/p&gt;
&lt;p&gt;Unfortunately, I&amp;#8217;m not aware of any way to log &lt;span class="caps"&gt;SCP&lt;/span&gt; file&amp;nbsp;transfers.&lt;/p&gt;</summary><category term="logging"></category><category term="openssh"></category><category term="sftp"></category><category term="ssh"></category></entry><entry><title>Secure rsnapshot backups over the WAN via SSH</title><link href="http://blog.jasonantman.com/2012/01/secure-rsnapshot-backups-over-the-wan-via-ssh/" rel="alternate"></link><updated>2012-01-15T17:26:00-05:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2012-01-15:2012/01/secure-rsnapshot-backups-over-the-wan-via-ssh/</id><summary type="html">&lt;p&gt;Since I moved all of my &lt;span class="caps"&gt;WAN&lt;/span&gt;-facing stuff (mail, web, this blog, svn
etc.) to a virtual server with &lt;a href="http://www.linode.com"&gt;Linode&lt;/a&gt;, and just
have a desktop at home, it&amp;#8217;s no longer practical to use
&lt;a href="http://www.bacula.org/"&gt;Bacula&lt;/a&gt; for backups. Linode manages daily and
weekly backups through their backup service, but they&amp;#8217;ll only restore a
full filesystem at a time. I wanted something that would keep daily and
weekly incremental backups long enough that I could find a file changed
(or accidentally deleted) a few days or weeks ago. Since I&amp;#8217;d be backing
up to my desktop at home (which is on a residential dynamic &lt;span class="caps"&gt;IP&lt;/span&gt;
connection), the logical solution was something using
&lt;a href="http://rsync.samba.org/"&gt;rsync&lt;/a&gt;. Even better than that is the
&lt;a href="http://rsnapshot.org/"&gt;rsnapshot&lt;/a&gt; tool, which builds upon rsync and
hard links to manage incremental backups with as little disk usage as
possible (though I&amp;#8217;d certainly recommend excluding log&amp;nbsp;files).&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m pretty strict about security. Since my home connection has a dynamic
&lt;span class="caps"&gt;IP&lt;/span&gt;, things are a bit more complicated - I can&amp;#8217;t push from the server, I
can&amp;#8217;t &lt;span class="caps"&gt;ACL&lt;/span&gt; or firewall the server to just my home &lt;span class="caps"&gt;IP&lt;/span&gt;, and an IPsec &lt;span class="caps"&gt;VPN&lt;/span&gt;
would be difficult to accomplish (not to mention add a lot of overhead
to big file transfers). So, I opted for a solution that uses &lt;span class="caps"&gt;SSH&lt;/span&gt;
key-based authentication, forced comands, and a C&amp;nbsp;wrapper.&lt;/p&gt;
&lt;p&gt;The configuration of rsync and rsnapshot is mostly out of the scope of
this post. There are plenty of good resources for that, so I&amp;#8217;ll just
cover the things that won&amp;#8217;t be found in most tutorials. Also, I&amp;#8217;ll be
referring to the remote machine to be backed up as the &amp;#8220;remote host&amp;#8221; and
the local machine which triggers the backup and stores the data as the
&amp;#8220;local&amp;nbsp;host&amp;#8221;.&lt;/p&gt;
&lt;h2 id="local-host-setup-part-i"&gt;Local Host Setup - Part&amp;nbsp;I&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Choose and create a directory to store your backups in. I have a &lt;span class="caps"&gt;1TB&lt;/span&gt;
    external disk mounted at &lt;code&gt;/mnt/backup/&lt;/code&gt;, so I chose
    &lt;code&gt;/mnt/backup/rsnapshot/&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Generate two sets of password-less &lt;span class="caps"&gt;SSH&lt;/span&gt; keys using the &lt;code&gt;ssh-keygen&lt;/code&gt;
    program. One will be used to run the rsync command on the remote
    host, the other will be used to trigger your pre- and post-backup
    scripts. Name them accordingly (i.e.
    &amp;#8220;remoteHostname_remoteBackupUsername_cmd&amp;#8221; and
    &amp;#8220;remoteHostname_remoteBackupUsername_rsync&amp;#8221;). Now, get (scp) the
    public key for each pair to the remote&amp;nbsp;host.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="remote-host-setup"&gt;Remote Host&amp;nbsp;Setup&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Ensure that rsync is installed on the&amp;nbsp;host.&lt;/li&gt;
&lt;li&gt;Create a user to run the backups. I called this user &amp;#8220;rsyncuser&amp;#8221;.
    Create a home directory, and a group for the user. Do not set a
    password (you don&amp;#8217;t want password&amp;nbsp;logins).&lt;/li&gt;
&lt;li&gt;Copy the public key files you created above to the user&amp;#8217;s &lt;code&gt;~/.ssh/&lt;/code&gt;
    directory.&lt;/li&gt;
&lt;li&gt;Cat the &amp;#8220;remoteHostname_remoteBackupUsername_cmd&amp;#8221; public key into
    the user&amp;#8217;s &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;Now comes the first fun part. Let&amp;#8217;s assume that your pre- and
    post-backup scripts are &lt;code&gt;/root/bin/rsnapshot-pre.sh&lt;/code&gt; and
    &lt;code&gt;/root/bin/rsnapshot-post.sh&lt;/code&gt;, respectively. As root, grab a copy of
    cmd-wrapper.c (from
    &lt;a href="https://github.com/jantman/misc-scripts/blob/master/cmd-wrapper.c"&gt;GitHub&lt;/a&gt;
    or at the bottom of this post). Modify for your use - the only thing
    likely to change is line 38, which ensures it will only run for a
    member of &lt;span class="caps"&gt;GID&lt;/span&gt; 502. Change this to rsyncuser&amp;#8217;s &lt;span class="caps"&gt;GID&lt;/span&gt;. Compile the
    wrapper with &lt;code&gt;gcc -o cmd-wrapper cmd-wrapper.c&lt;/code&gt;. Copy it to
    rsyncuser&amp;#8217;s home directory (/home/rsyncuser), &lt;code&gt;chown root:rsyncuser&lt;/code&gt;
    and &lt;code&gt;chmod 4750&lt;/code&gt;. Yes, this sets the &lt;span class="caps"&gt;SUID&lt;/span&gt; bit. The program will now
    be owned by root, and runnable &lt;em&gt;as root&lt;/em&gt; by rsyncuser (or, more
    specifically, any member of the rsyncuser&amp;nbsp;group).&lt;/li&gt;
&lt;li&gt;Open rsyncuser&amp;#8217;s &lt;code&gt;.ssh/authorized_keys&lt;/code&gt; file in a text editor. At
    the beginning of the &amp;#8220;remoteHostname_remoteBackupUsername_cmd&amp;#8221; key
    line, prepend &lt;code&gt;command="/home/rsyncuser/cmd-wrapper"&lt;/code&gt;. This sets up
    &lt;span class="caps"&gt;SSH&lt;/span&gt; forced command (there&amp;#8217;s a good overview in &lt;a href="http://oreilly.com/catalog/sshtdg/chapter/ch08.html"&gt;O&amp;#8217;Reilly&amp;#8217;s &lt;span class="caps"&gt;SSH&lt;/span&gt;: The
    Definitive
    Guide&lt;/a&gt;) so that
    when this key is used to login, it will directly execute
    &lt;code&gt;/home/rsyncuser/cmd-wrapper&lt;/code&gt; and then exit, without allowing access
    to anything&amp;nbsp;else.&lt;/li&gt;
&lt;li&gt;Add rsyncuser to &lt;code&gt;AllowUsers&lt;/code&gt; in &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; (you &lt;em&gt;do&lt;/em&gt;
    limit user access via &lt;span class="caps"&gt;SSH&lt;/span&gt;, right?) and then reload&amp;nbsp;sshd.&lt;/li&gt;
&lt;li&gt;Now, if you &lt;span class="caps"&gt;SSH&lt;/span&gt; to rsyncuser@remoteHost from the local host, using
    the &amp;#8220;_cmd&amp;#8221; ssh key and a command of &amp;#8220;pre&amp;#8221; (i.e.
    &lt;code&gt;ssh -i /path/to/remoteHostname_remoteBackupUsername_cmd rsyncuser@remoteHost pre&lt;/code&gt;),
    it should execute &lt;code&gt;/root/bin/rsnapshot-pre.sh&lt;/code&gt; ad root, and you
    should see the output&amp;nbsp;locally.&lt;/li&gt;
&lt;li&gt;Repeat the above step for the post-backup script (replacing &amp;#8220;pre&amp;#8221;
    above with &amp;#8220;post&amp;#8221;). You should now have your pre- and post-backup
    scripts working, and triggered remotely. &lt;em&gt;(Note: these steps, and
    some of the other setup here, is a bit more complex so that it will
    work better with rsnapshot backups of multiple remote&amp;nbsp;hosts.)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Cat the &amp;#8220;remoteHostname_remoteBackupUsername_rsync&amp;#8221; public key
    into the backup user&amp;#8217;s &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;As root, grab a copy of rsync-wrapper.c (from
    &lt;a href="https://github.com/jantman/misc-scripts/blob/master/rsync-wrapper.c"&gt;GitHub&lt;/a&gt;
    or at the bottom of this post). Modify for your use - the only thing
    likely to change is line 38, which ensures it will only run for a
    member of &lt;span class="caps"&gt;GID&lt;/span&gt; 502 (change this to rsyncuser&amp;#8217;s &lt;span class="caps"&gt;GID&lt;/span&gt;), and perhaps the
    path of or arguments passed to rsync (the wrapper will call
    &lt;code&gt;/usr/bin/rsync --server --sender -vlogDtprRe.iLsf --numeric-ids . /&lt;/code&gt;).
    Compile the wrapper with &lt;code&gt;gcc -o rsync-wrapper rsync-wrapper.c&lt;/code&gt;.
    Copy it to rsyncuser&amp;#8217;s home directory (/home/rsyncuser),
    &lt;code&gt;chown root:rsyncuser&lt;/code&gt; and &lt;code&gt;chmod 4750&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Open rsyncuser&amp;#8217;s &lt;code&gt;.ssh/authorized_keys&lt;/code&gt; file in a text editor. At
    the beginning of the &amp;#8220;remoteHostname_remoteBackupUsername_rsync&amp;#8221;
    key line, prepend &lt;code&gt;command="/home/rsyncuser/rsync-wrapper"&lt;/code&gt;. This
    will run rsync with the arguments specified in rsync-wrapper.c every
    time this key is used to&amp;nbsp;login.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="local-host-setup-part-ii"&gt;Local Host Setup - Part&amp;nbsp;&lt;span class="caps"&gt;II&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;I use totally separate configs for each host that I backup, to keep
things clean and to let me enable, disable, or tweak one remote backup
without affecting the&amp;nbsp;others.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create host-specific pre- and post-backup scripts. I put them in
    &lt;code&gt;/etc/rsnapshot.d/&lt;/code&gt;.
    &lt;code&gt;/etc/rsnapshot.d/pre-remoteHostName.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c"&gt;# do anything else needed on the local system before a backup&lt;/span&gt;
ssh -i /path/to/remoteHostname_remoteBackupUsername_cmd rsyncuser@remoteHost pre
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;/etc/rsnapshot.d/post-remoteHostName.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c"&gt;# do anything else needed on the local system after a backup&lt;/span&gt;
ssh -i /path/to/remoteHostname_remoteBackupUsername_cmd rsyncuser@remoteHost post
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Setup a set of rsync include and exclude files (see &lt;code&gt;man rsync(1)&lt;/code&gt;,
    &lt;code&gt;--include-from=&lt;/code&gt; and &lt;code&gt;--exclude-from=&lt;/code&gt;). I put mine at
    &lt;code&gt;/etc/rsnapshot.d/rsync-include-remoteHostName.txt&lt;/code&gt; and
    &lt;code&gt;/etc/rsnapshot.d/rsync-exclude-remoteHostName.txt&lt;/code&gt;, respectively.
    (Examples included at the bottom of this&amp;nbsp;post).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure rsnapshot. I use a separate config file for each remote
    host. Copy the default &lt;code&gt;/etc/rsnapshot.conf&lt;/code&gt; to
    &lt;code&gt;/etc/rsnapshot-remoteHostName.conf&lt;/code&gt;. The important items are
    &lt;code&gt;rsync_short_args&lt;/code&gt;, &lt;code&gt;rsync_long_args&lt;/code&gt;, &lt;code&gt;ssh_args&lt;/code&gt;, &lt;code&gt;cmd_preexec&lt;/code&gt;,
    &lt;code&gt;cmd_postexec&lt;/code&gt; and &lt;code&gt;backup&lt;/code&gt;. Here&amp;#8217;s an example of my config file,
    with comments and blank lines&amp;nbsp;removed:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;config_version  1.2
snapshot_root   /mnt/backup/rsnapshot/
cmd_cp          /bin/cp
cmd_rm          /bin/rm
cmd_rsync       /usr/bin/rsync
cmd_ssh         /usr/bin/ssh
cmd_logger      /bin/logger
cmd_du          /usr/bin/du
cmd_rsnapshot_diff      /usr/bin/rsnapshot-diff
interval        daily   14 # save 14 daily backups
interval        weekly  6 # save 6 weekly backups
verbose         2
loglevel        3
logfile /var/log/rsnapshot-remoteHostName.log
lockfile        /var/run/rsnapshot-remoteHostName.pid
rsync_short_args        -a
rsync_long_args --delete --numeric-ids --relative --delete-excluded
ssh_args        -i /path/to/remoteHostname_remoteBackupUsername_rsync
exclude_file    /etc/rsnapshot.d/rsync-exclude-remoteHostName.txt
include_file    /etc/rsnapshot.d/rsync-include-remoteHostName.txt
link_dest       1
use_lazy_deletes        1
cmd_preexec     /etc/rsnapshot.d/pre-remoteHostName.sh
cmd_postexec    /etc/rsnapshot.d/post-remoteHostName.sh
backup  rsyncuser@remoteHostName:/      remoteHostName/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;backup&lt;/code&gt; line is what tells rsync what to back up (&lt;code&gt;/&lt;/code&gt; on
remoteHostName, logging in as rsyncuser), and where to back up to&amp;nbsp;(snapshot_root/remoteHostName/).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create two scripts that will actually trigger the backups, which
    I&amp;#8217;ll call &lt;code&gt;/root/bin/rsnapshot-daily.sh&lt;/code&gt; and &lt;code&gt;/root/bin/rsnapshot-weekly.sh&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/root/bin/rsnapshot-daily.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

/usr/bin/rsnapshot -c /etc/rsnapshot-remoteHostName.conf daily
&lt;span class="c"&gt;# add other hosts here; note, they&amp;#39;ll run in series&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;/root/bin/rsnapshot-weekly.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

/usr/bin/rsnapshot -c /etc/rsnapshot-remoteHostName.conf weekly
&lt;span class="c"&gt;# add other hosts here; note, they&amp;#39;ll run in series&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add two entries to root&amp;#8217;s croontab to run the rsnapshot backups.
    Adjust the following days and times to your&amp;nbsp;liking:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;0 1 * * Mon /root/bin/rsnapshot-weekly.sh # run the weekly backups every Monday at 01:00
30 2 * * * /root/bin/rsnapshot-daily.sh # run the daily backups every day at 02:30, which *should* be after the weekly finished on Monday morning
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check, after the next scheduled runs, that everything appears to
    have run correctly. If you want, you can manually trigger the daily
    script and watch what happens. If you do this more than once, you
    should delete the directories it creates, or else rotation will be
    messed up. If you have issues with rsync, aside from the usual
    troubleshooting, check that rsync-wrapper.c is calling rsync with
    the same arguments that rsnapshot is sending. It may be useful to
    use my
    &lt;a href="https://github.com/jantman/misc-scripts/blob/master/print-cmd.sh"&gt;print-cmd.sh&lt;/a&gt;
    script in place of the &amp;#8220;rsync-wrapper&amp;#8221; forced command. This script
    will simply log the command rsnapshot calls via&amp;nbsp;&lt;span class="caps"&gt;SSH&lt;/span&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Assuming all of this worked, you should now have a fairly secure
&lt;span class="caps"&gt;SSH&lt;/span&gt;-based remotely-triggered backup system. In a follow-up post I
provide my &lt;a href="/2012/02/nagios-check-plugin-for-rsnapshot-backups/"&gt;Nagios Check Plugin for Rsnapshot
Backups&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The referenced scripts, config files, etc. are&amp;nbsp;below:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cmd-wrapper.c&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &lt;/span&gt;
&lt;span class="cp"&gt;#include &lt;/span&gt;
&lt;span class="cp"&gt;#include &lt;/span&gt;
&lt;span class="cp"&gt;#include &lt;/span&gt;
&lt;span class="cp"&gt;#include &lt;/span&gt;
&lt;span class="cp"&gt;#include &lt;/span&gt;

&lt;span class="cm"&gt;/********************************************&lt;/span&gt;
&lt;span class="cm"&gt; * Wrapper - Secure Yourself                &lt;/span&gt;
&lt;span class="cm"&gt; *                                          &lt;/span&gt;
&lt;span class="cm"&gt; * 2007 - Mike Golvach - eggi@comcast.net   &lt;/span&gt;
&lt;span class="cm"&gt; * Modified 2012 by Jason Antman  &lt;/span&gt;
&lt;span class="cm"&gt; *  - configured for use as pre- and post-backup script wrapper&lt;/span&gt;
&lt;span class="cm"&gt; *                                          &lt;/span&gt;
&lt;span class="cm"&gt; * &lt;span class="caps"&gt;USAGE&lt;/span&gt;: cmd-wrapper [pre|post]&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; * $HeadURL: http://svn.jasonantman.com/misc-scripts/cmd-wrapper.c $&lt;/span&gt;
&lt;span class="cm"&gt; * $LastChangedRevision: 26 $&lt;/span&gt;
&lt;span class="cm"&gt; *                                          &lt;/span&gt;
&lt;span class="cm"&gt; ********************************************/&lt;/span&gt;

&lt;span class="cm"&gt;/* Creative Commons Attribution-Noncommercial-Share Alike 3.0 United States License */&lt;/span&gt;

&lt;span class="cm"&gt;/* Define global variables */&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;gid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* main(int argc, char **argv) - main process loop */&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;envp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;origcmd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;origcmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SSH_ORIGINAL_COMMAND&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="cm"&gt;/* printf (&amp;quot;Original Command:%s\n&amp;quot;, origcmd); */&lt;/span&gt;

  &lt;span class="cm"&gt;/* Set euid and egid to actual user */&lt;/span&gt;

  &lt;span class="n"&gt;gid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getgid&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;setegid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getgid&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
  &lt;span class="n"&gt;seteuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getuid&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

  &lt;span class="cm"&gt;/* Confirm user is in &lt;span class="caps"&gt;GROUP&lt;/span&gt;(502) group */&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;gid&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;502&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;User Not Authorized! Exiting...&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="cm"&gt;/* Check argc count only at this point */&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Usage: cmd-wrapper [pre|post]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="cm"&gt;/* Set uid, gid, euid and egid to root */&lt;/span&gt;

  &lt;span class="n"&gt;setegid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;seteuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;setgid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;setuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="cm"&gt;/* Check argv for proper arguments and run&lt;/span&gt;
&lt;span class="cm"&gt;   * the corresponding script, if invoked.&lt;/span&gt;
&lt;span class="cm"&gt;   */&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;strncmp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;origcmd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pre&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;execl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/root/bin/rsnapshot-pre.sh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;rsnapshot-pre.sh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;&lt;span class="caps"&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Execl:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;strncmp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;origcmd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;execl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/root/bin/rsnapshot-post.sh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;rsnapshot-post.sh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;&lt;span class="caps"&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Execl:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;span class="caps"&gt;ERROR&lt;/span&gt;: Invalid command: %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;origcmd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Usage: &lt;span class="caps"&gt;COMMAND&lt;/span&gt; [pre|post]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;rsync-wrapper.c&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &lt;/span&gt;
&lt;span class="cp"&gt;#include &lt;/span&gt;
&lt;span class="cp"&gt;#include &lt;/span&gt;
&lt;span class="cp"&gt;#include &lt;/span&gt;
&lt;span class="cp"&gt;#include &lt;/span&gt;

&lt;span class="cm"&gt;/********************************************&lt;/span&gt;
&lt;span class="cm"&gt; * Wrapper - Secure Yourself                &lt;/span&gt;
&lt;span class="cm"&gt; *                                          &lt;/span&gt;
&lt;span class="cm"&gt; * 2007 - Mike Golvach - eggi@comcast.net   &lt;/span&gt;
&lt;span class="cm"&gt; * Modified 2012 by Jason Antman  &lt;/span&gt;
&lt;span class="cm"&gt; *  - configured for use as rsync wrapper&lt;/span&gt;
&lt;span class="cm"&gt; *                                          &lt;/span&gt;
&lt;span class="cm"&gt; * $HeadURL: http://svn.jasonantman.com/misc-scripts/rsync-wrapper.c $&lt;/span&gt;
&lt;span class="cm"&gt; * $LastChangedRevision: 26 $&lt;/span&gt;
&lt;span class="cm"&gt; *                                          &lt;/span&gt;
&lt;span class="cm"&gt; ********************************************/&lt;/span&gt;

&lt;span class="cm"&gt;/* Creative Commons Attribution-Noncommercial-Share Alike 3.0 United States License */&lt;/span&gt;

&lt;span class="cm"&gt;/* Define global variables */&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;gid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* main(int argc, char **argv) - main process loop */&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="cm"&gt;/* Set euid and egid to actual user */&lt;/span&gt;

  &lt;span class="n"&gt;gid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getgid&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;setegid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getgid&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
  &lt;span class="n"&gt;seteuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getuid&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

  &lt;span class="cm"&gt;/* Confirm user is in &lt;span class="caps"&gt;GROUP&lt;/span&gt;(502) group */&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;gid&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;502&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;User Not Authorized! Exiting...&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="cm"&gt;/* Check argc count only at this point */&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Usage: rsync-wrapper&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="cm"&gt;/* Set uid, gid, euid and egid to root */&lt;/span&gt;

  &lt;span class="n"&gt;setegid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;seteuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;setgid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;setuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="cm"&gt;/* Check argv for proper arguments and run&lt;/span&gt;
&lt;span class="cm"&gt;   * the corresponding script, if invoked.&lt;/span&gt;
&lt;span class="cm"&gt;   */&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;execl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/usr/bin/rsync&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;rsync&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;--server&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;--sender&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;-vlogDtprRe.iLsf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;--numeric-ids&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;&lt;span class="caps"&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Execl:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;/etc/rsnapshot.d/rsync-include-remoteHostName.txt&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;# Include
+ /dev/console
+ /dev/initctl
+ /dev/null
+ /dev/zero
+ /usr/local/*
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;/etc/rsnapshot.d/rsync-exclude-remoteHostName.txt&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;# Exclude
- /cgroup/*
- /dev/*
- /lib/*
- lost+found/
- /proc/*
- /sys/
- /tmp/
- /var/log/*
&lt;/pre&gt;&lt;/div&gt;</summary><category term="backups"></category><category term="linode"></category><category term="rsnapshot"></category><category term="rsync"></category><category term="security"></category><category term="ssh"></category><category term="wrapper"></category></entry><entry><title>HP Prolaint iLO SSH Problems</title><link href="http://blog.jasonantman.com/2009/06/hp-prolaint-ilo-ssh-problems/" rel="alternate"></link><updated>2009-06-11T23:52:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2009-06-11:2009/06/hp-prolaint-ilo-ssh-problems/</id><summary type="html">&lt;p&gt;There&amp;#8217;s a known issue with the &lt;span class="caps"&gt;SSH&lt;/span&gt; implementation in the iLO firmware
for &lt;span class="caps"&gt;HP&lt;/span&gt; Proliant servers (specifically G2 and G3) and OpenSSH 5.1p1.
There was a
&lt;a href="http://marc.info/?l=openssh-unix-dev&amp;amp;m=122095298729858&amp;amp;w=2"&gt;thread&lt;/a&gt; on
the OpenSSH developers list that referenced this problem and suggested a
solution, but it doesn&amp;#8217;t seem to be a sure&amp;nbsp;fix.&lt;/p&gt;
&lt;p&gt;This problem is present on my &lt;span class="caps"&gt;DL360&lt;/span&gt; G2&amp;#8217;s which are running the 1.84
2006-05-05 version of the iLO firmware (iLO 1.84 pass9) with the P26
2004.05.01 version of the system firmware. I also see the issue on a
&lt;span class="caps"&gt;DL380G3&lt;/span&gt; running iLO 1.92 2008.04.24 and system firmware P29 2004.09.15.
The only way that I can reliably get into the iLO is by SSHing from a
box with an older version of &lt;span class="caps"&gt;SSH&lt;/span&gt;, such as&amp;nbsp;4.2p1.&lt;/p&gt;
&lt;p&gt;Most of the things that I could find online referenced unsetting the
&lt;span class="caps"&gt;LANG&lt;/span&gt; environment variable (&lt;code&gt;unset LANG&lt;/code&gt;) and then SSHing with agent forwarding disabled (&lt;code&gt;ssh -a hostname-ilo&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Unfortunately this combination doesn&amp;#8217;t seem to do it for&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;I happened to stumble by &lt;a href="http://www.mail-archive.com/debian-ssh@lists.debian.org/msg00904.html"&gt;this
post&lt;/a&gt;
to the debian-ssh mailing list, which suggested that shortening the new
OpenSSH version string fixed the&amp;nbsp;problem.&lt;/p&gt;
&lt;p&gt;I was able to confirm that the version string is, in fact, the sole
problem. I downloaded the source of OpenSSH 5.2p1 and, with the
following small patch to version.h, managed to get &lt;span class="caps"&gt;SSH&lt;/span&gt; working to the
iLO&amp;nbsp;perfectly:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gd"&gt;--- openssh-patched/version.h   2009-06-12 00:35:48.000000000 -0400&lt;/span&gt;
&lt;span class="gi"&gt;+++ openssh-5.2p1/version.h     2009-02-22 19:09:26.000000000 -0500&lt;/span&gt;
&lt;span class="gu"&gt;@@ -1,6 +1,6 @@&lt;/span&gt;
 /* $OpenBSD: version.h,v 1.55 2009/02/23 00:06:15 djm Exp $ */

&lt;span class="gd"&gt;-#define SSH_VERSION    &amp;quot;OpenSSH&amp;quot;&lt;/span&gt;
&lt;span class="gi"&gt;+#define SSH_VERSION    &amp;quot;OpenSSH_5.2&amp;quot;&lt;/span&gt;

&lt;span class="gd"&gt;-#define SSH_PORTABLE   &amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="gi"&gt;+#define SSH_PORTABLE   &amp;quot;p1&amp;quot;&lt;/span&gt;
 #define SSH_RELEASE    SSH_VERSION SSH_PORTABLE
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I patched version.h, ran &lt;code&gt;./configure&lt;/code&gt;, &lt;code&gt;make&lt;/code&gt;, and then copied the
compiled ssh binary to /usr/bin/ilossh, so that my original ssh binary
would be intact, and the ilossh binary would be left alone by &lt;span class="caps"&gt;RPM&lt;/span&gt;&amp;nbsp;upgrades.&lt;/p&gt;</summary><category term="ilo"></category><category term="openssh"></category><category term="proliant"></category><category term="ssh"></category></entry><entry><title>Centralized Storage via SFTP</title><link href="http://blog.jasonantman.com/2008/04/centralized-storage-via-sftp/" rel="alternate"></link><updated>2008-04-21T17:28:00-04:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2008-04-21:2008/04/centralized-storage-via-sftp/</id><summary type="html">&lt;p&gt;For quite a while, I&amp;#8217;ve been planning on centralizing a lot of my
personal storage (documents, miscellaneous stuff) on one machine at
home. The biggest problem that I have is that, while a &lt;span class="caps"&gt;VPN&lt;/span&gt; would be a
good solution for my apartment (if I could get
&lt;a href="http://www.ipcop.org/"&gt;IPcop&lt;/a&gt;to do &lt;span class="caps"&gt;VPN&lt;/span&gt; between two dynamic IPs), it
doesn&amp;#8217;t really work for my mobile life. My laptop is often connected to
untrusted wireless, and unknown firewall configurations, so &lt;span class="caps"&gt;VPN&lt;/span&gt; isn&amp;#8217;t
always the best (and definitely not the easiest) option. Given road
warrior use, &lt;span class="caps"&gt;NFS&lt;/span&gt; is obviously out of the&amp;nbsp;question.&lt;/p&gt;
&lt;p&gt;After a little searching, I found the
&lt;a href="http://fuse.sourceforge.net/sshfs.html"&gt;&lt;span class="caps"&gt;SSHFS&lt;/span&gt;&lt;/a&gt; module for
&lt;a href="http://fuse.sourceforge.net/"&gt;&lt;span class="caps"&gt;FUSE&lt;/span&gt;&lt;/a&gt;, which allows userspace mounting of
a &lt;span class="caps"&gt;SFTP&lt;/span&gt; filesystem. Despite some initial hiccups, I managed to get it
setup on two machines - my laptop and a desktop in the apartment. This
week I&amp;#8217;ll finish working on the rest of the machines - and eventually
replace my aging &lt;a href="http://www.jasonantman.com/wiki/index.php/SSH_Gateway_Box"&gt;&lt;span class="caps"&gt;SSH&lt;/span&gt;
gateway&lt;/a&gt;
machine (currently a 10-year-old Gateway mini tower) with a
&lt;a href="http://www.soekris.com/"&gt;Soekris&lt;/a&gt;&amp;nbsp;box.&lt;/p&gt;
&lt;p&gt;The setup was pretty&amp;nbsp;easy:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make sure you have public key authentication setup for ssh between
    the machines, using &lt;span class="caps"&gt;RSA&lt;/span&gt;&amp;nbsp;keys.&lt;/li&gt;
&lt;li&gt;Make sure fuse, libfuse, and the related packages are&amp;nbsp;installed.&lt;/li&gt;
&lt;li&gt;Install the sshfs&amp;nbsp;package.&lt;/li&gt;
&lt;li&gt;Make sure your user is added to the &amp;#8220;trusted&amp;#8221; group (for&amp;nbsp;OpenSuSE).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After that, just give it a spin, as the user that you want to mount the
filesystem&amp;nbsp;as:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sshfs hostname:/path/to/mount /path/to/local/mountpoint&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Once that worked pefectly, I added the following to my &lt;code&gt;.bash_profile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# this handles &lt;span class="caps"&gt;SSHFS&lt;/span&gt; mount of the central-home dir&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -a /path/to/local/mountpoint &lt;span class="o"&gt;]&lt;/span&gt;; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;span class="caps"&gt;HOSTNAME&lt;/span&gt; home is mounted at /path/to/local/mountpoint&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Mounting &lt;span class="caps"&gt;HOSTNAME&lt;/span&gt; home at /path/to/local/mountpoint...&amp;quot;&lt;/span&gt;
    hostname:/path/to/mount /path/to/local/mountpoint&lt;span class="sb"&gt;`&lt;/span&gt;  
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="fuse"></category><category term="sftp"></category><category term="ssh"></category><category term="sshfs"></category><category term="storage"></category></entry><entry><title>Rainy Day Link Updates</title><link href="http://blog.jasonantman.com/2008/02/rainy-day-link-updates/" rel="alternate"></link><updated>2008-02-13T13:27:00-05:00</updated><author><name>admin</name></author><id>tag:blog.jasonantman.com,2008-02-13:2008/02/rainy-day-link-updates/</id><summary type="html">&lt;p&gt;Well, today happens to be my 21st birthday. Now, not only can I vote or
die for my country, but I can finally buy a drink when a president I
didn&amp;#8217;t vote for sends me off to war! All kidding aside, almost every
year I can remember, it&amp;#8217;s either snowed on my birthday, or been a rainy,
slushy mess. This year appears to be the latter - an utterly disgusting
mix of rain, slushy snow, and little chunks of ice from last&amp;nbsp;night.&lt;/p&gt;
&lt;p&gt;I haven&amp;#8217;t had much time this week to do anything interesting - it&amp;#8217;s been
a busy week for class-related stuff, and a bunch of work-related stuff
too. So, I guess I&amp;#8217;ll just post some interesting links for the past few&amp;nbsp;days&amp;#8230;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.sun.com/aboutsun/pr/2008-02/sunflash.20080212.1.xml"&gt;Sun Microsystems has announced that we&amp;#8217;ll be acquiring
Innotek&lt;/a&gt;,
and therefore VirtualBox. This means that Sun&amp;#8217;s virtualization products
will now reach to the desktop - and that I should give VirtualBox a shot
for running OpenSolaris on my laptop. (aside: why is virtualization not
in my Firefox spell check&amp;nbsp;yet???)&lt;/p&gt;
&lt;p&gt;Researchers at the Pittsburgh Supercomputing Center have come out with
&lt;a href="http://www.psc.edu/networking/projects/hpn-ssh/"&gt;a version of &lt;span class="caps"&gt;SSH&lt;/span&gt; / &lt;span class="caps"&gt;SCP&lt;/span&gt; that uses
multi-threading&lt;/a&gt;, for
use in high-bandwidth applications on multi-core&amp;nbsp;systems.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.itnews.com.au/Feature/4203,linux-we-have-a-pr-problem.aspx"&gt;An ITnews article on why Open Source needs better
&lt;span class="caps"&gt;PR&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What? Microsoft sued &lt;em&gt;again&lt;/em&gt;?
&lt;a href="http://arstechnica.com/news.ars/post/20080211-vista-capable-scheme-was-panned-at-microsoft.html"&gt;Ars Technica ran an article on the Vista Capable
fiasco&lt;/a&gt;,
with some comments from &lt;span class="caps"&gt;MS&lt;/span&gt; insiders. How is it that such a big company,
with such a ubiquitous product, can constantly be sued, have &lt;span class="caps"&gt;MAJOR&lt;/span&gt;
screwups, screw over their customers, and still people come back for&amp;nbsp;more?&lt;/p&gt;
&lt;p&gt;&lt;a href="http://news.bbc.co.uk/1/hi/business/7241022.stm"&gt;&lt;span class="caps"&gt;BBC&lt;/span&gt; News - &lt;span class="caps"&gt;EU&lt;/span&gt; Competition Regulators raid Intel offices in
Munich&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A CNet article (linked from &lt;a href="http://www.johnmwillis.com/cms/us-treasury-wasting-tens-of-millions-on-a-1-million-problem/"&gt;John M. Willis&amp;#8217; &lt;span class="caps"&gt;ESM&lt;/span&gt;
Blog&lt;/a&gt;)
on the &lt;a href="http://blogs.cnet.com/8301-13505_1-9870273-16.html?tag=head"&gt;&lt;span class="caps"&gt;US&lt;/span&gt; Treasury upping its content management budget to $28.2
million&lt;/a&gt; -
no wonder why ww have so much debt, nobody told them about Drupal. From
the article - &amp;#8220;tens of millions on a $1 million&amp;nbsp;problem&amp;#8221;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://nagioswiki.com/wiki/index.php/Main_Page"&gt;Roger Rustad&amp;#8217;s Nagios
Wiki&lt;/a&gt;, liked in a
&lt;a href="http://www.groundworkopensource.com/community/blog/?p=135"&gt;Groundwork blog
entry&lt;/a&gt;.&lt;/p&gt;</summary><category term="birthday"></category><category term="innotek"></category><category term="multi-threading"></category><category term="opensource"></category><category term="ssh"></category><category term="sun"></category><category term="virtualbox"></category></entry></feed>
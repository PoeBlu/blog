<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jason Antman's Blog</title><link href="/" rel="alternate"></link><link href="/feeds/tech-howtos.atom.xml" rel="self"></link><id>/</id><updated>2013-08-26T06:00:00-04:00</updated><entry><title>Testing GPG Key Passphrases</title><link href="/2013/08/testing-gpg-key-passphrases/" rel="alternate"></link><updated>2013-08-26T06:00:00-04:00</updated><author><name>admin</name></author><id>tag:,2013-08-26:2013/08/testing-gpg-key-passphrases/</id><summary type="html">&lt;p&gt;So hypothetically, you have a &lt;span class="caps"&gt;GPG&lt;/span&gt; public/private keypair (from a backup
or old computer), but you don&amp;#8217;t remember the passphrase. Here&amp;#8217;s a
relatively simple way to find it from a number of possible options. This
&lt;em&gt;requires&lt;/em&gt; that you have a computer secure enough to store the possible
options in a text file. I&amp;#8217;d recommend storing that file on a
ramdisk/tmpfs, and using a temporary &lt;span class="caps"&gt;VM&lt;/span&gt; for this, which you&amp;#8217;ll wipe away
when you&amp;#8217;re&amp;nbsp;done.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Preparation:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You have an appropriately secure place to do this with &lt;span class="caps"&gt;GPG&lt;/span&gt;
    installed, and a safe place to store a text file of sample
    passphrases (i.e. a&amp;nbsp;ramdisk).&lt;/li&gt;
&lt;li&gt;Copy your backed up public and private keys to &lt;code&gt;~/.gnupg&lt;/code&gt; on that
    host. Let&amp;#8217;s assume they&amp;#8217;re called &lt;code&gt;TestUser_public.key&lt;/code&gt; and
    &lt;code&gt;TestUser_private.key&lt;/code&gt;. We&amp;#8217;re assuming that you &lt;span class="caps"&gt;KNOW&lt;/span&gt;, &lt;span class="caps"&gt;BEYOND&lt;/span&gt; A &lt;span class="caps"&gt;DOUBT&lt;/span&gt;
    that these are your keys (i.e. you got them from a secure offline
    backup medium, you&amp;#8217;ve verified against a printed key fingerprint,
    you&amp;#8217;ve verified the fingerprints against a &lt;a href="http://pgp.mit.edu/"&gt;keyserver&lt;/a&gt; that you
    know is authoritative for your keys,&amp;nbsp;etc.).&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;First, we import the public and private keys to&amp;nbsp;&lt;span class="caps"&gt;GPG&lt;/span&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;testuser:~$ cd .gnupg
testuser:~/.gnupg$ gpg --import TestUser_public.key 
gpg: keyring `/home/testuser/.gnupg/secring.gpg` created
gpg: key 17AD8D3D: public key &amp;quot;Test User (Test User) &amp;quot; imported
gpg: Total number processed: 1
gpg:               imported: 1  (RSA: 1)

testuser:~/.gnupg$ gpg --allow-secret-key-import --import TestUser_secret.key 
gpg: key 17AD8D3D: secret key imported
gpg: key 17AD8D3D: &amp;quot;Test User (Test User) &amp;quot; not changed
gpg: Total number processed: 1
gpg:              unchanged: 1
gpg:       secret keys read: 1
gpg:   secret keys imported: 1
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check that the keys are&amp;nbsp;there:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;testuser:~/.gnupg$ gpg --list-keys
/home/testuser/.gnupg/pubring.gpg
--------------------------------
pub   2048R/17AD8D3D 2013-08-24
uid                  Test User (Test User) 
sub   2048R/40D9F35E 2013-08-24

testuser:~/.gnupg$ gpg --list-secret-keys
/home/testuser/.gnupg/secring.gpg
--------------------------------
sec   2048R/17AD8D3D 2013-08-24
uid                  Test User (Test User) 
ssb   2048R/40D9F35E 2013-08-24

testuser:~/.gnupg$
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Note the fingerprint of the key which is, in this case, &lt;code&gt;17AD8D3D&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Testing&amp;nbsp;Passphrases:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Now that we have the keys imported, we&amp;#8217;re ready to test some
    passphrases. Enter your passphrases, one per line, in a text file.
    We&amp;#8217;re assuming that we&amp;#8217;re working on a totally secured host
    (ideally, a &lt;span class="caps"&gt;VM&lt;/span&gt; running on a standalone, non-networked machine) that
    will be destroyed when we&amp;#8217;re done. For added security, I&amp;#8217;d put this
    file on a ramdisk. In this example, the actual passphrase for the
    key is &amp;#8220;test&amp;#8221;. Here&amp;#8217;s our text&amp;nbsp;file:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;testuser:~/.gnupg$ cat /tmp/passphrases 
bad
notgood
notright
test
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next, create a test data file to try to&amp;nbsp;sign/encrypt:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;testuser:~/.gnupg$ echo &amp;quot;test input&amp;quot; &amp;gt; /tmp/test.in
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now we run the actual test (see below for more&amp;nbsp;information&amp;#8230;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;testuser:~/.gnupg$ for p in `cat /tmp/passphrases`; do echo &amp;quot;$p&amp;quot; | gpg -q --sign --local-user 17AD8D3D --passphrase-fd 0 --output /dev/null --yes /tmp/test.in &amp;amp;&amp;amp; (echo &amp;quot;CORRECT passphrase: $p&amp;quot; &amp;amp;&amp;amp; break); done
Reading passphrase from file descriptor 0

You need a passphrase to unlock the secret key for
user: &amp;quot;Test User (Test User) &amp;quot;
2048-bit RSA key, ID 17AD8D3D, created 2013-08-24

gpg: skipped &amp;quot;17AD8D3D&amp;quot;: bad passphrase
gpg: signing failed: bad passphrase
Reading passphrase from file descriptor 0

You need a passphrase to unlock the secret key for
user: &amp;quot;Test User (Test User) &amp;quot;
2048-bit RSA key, ID 17AD8D3D, created 2013-08-24

gpg: skipped &amp;quot;17AD8D3D&amp;quot;: bad passphrase
gpg: signing failed: bad passphrase
Reading passphrase from file descriptor 0

You need a passphrase to unlock the secret key for
user: &amp;quot;Test User (Test User) &amp;quot;
2048-bit RSA key, ID 17AD8D3D, created 2013-08-24

gpg: skipped &amp;quot;17AD8D3D&amp;quot;: bad passphrase
gpg: signing failed: bad passphrase
Reading passphrase from file descriptor 0

You need a passphrase to unlock the secret key for
user: &amp;quot;Test User (Test User) &amp;quot;
2048-bit RSA key, ID 17AD8D3D, created 2013-08-24

CORRECT passphrase: test
testuser:~/.gnupg$
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And there we have it, the working passphrase. I&amp;#8217;m sure there&amp;#8217;s a
    more efficient way to do this, and probably a more secure way, but
    I&amp;#8217;m not trying to brute-force someone&amp;#8217;s &lt;span class="caps"&gt;GPG&lt;/span&gt; key, I&amp;#8217;m trying to
    remember which one of my (many, many) passwords I used for a &lt;span class="caps"&gt;GPG&lt;/span&gt; key
    that I generated a decade&amp;nbsp;ago.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The actual command that we ran, rewritten with some linebreaks for
legibility,&amp;nbsp;is:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;for p in `cat /tmp/passphrases`
do
    echo &amp;quot;$p&amp;quot; | gpg -q --sign --local-user 17AD8D3D --passphrase-fd 0 --output /dev/null --yes /tmp/test.in &amp;amp;&amp;amp; (echo &amp;quot;CORRECT passphrase: $p&amp;quot; &amp;amp;&amp;amp; break)
done
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This loops over each line in the passphrases file (each passphrase that
we want to try), and for each one, echoes the password and pipes it to
&lt;span class="caps"&gt;STDIN&lt;/span&gt; of `gpg`, which tries to sign /tmp/test.in (sending the output
to /dev/null) using the key with &lt;span class="caps"&gt;ID&lt;/span&gt; &lt;code&gt;17AD8D3D&lt;/code&gt; (from #5 in the
Preparation steps above) and a password provided on &lt;span class="caps"&gt;STDIN&lt;/span&gt;. If the &lt;span class="caps"&gt;GPG&lt;/span&gt;
command succeeds, we echo the passphrase and stop looping through the
passphrases&amp;nbsp;file.&lt;/p&gt;
&lt;p&gt;I hope I wouldn&amp;#8217;t have to say this for anyone who&amp;#8217;s reading my blog, but
this information (as easy as it is to be figured out), is not to be used
for unethical&amp;nbsp;purposes.&lt;/p&gt;</summary><category term="encryption"></category><category term="gnupg"></category><category term="gpg"></category><category term="key"></category><category term="passphrase"></category><category term="pgp"></category></entry><entry><title>Quick Tip: Timestamping bash history</title><link href="/2013/06/quick-tip-timestamping-bash-history/" rel="alternate"></link><updated>2013-06-11T07:09:00-04:00</updated><author><name>admin</name></author><id>tag:,2013-06-11:2013/06/quick-tip-timestamping-bash-history/</id><summary type="html">&lt;p&gt;Here&amp;#8217;s a tiny little snippet that I have in my &lt;code&gt;.bashrc&lt;/code&gt; which really
comes in handy when trying to figure out what I did on a system when.
One of the first things I do when (eek) building out or working on a
one-off machine (or setting up a new laptop/desktop, as I am right now)
is set this in bashrc for my user and root, so I can go back and
document the setup process with a little more ease and sanity. Just add
this (it&amp;#8217;s just a &lt;a href="http://linux.die.net/man/3/strftime"&gt;strftime (3)&lt;/a&gt; format string &lt;a href="http://www.gnu.org/software/bash/manual/bashref.html#index-HISTTIMEFORMAT"&gt;according to the
docs&lt;/a&gt;, so adjust as desired) to &lt;code&gt;.bashrc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;&lt;span class="caps"&gt;HISTTIMEFORMAT&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%F %T &amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and bash will store commented-out integer timestamps before each line in
&lt;code&gt;.bash_history&lt;/code&gt; like&amp;nbsp;so:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#1370950005&lt;/span&gt;
less .bashrc
&lt;span class="c"&gt;#1370950017&lt;/span&gt;
&lt;span class="nb"&gt;history&lt;/span&gt; 
&lt;span class="c"&gt;#1370950279&lt;/span&gt;
tail -30 .bash_history 
&lt;span class="c"&gt;#1370950293&lt;/span&gt;
&lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;the output of &lt;code&gt;history&lt;/code&gt; now uses the specified time&amp;nbsp;format:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;  997  2013-06-11 07:26:45 less .bashrc
  998  2013-06-11 07:26:57 history 
  999  2013-06-11 07:31:19 tail -30 .bash_history 
 1000  2013-06-11 07:31:33 exit
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;</summary><category term="bash"></category><category term="history"></category><category term="shell"></category><category term="timestamp"></category></entry><entry><title>Modern (0.10.x+) NodeJS RPMs on CentOS/REHL 5 and 6</title><link href="/2013/06/modern-0-10-x-nodejs-rpms-on-centosrehl-5-and-6/" rel="alternate"></link><updated>2013-06-06T20:47:00-04:00</updated><author><name>admin</name></author><id>tag:,2013-06-06:2013/06/modern-0-10-x-nodejs-rpms-on-centosrehl-5-and-6/</id><summary type="html">&lt;p&gt;I posted back in January about &lt;a href="/2013/01/rpm-spec-files-for-nodejs-0-9-5-and-v8-on-centos-5/"&gt;&lt;span class="caps"&gt;RPM&lt;/span&gt; Spec Files for nodejs 0.9.5 and v8
on CentOS 6&lt;/a&gt;. In that post I also said that I was unable to get recent
NodeJS to build on CentOS 5 because of a long chain of dependencies
including node-gyp, v8, http-parser, glibc, etc. I said I couldn&amp;#8217;t get
it to build. Well, I have good news for both distro&amp;nbsp;versions.&lt;/p&gt;
&lt;p&gt;On the CentOS/&lt;span class="caps"&gt;RHEL&lt;/span&gt; 6 side, thanks to a lot of work by &lt;span class="caps"&gt;T. C.
&lt;/span&gt;Hollingsworth and others, NodeJS 0.10.5 is currently in the official
&lt;a href="http://fedoraproject.org/wiki/EPEL"&gt;&lt;span class="caps"&gt;EPEL&lt;/span&gt;&lt;/a&gt; repositories. They seem to be keeping the packages pretty
current, but if you need newer, you can always grab the SRPMs from &lt;span class="caps"&gt;EPEL&lt;/span&gt;
and build the newer versions. This is great, because it means I no
longer need to maintain the spec files and do my own builds. I don&amp;#8217;t
think I really did anything to help get this package in &lt;span class="caps"&gt;EPEL&lt;/span&gt;, other than
ping a few people and comment on a few&amp;nbsp;tickets.&lt;/p&gt;
&lt;p&gt;For CentOS/&lt;span class="caps"&gt;RHEL&lt;/span&gt; 5, I finally have packages, but they&amp;#8217;re not exactly
pretty. The dependency solving issues still stand; they&amp;#8217;re rooted at the
dependency of node-gyp which requires the v8 C++ JavaScript library, and
is required to compile shared object addons. The best solution that I
(and a few others) could find is simply not to build node-gyp, and not
to have support for addons or package any addons; we just have the
binaries that NodeJS&amp;#8217;s Makefile creates, and everything else is
interpreted. A &lt;a href="https://twitter.com/toxigenicpoem"&gt;coworker&lt;/a&gt; found
&lt;a href="https://github.com/kazuhisya/nodejs-rpm"&gt;https://github.com/kazuhisya/nodejs-rpm&lt;/a&gt; which contains a configure
patch and specfile for a dead-simple CentOS 5/6 &lt;span class="caps"&gt;RPM&lt;/span&gt; of NodeJS 0.10.9,
which essentially just uses &lt;span class="caps"&gt;EPEL&lt;/span&gt;&amp;#8217;s python26 packages to power the NodeJS
build process, configures and uses the Makefile&amp;#8217;s &lt;code&gt;make binary&lt;/code&gt; command
to spit out a NodeJS binary tarball, and then packages that. That whole
process way out of line from the &lt;a href="http://fedoraproject.org/wiki/Packaging:Guidelines"&gt;Fedora Packaging Guidelines&lt;/a&gt;, and
also only dumps out nodejs, nodejs-binary and nodejs-debuginfo packages,
so I also can&amp;#8217;t just substitute in a different package name in my puppet
manifests (which install nodejs, nodejs-devel and npm packages). So I
&lt;a href="https://github.com/jantman/nodejs-rpm-centos5"&gt;forked that repository&lt;/a&gt; and made some changes to the specfile: I gave
the package name a prefix (&amp;#8220;cmgd_&amp;#8221;, since that&amp;#8217;s where I work these
days) and some warnings in the description, to make it abundantly clear
that these packages are very far from what you find in &lt;span class="caps"&gt;EPEL&lt;/span&gt; and other
repositories, and broke npm and the devel files out into their own
subpackages. Hopefully this spec file will be of use to someone else who
also has the unfortunate need of supporting recent NodeJS on CentOS 5.
If there&amp;#8217;s enough interest, I&amp;#8217;ll consider building the packages and
putting them in a repository&amp;nbsp;somewhere.&lt;/p&gt;
&lt;p&gt;You can see the NodeJS 0.10.9 on CentOS 5 spec file, a patch, and the
READMEs at &lt;a href="https://github.com/jantman/nodejs-rpm-centos5"&gt;https://github.com/jantman/nodejs-rpm-centos5&lt;/a&gt;. Patches and/or pull requests are greatly appreciated,
especially from anyone who wants to make the spec file more Fedora
guidelines&amp;nbsp;compliant.&lt;/p&gt;</summary><category term="build"></category><category term="centos"></category><category term="EPEL"></category><category term="node"></category><category term="nodejs"></category><category term="package"></category><category term="packaging"></category><category term="redhat"></category><category term="RHEL"></category><category term="rpm"></category><category term="specfile"></category></entry><entry><title>Script to easily rebuild a SRPM</title><link href="/2013/05/script-to-easily-rebuild-a-srpm/" rel="alternate"></link><updated>2013-05-28T10:26:00-04:00</updated><author><name>admin</name></author><id>tag:,2013-05-28:2013/05/script-to-easily-rebuild-a-srpm/</id><summary type="html">&lt;p&gt;Between &lt;span class="caps"&gt;RHEL&lt;/span&gt;/CentOS 5 and 6 the default &lt;span class="caps"&gt;RPM&lt;/span&gt; compression format was
changed to xz. As such, trying to build a recent Fedora or Cent6 &lt;span class="caps"&gt;SRPM&lt;/span&gt; on
Cent5 will error out with a message like
&lt;code&gt;error: unpacking of archive failed on file foo;51a4c2a5: cpio: MD5 sum mismatch&lt;/code&gt;
because tar on CentOS 5 doesn&amp;#8217;t support&amp;nbsp;xz.&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s a quick and dirty little script to use &lt;code&gt;rpm2cpio&lt;/code&gt; to rebuild a
&lt;span class="caps"&gt;SRPM&lt;/span&gt; using the host&amp;#8217;s native &lt;span class="caps"&gt;RPM&lt;/span&gt; compression. The latest version will
live at&amp;nbsp;[https://github.com/jantman/misc-scripts/blob/master/rebuild_srpm.sh][]&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Script to rebuild a &lt;span class="caps"&gt;SRPM&lt;/span&gt; 1:1, useful when you want to build a &lt;span class="caps"&gt;RHEL&lt;/span&gt;/CentOS 6&lt;/span&gt;
&lt;span class="c"&gt;# &lt;span class="caps"&gt;SRPM&lt;/span&gt; on a &lt;span class="caps"&gt;RHEL&lt;/span&gt;/CentOS 5 system that doesn&amp;#39;t support newer compression (cpio: &lt;span class="caps"&gt;MD5&lt;/span&gt; sum mismatch)&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# by Jason Antman &lt;/span&gt;
&lt;span class="c"&gt;# The latest version of this script will always live at:&lt;/span&gt;
&lt;span class="c"&gt;# &lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; -z &lt;span class="s2"&gt;&amp;quot;$1&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$1&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-h&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$1&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;--help&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;span class="caps"&gt;USAGE&lt;/span&gt;: rebuild_srpm.sh  &amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; -z &lt;span class="s2"&gt;&amp;quot;$2&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;&lt;span class="caps"&gt;OUTDIR&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;&lt;span class="caps"&gt;OUTDIR&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$2&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; ! -e &lt;span class="s2"&gt;&amp;quot;$1&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;span class="caps"&gt;ERROR&lt;/span&gt;: &lt;span class="caps"&gt;SRPM&lt;/span&gt; file not found: $1&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; ! which rpmbuild &amp;amp;&amp;gt; /dev/null
&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rpmbuild could not be found. please install. (sudo yum install rpm-build)&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; ! which rpm2cpio &amp;amp;&amp;gt; /dev/null
&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rpm2cpio could not be found. please install. (sudo yum install rpm)&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="nv"&gt;&lt;span class="caps"&gt;SRPM&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;dirname &lt;span class="s2"&gt;&amp;quot;$1&amp;quot;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;basename &lt;span class="s2"&gt;&amp;quot;$1&amp;quot;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="nv"&gt;&lt;span class="caps"&gt;TEMPDIR&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;mktemp -d&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="nv"&gt;&lt;span class="caps"&gt;STARTPWD&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Rebuilding $&lt;span class="caps"&gt;SRPM&lt;/span&gt;...&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# copy srpm into tempdir&lt;/span&gt;
cp &lt;span class="nv"&gt;$&lt;span class="caps"&gt;SRPM&lt;/span&gt;&lt;/span&gt; &lt;span class="nv"&gt;$&lt;span class="caps"&gt;TEMPDIR&lt;/span&gt;&lt;/span&gt;

&lt;span class="nb"&gt;pushd&lt;/span&gt; &lt;span class="nv"&gt;$&lt;span class="caps"&gt;TEMPDIR&lt;/span&gt;&lt;/span&gt; &amp;amp;&amp;gt;/dev/null

&lt;span class="c"&gt;# setup local build dir structure&lt;/span&gt;
mkdir -p rpm rpm/&lt;span class="caps"&gt;BUILD&lt;/span&gt; rpm/&lt;span class="caps"&gt;RPMS&lt;/span&gt; rpm/&lt;span class="caps"&gt;SOURCES&lt;/span&gt; rpm/&lt;span class="caps"&gt;SPECS&lt;/span&gt; rpm/&lt;span class="caps"&gt;SRPMS&lt;/span&gt; rpm/&lt;span class="caps"&gt;RPMS&lt;/span&gt;/athlon rpm/&lt;span class="caps"&gt;RPMS&lt;/span&gt;/i&lt;span class="se"&gt;\[&lt;/span&gt;3456&lt;span class="se"&gt;\]&lt;/span&gt;86 rpm/&lt;span class="caps"&gt;RPMS&lt;/span&gt;/i386 rpm/&lt;span class="caps"&gt;RPMS&lt;/span&gt;/noarch rpm/&lt;span class="caps"&gt;RPMS&lt;/span&gt;/x86_64

&lt;span class="c"&gt;# setup rpmmacros file&lt;/span&gt;
cat /dev/null &amp;gt; &lt;span class="nv"&gt;$&lt;span class="caps"&gt;TEMPDIR&lt;/span&gt;&lt;/span&gt;/.rpmmacros
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;%_topdir        $&lt;span class="caps"&gt;TEMPDIR&lt;/span&gt;/rpm&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.rpmmacros

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Extracting &lt;span class="caps"&gt;SRPM&lt;/span&gt;...&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;pushd&lt;/span&gt; &lt;span class="nv"&gt;$&lt;span class="caps"&gt;TEMPDIR&lt;/span&gt;&lt;/span&gt;/rpm/&lt;span class="caps"&gt;SOURCES&lt;/span&gt;/ &amp;amp;&amp;gt;/dev/null
rpm2cpio &lt;span class="nv"&gt;$&lt;span class="caps"&gt;SRPM&lt;/span&gt;&lt;/span&gt; | cpio -idmv &amp;amp;&amp;gt;/dev/null
&lt;span class="nb"&gt;popd&lt;/span&gt; &amp;amp;&amp;gt;/dev/null

&lt;span class="c"&gt;# build the &lt;span class="caps"&gt;SRPM&lt;/span&gt; from the spec and sources&lt;/span&gt;
&lt;span class="c"&gt;# we&amp;#39;re just building a &lt;span class="caps"&gt;SRPM&lt;/span&gt; so we can ignore dependencies&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Rebuilding &lt;span class="caps"&gt;SRPM&lt;/span&gt;...&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;NEW_SRPM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;rpmbuild -bs --nodeps --macros&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$&lt;span class="caps"&gt;TEMPDIR&lt;/span&gt;&lt;/span&gt;/.rpmmacros &lt;span class="nv"&gt;$&lt;span class="caps"&gt;TEMPDIR&lt;/span&gt;&lt;/span&gt;/rpm/&lt;span class="caps"&gt;SOURCES&lt;/span&gt;/*.spec | grep &lt;span class="s2"&gt;&amp;quot;^Wrote: &amp;quot;&lt;/span&gt; | awk &lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Copying to $&lt;span class="caps"&gt;OUTDIR&lt;/span&gt;&amp;quot;&lt;/span&gt;
cp &lt;span class="nv"&gt;$NEW_SRPM&lt;/span&gt; &lt;span class="nv"&gt;$&lt;span class="caps"&gt;OUTDIR&lt;/span&gt;&lt;/span&gt;/

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Wrote file to $&lt;span class="caps"&gt;OUTDIR&lt;/span&gt;/`basename $NEW_SRPM`&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# cleanup&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$&lt;span class="caps"&gt;STARTPWD&lt;/span&gt;&lt;/span&gt;
rm -Rf &lt;span class="nv"&gt;$&lt;span class="caps"&gt;TEMPDIR&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;https://github.com/jantman/misc-scripts/blob/master/rebuild_srpm.sh
&lt;/pre&gt;&lt;/div&gt;</summary><category term="lzma"></category><category term="packaging"></category><category term="rpm"></category><category term="rpm2cpio"></category><category term="rpmbuild"></category><category term="srpm"></category><category term="xz"></category></entry><entry><title>Git Cheat Sheet</title><link href="/2013/05/git-cheat-sheet/" rel="alternate"></link><updated>2013-05-14T05:00:00-04:00</updated><author><name>admin</name></author><id>tag:,2013-05-14:2013/05/git-cheat-sheet/</id><summary type="html">&lt;p&gt;I use &lt;a href="http://git-scm.com/"&gt;git&lt;/a&gt; quite a bit these days, both with an internal server at
work and with a bunch of my projects and random code that now live on
&lt;a href="https://github.com/jantman/"&gt;my github account&lt;/a&gt;. The transition from &lt;span class="caps"&gt;SVN&lt;/span&gt; hasn&amp;#8217;t always been easy.
Here&amp;#8217;s a quick cheat sheet of some of the things that I usually&amp;nbsp;forget.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Show diff of the last&amp;nbsp;commit:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git diff HEAD^..HEAD
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Roll back to version xyz of a specific file &lt;em&gt;(where xyz is a &lt;span class="caps"&gt;SHA1&lt;/span&gt;
    commit ref)&lt;/em&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git checkout xyz path/to/file
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Undo any &lt;em&gt;unstaged&lt;/em&gt; changes to your&amp;nbsp;branch:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git checkout -f
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Undo any staged and working directory&amp;nbsp;changes:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git reset --hard
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Update submodules after cloning a&amp;nbsp;repository:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git submodule update --init
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Rebase on current master to pull in new&amp;nbsp;changes:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git rebase master
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Rebase on current master, but for files that changed, take our
    version &lt;em&gt;(for some reason, a plain rebase seems to sometimes show
    conflicts on files that haven&amp;#8217;t changed in ages on master)&lt;/em&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git rebase -s recursive -Xtheirs master
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Delete a local&amp;nbsp;branch:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git branch -d BranchName
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Delete a remote branch from&amp;nbsp;origin:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git push origin --delete BranchName
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Roll back your branch to the same state as the branch in&amp;nbsp;origin:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git reset --hard origin/BranchName
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Revert a specific&amp;nbsp;commit:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git revert COMMIT_HASH
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Track an upstream branch (i.e. in a project you&amp;nbsp;forked):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git remote add --track master upstream https://github.com/user/project.git
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Pull in upstream&amp;nbsp;changes:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git checkout master &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git fetch upstream &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git merge upstream/master
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Merge &amp;#8220;stuff&amp;#8221; from someone else&amp;#8217;s fork into&amp;nbsp;yours:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git remote add other-guys-repo URL_TO_REPO
git fetch other-guys-repo
git checkout my_new_branch
git merge other-guys-repo/master
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Prune local branches that have been deleted in the remote&amp;nbsp;(origin):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git remote prune origin
&lt;/pre&gt;&lt;/div&gt;</summary><category term="git"></category></entry><entry><title>Search for a small-scale but automated RPM build system</title><link href="/2013/05/search-for-a-small-scale-but-automated-rpm-build-system/" rel="alternate"></link><updated>2013-05-13T05:00:00-04:00</updated><author><name>admin</name></author><id>tag:,2013-05-13:2013/05/search-for-a-small-scale-but-automated-rpm-build-system/</id><summary type="html">&lt;p&gt;&lt;strong&gt;&lt;em&gt;This post is part of a series of older draft posts from a few months
ago that I&amp;#8217;m just getting around to publishing. Unfortunately, I have
yet to find a build system that meets my requirements (see the last&amp;nbsp;paragraph).&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;At work, we have a handful - currently a really small number - of &lt;span class="caps"&gt;RPM&lt;/span&gt;
packages that we need to build and deploy internally for our CentOS
server infrastructure. A number of them are just pulled down from
specific third-party repositories and rebuilt to have the vendor set as
us, and some are internally patched or developed software. We run
websites, and on the product side, we&amp;#8217;re a Python/&lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; shop (in
fact, probably one of the largest Django apps out there). We don&amp;#8217;t
deploy our Django apps via &lt;span class="caps"&gt;RPM&lt;/span&gt;, so building and distributing RPMs is
definitely not one of our core competencies. In fact, we really only
want to do it when we&amp;#8217;re testing/deploying a new distro, or when an
upstream package is&amp;nbsp;updated.&lt;/p&gt;
&lt;p&gt;Last week I pulled a ticket to deploy &lt;a href="http://nodejs.org/"&gt;node.js&lt;/a&gt; to one of our build
hosts, and we&amp;#8217;ve got a few things in the pipeline that also rely on it.
I found the &lt;a href="https://github.com/puppetlabs/puppetlabs-nodejs"&gt;puppetlabs-nodejs&lt;/a&gt; module on Github that&amp;#8217;s supposed to
install it on &lt;span class="caps"&gt;RHEL&lt;/span&gt;/CentOS, but it pulls packages from
&lt;a href="http://patches.fedorapeople.org/oldnode/stable/"&gt;http://patches.fedorapeople.org/oldnode/stable/&lt;/a&gt;, and the newest
version of nodejs there is 0.6.18, which is quite old. I can&amp;#8217;t find any
actively maintained sources of newer nodejs packages for &lt;span class="caps"&gt;RHEL&lt;/span&gt;/CentOS
(yeah, I know, that&amp;#8217;s one down side to the distributions&amp;#8230;). However, I
did find that nodejs 0.9.5 is being &lt;a href="http://koji.fedoraproject.org/koji/packageinfo?packageID=15154"&gt;built for Fedora 18/19 in the
Fedora build system&lt;/a&gt;, is already in the Fedora 18 Testing and Fedora
Rawhide repos, but is failing its &lt;span class="caps"&gt;EL6&lt;/span&gt; builds in their system. The
decision I&amp;#8217;ve come to is to use the puppetlabs-nodejs module to install
it, but try and rebuild the Fedora 18 RPMs under CentOS 5 and&amp;nbsp;6.&lt;/p&gt;
&lt;p&gt;So that&amp;#8217;s the background. Now, my current task: to search for an &lt;span class="caps"&gt;RPM&lt;/span&gt;
build system for my current job. My core requirements, in no specific
order,&amp;nbsp;are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be relatively easy and quick to use for people who have a specfile
    or &lt;span class="caps"&gt;SRPM&lt;/span&gt; and want to be able to &amp;#8220;ensure =&gt; present&amp;#8221; the finished &lt;span class="caps"&gt;RPM&lt;/span&gt;
    on a system. i.e., require as little per-package configuration as&amp;nbsp;possible.&lt;/li&gt;
&lt;li&gt;Be able to handle rebuilding &amp;#8220;all&amp;#8221; of our RPMs when we roll out a
    new distro version. Doesn&amp;#8217;t necessarily need to be automatic, but
    should be relatively&amp;nbsp;simple.&lt;/li&gt;
&lt;li&gt;Ideally, not need to be running constantly - i.e. something that
    will cope well with build hosts being VMs that are shut down when
    they&amp;#8217;re not&amp;nbsp;needed.&lt;/li&gt;
&lt;li&gt;Handle automatically putting successfully built packages into a
    repository, ideally with some sort of (manual) promotion process
    from staging to&amp;nbsp;stable.&lt;/li&gt;
&lt;li&gt;Have minimal external (infrastructure) dependencies that we can&amp;#8217;t
    satisfy with existing&amp;nbsp;systems.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, the first step was to research existing &lt;span class="caps"&gt;RPM&lt;/span&gt; build systems and how
others do this. Here&amp;#8217;s a list of what I could find online, though most
of these are from distributions and software vendors/projects, not
end-user companies that are only building for internal&amp;nbsp;use.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://fedorahosted.org/koji/wiki"&gt;Koji&lt;/a&gt; is the build system used by &lt;a href="http://fedoraproject.org/wiki/Koji"&gt;Fedora&lt;/a&gt; and RedHat. It&amp;#8217;s
    about as full-featured as any can be, and I&amp;#8217;m familiar with it from
    my time at &lt;a href="http://koji.rutgers.edu/koji/"&gt;Rutgers University&lt;/a&gt;, as it&amp;#8217;s used to maintain their
    CentOS/&lt;span class="caps"&gt;RHEL&lt;/span&gt; packages. It&amp;#8217;s based largely on Mock. However, [setting
    up the build server][] is no trivial task; there are few
    installations outside of Fedora/RedHat, and it relies on either
    Kerberos or an &lt;span class="caps"&gt;SSL&lt;/span&gt; &lt;span class="caps"&gt;CA&lt;/span&gt; infrastructure to authenticate machines and
    clients. So, it&amp;#8217;s designed for too large a scale and too much
    infrastructure for&amp;nbsp;me.&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;PLD&lt;/span&gt; Linux has a &lt;a href="https://www.pld-linux.org/developingpld/builderscript"&gt;builder script&lt;/a&gt; that seems to automate &lt;code&gt;rpmbuild&lt;/code&gt;
    as well as fetching sources and resolving/building dependencies. I
    haven&amp;#8217;t looked at the script yet, but apparently it&amp;#8217;s in &lt;span class="caps"&gt;PLD&lt;/span&gt;&amp;#8217;s
    &amp;#8220;rpm-build-tools&amp;#8221;&amp;nbsp;package.&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;PLD&lt;/span&gt; Linux also has a &lt;span class="caps"&gt;CVS&lt;/span&gt; repository for something called
    &lt;a href="http://cvs.pld-linux.org/cgi-bin/cvsweb/pld-builder.new"&gt;pld-builder.new&lt;/a&gt;. The &lt;a href="http://cvs.pld-linux.org/cgi-bin/cvsweb/pld-builder.new/doc/README?rev=1.5"&gt;&lt;span class="caps"&gt;README&lt;/span&gt;&lt;/a&gt; and &lt;a href="http://cvs.pld-linux.org/cgi-bin/cvsweb/pld-builder.new/doc/ARCHITECTURE?rev=1.6"&gt;&lt;span class="caps"&gt;ARCHITECTURE&lt;/span&gt;&lt;/a&gt; files make
    it sound like a relatively simple mainly-Python system that builds
    &lt;span class="caps"&gt;SRPMS&lt;/span&gt; and binary packages when requested, and most importantly,
    seems like a simple system that uses little more than shared
    filesystem access for communication and&amp;nbsp;coordination.&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;ALT&lt;/span&gt; Linux has &lt;a href="http://en.altlinux.org/Sisyphus"&gt;Sisyphus&lt;/a&gt;, which combines repository management and
    web interface tools, package building and testing tools, and&amp;nbsp;more.&lt;/li&gt;
&lt;li&gt;The Dries &lt;span class="caps"&gt;RPM&lt;/span&gt; repository uses (or at least used&amp;#8230; my reference is
    quite old) &lt;a href="http://dries.ulyssis.org/rpm/pydar2/index.html"&gt;pydar2&lt;/a&gt;, &amp;#8220;a distributed client/server program which
    allows you to build multiple spec files on multiple
    distribution/architecture combinations automatically.&amp;#8221; That sounds
    like it could be what I need, but the last update says that it isn&amp;#8217;t
    finished yet, and that was in &lt;strong&gt;2005&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Mandriva Linux has pretty extensive information on their build
    system &lt;a href="http://wiki.mandriva.com/en/Category:Build_System"&gt;on their wiki&lt;/a&gt; and a &lt;a href="http://wiki.mandriva.com/en/Development/Packaging/BuildSystem/Theory"&gt;build system theory page&lt;/a&gt;, but it
    seems to be largely a hodgepodge of shell scripts and cronjobs, and
    is likely not a candidate for use by anyone other than its&amp;nbsp;designers.&lt;/li&gt;
&lt;li&gt;Argeo provides the &lt;a href="https://www.argeo.org/wiki/SLC"&gt;&lt;span class="caps"&gt;SLC&lt;/span&gt; framework&lt;/a&gt; which has a &amp;#8220;&lt;span class="caps"&gt;RPM&lt;/span&gt; Factory&amp;#8221;
    component, but I can&amp;#8217;t seem to find much more than a wiki page, and
    can&amp;#8217;t tell if it&amp;#8217;s a build automation system or just handles mocking
    packages and putting them in a repo on a single&amp;nbsp;host.&lt;/li&gt;
&lt;li&gt;Dag Wieers&amp;#8217; repositories use (or used) a set of python scripts
    called &lt;a href="http://dag.wieers.com/home-made/dar/"&gt;&lt;span class="caps"&gt;DAR&lt;/span&gt;, &amp;#8220;Dynamic Apt Repository builder&amp;#8221;&lt;/a&gt;. They&amp;#8217;re on
    &lt;a href="https://github.com/dagwieers/dar"&gt;github&lt;/a&gt; but are listed as &amp;#8220;old&amp;#8221; and haven&amp;#8217;t been updated in at
    least 2 years. The features sound quite interesting, and though it&amp;#8217;s
    based on the Apt repo format, it might provide some good ideas for
    implementing a similar&amp;nbsp;system.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Update four months later:&lt;/strong&gt; I&amp;#8217;ve yet to find a build system that meets
my requirements above. For the moment I&amp;#8217;m only managing \~20 packages,
so my &amp;#8220;build system&amp;#8221; is a single shell script that reads in some
environment variables and runs through using &lt;a href="http://fedoraproject.org/wiki/Projects/Mock"&gt;mock&lt;/a&gt; to build them in
the correct order (including pushing the finished RPMs back into the
local repository that mock reads from) and then pushing the finished
packages to our internal repository. Maybe when I have some spare time,
I&amp;#8217;ll consider a project to either make a slightly better (but simple)
&lt;span class="caps"&gt;RPM&lt;/span&gt; build system based on Python, or get our &lt;a href="http://jenkins-ci.org/"&gt;Jenkins&lt;/a&gt; install to
handle this for&amp;nbsp;me.&lt;/p&gt;</summary><category term="build"></category><category term="linux"></category><category term="nodejs"></category><category term="package"></category><category term="packaging"></category><category term="repository"></category><category term="rpm"></category><category term="rpmbuild"></category><category term="software"></category><category term="sysadmin"></category><category term="yum"></category></entry><entry><title>Environment Variable Substitution in Apache httpd Configs</title><link href="/2013/05/environment-variable-substitution-in-apache-httpd-configs/" rel="alternate"></link><updated>2013-05-11T12:01:00-04:00</updated><author><name>admin</name></author><id>tag:,2013-05-11:2013/05/environment-variable-substitution-in-apache-httpd-configs/</id><summary type="html">&lt;p&gt;I&amp;#8217;ve been configuring Apache httpd for over a decade, from a single
personal web server to web farms running thousands of vhosts. In most of
the &amp;#8220;real&amp;#8221; environments I&amp;#8217;ve worked in, we&amp;#8217;ve had some variation of
production, stage/test/&lt;span class="caps"&gt;QA&lt;/span&gt; and development hosts; and usually some method
of managing configurations between them, whether it&amp;#8217;s source control or
generating them from template. And in all of these environments, there
has invariably been drift between the configurations in the various
environments, whether it&amp;#8217;s because of poor tools to maintain a unified
configuration or many of those emergency redirect requests that make it
into production but are never backported. This is made all the worse
because everywhere I&amp;#8217;ve worked, the real difference between what
production and other environments &lt;em&gt;should&lt;/em&gt; be is really just a string
replacement in Apache configurations - &lt;code&gt;/prod/&lt;/code&gt; to &lt;code&gt;/test/&lt;/code&gt; or
&lt;code&gt;www.example.com&lt;/code&gt; to &lt;code&gt;www.dev.example.com&lt;/code&gt; or something along those&amp;nbsp;lines.&lt;/p&gt;
&lt;p&gt;Well a few days ago I was having a discussion with some co-workers that
dovetailed into this topic, and when I started some research, I found
(&lt;em&gt;finally after using httpd for years&lt;/em&gt;) that the &lt;a href="http://httpd.apache.org/docs/2.2/configuring.html#syntax"&gt;Apache httpd 2.2
configuration file syntax documentation&lt;/a&gt; states that httpd supports
environment variable interpolation anywhere in the config files (and
&lt;a href="http://httpd.apache.org/docs/2.4/configuring.html#syntax"&gt;httpd 2.4&lt;/a&gt; supports it with Defines as&amp;nbsp;well).&lt;/p&gt;
&lt;p&gt;Yup, that&amp;#8217;s right. All those different Apache configs I&amp;#8217;ve worked with
for years that define separate vhosts, document roots, rewrite targets,
ServerAliases, etc. for &lt;code&gt;www.example.com&lt;/code&gt; and &lt;code&gt;www.qa.example.com&lt;/code&gt; and
&lt;code&gt;www.dev.example.com&lt;/code&gt; really only had to be
&lt;code&gt;www.${ENV_URL_PART}example.com&lt;/code&gt;, and set &lt;code&gt;ENV_URL_PART&lt;/code&gt; in the init
script or sysconfig file. (Of course this all assumes that you have your
different environments served by different httpd instances, which you
do, of&amp;nbsp;course&amp;#8230;)&lt;/p&gt;
&lt;p&gt;For me, this is a very big deal. It means that finally, instead of
maintaining separate sets of configs for different environments which
are (theoretically, except for those emergencies) kept identical by
hand, or updating templates and then re-generating each environment&amp;#8217;s
configs, we can finally follow the same
commit/merge/promotion-between-environments workflow that we use for
other production code and Puppet configuration. It also means that those
pesky little rewrites and other minor tweaks will make it all the way
back to development&amp;nbsp;environments.&lt;/p&gt;
&lt;p&gt;So, here&amp;#8217;s a little example of how this would work in reality. Let&amp;#8217;s
assume that we have 3 main environments, &lt;code&gt;prod&lt;/code&gt;, &lt;code&gt;qa&lt;/code&gt; and &lt;code&gt;dev&lt;/code&gt; (though
this should work for N environments) and that domains are prefixed with
&amp;#8220;qa.&amp;#8221; or &amp;#8220;dev.&amp;#8221; for the respective internal environments. We set
environment variables before httpd is started, on a per-host basis,
depending on what environment that host is in. On RedHat based systems,
we&amp;#8217;d add the variables to &lt;code&gt;/etc/sysconfig/httpd&lt;/code&gt; for&amp;nbsp;production:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;HTTPD_ENV_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;prod&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;HTTPD_ENV_URL_PART&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or for&amp;nbsp;&lt;span class="caps"&gt;QA&lt;/span&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;HTTPD_ENV_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;qa&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;HTTPD_ENV_URL_PART&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;qa.&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Those variables will now be available to httpd within the configurations
(and also to any applications or scripts that have access to the web
server&amp;#8217;s environment&amp;nbsp;variables).&lt;/p&gt;
&lt;p&gt;Now let&amp;#8217;s look at an example vhost configuration file that uses the
environment&amp;nbsp;variables:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nb"&gt;ServerName&lt;/span&gt; example.com
&lt;span class="nb"&gt;ServerAlias&lt;/span&gt; www.example.com
&lt;span class="c"&gt;# Aliases including proper environment name&lt;/span&gt;
&lt;span class="nb"&gt;ServerAlias&lt;/span&gt; www.${HTTPD_ENV_NAME}.example.com ${HTTPD_ENV_NAME}.example.com

&lt;span class="nb"&gt;ErrorLog&lt;/span&gt; &lt;span class="sx"&gt;/var/log/httpd/example.com-error_log&lt;/span&gt;
&lt;span class="nb"&gt;CustomLog&lt;/span&gt; &lt;span class="sx"&gt;/var/log/httpd/example.com-access_log&lt;/span&gt; combined

&lt;span class="nb"&gt;DocumentRoot&lt;/span&gt; &lt;span class="sx"&gt;/sites/example.com/&lt;/span&gt;${HTTPD_ENV_NAME}/

&lt;span class="c"&gt;# Environment-specific configuration, if we absolutely need it:&lt;/span&gt;
&lt;span class="nb"&gt;Include&lt;/span&gt; &lt;span class="sx"&gt;/etc/httpd/sites/&lt;/span&gt;${HTTPD_ENV_NAME}/env.conf


&lt;span class="nb"&gt;RewriteEngine&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt;
&lt;span class="nb"&gt;RewriteRule&lt;/span&gt; &lt;span class="sx"&gt;/foobar/.&lt;/span&gt;* http://www.${HTTPD_ENV_URL_PART}example.com/baz/ [R=302,L]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Every instance of &lt;code&gt;${HTTPD_ENV_NAME}&lt;/code&gt; will be replaced with the value
set in the sysconfig file, and likewise with every instance of
&lt;code&gt;${HTTPD_ENV_URL_PART}&lt;/code&gt;. This way, we can have one set of configurations
and use our normal source control branch/promotion process to both test
and promote changes through the environments along with application
code, and ensure that any straight-to-production emergency changes
(everyone has customer-ordered rewrites like that, right?) make it back
to development and&amp;nbsp;qa.&lt;/p&gt;
&lt;p&gt;One caveat is that, if the environment variable is not defined, the
&lt;code&gt;${VAR_NAME}&lt;/code&gt; will be left as a literal string in the configuration
file. There doesn&amp;#8217;t seem to be any way to protect against this in httpd
2.2, other than making sure the variables are set before the server
starts (and maybe setting logical default values, like an empty string,
in your init script which should be overridden by the sysconfig&amp;nbsp;file).&lt;/p&gt;
&lt;p&gt;If you&amp;#8217;re running httpd 2.4+, you can turn on [mod_info][] and browse
to &lt;code&gt;http://servername/server-info?config&lt;/code&gt; to dump the current
configuration, which will show the variable&amp;nbsp;substitution.&lt;/p&gt;</summary><category term="apache"></category><category term="environment"></category><category term="httpd"></category><category term="variable"></category></entry><entry><title>RPM Spec Files for nodejs 0.9.5 and v8 on CentOS 6</title><link href="/2013/01/rpm-spec-files-for-nodejs-0-9-5-and-v8-on-centos-5/" rel="alternate"></link><updated>2013-01-31T14:13:00-05:00</updated><author><name>admin</name></author><id>tag:,2013-01-31:2013/01/rpm-spec-files-for-nodejs-0-9-5-and-v8-on-centos-5/</id><summary type="html">&lt;p&gt;The latest version of nodejs that I could find as an &lt;span class="caps"&gt;RPM&lt;/span&gt; for CentOS was
0.6.16, from &lt;a href="http://patches.fedorapeople.org/oldnode/stable/"&gt;http://patches.fedorapeople.org/oldnode/stable/&lt;/a&gt;. That&amp;#8217;s
the one that puppetlabs currently uses in their &lt;a href="https://github.com/puppetlabs/puppetlabs-nodejs"&gt;puppetlabs-nodejs&lt;/a&gt;
module. There is, however, a nodejs 0.9.5 &lt;span class="caps"&gt;RPM&lt;/span&gt; in the Fedora Rawhide (19)
repository. Below are some patches to that specfile, and the specfile
for its v8 dependency, to get them to build on CentOS 6. You can also
find the full specfiles on my &lt;a href="https://github.com/jantman/specfiles"&gt;github specfile repository&lt;/a&gt;. I had
originally wanted to get them built on CentOS 5 as well, but after
following the dependency tree from nodejs to http-parser to gyp, and
then finding issues in the gyp source that are incompatible with CentOS
5&amp;#8217;s python 2.4, I gave up on that&amp;nbsp;target.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;nodejs.spec&lt;/strong&gt;, diff from Fedora Rawhide nodejs-0.9.5-9.fc18.src.rpm,
buildID=377755 (&lt;a href="https://raw.github.com/jantman/specfiles/master/nodejs.spec"&gt;full specfile&lt;/a&gt;)&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gh"&gt;diff --git a/nodejs.spec b/nodejs.spec&lt;/span&gt;
&lt;span class="gh"&gt;index 050ed86..86c0f4b 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- a/nodejs.spec&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/nodejs.spec&lt;/span&gt;
&lt;span class="gu"&gt;@@ -1,6 +1,6 @@&lt;/span&gt;
 Name: nodejs
 Version: 0.9.5
&lt;span class="gd"&gt;-Release: 9%{?dist}&lt;/span&gt;
&lt;span class="gi"&gt;+Release: 10%{?dist}&lt;/span&gt;
 Summary: JavaScript runtime
 License: &lt;span class="caps"&gt;MIT&lt;/span&gt; and &lt;span class="caps"&gt;ASL&lt;/span&gt; 2.0 and &lt;span class="caps"&gt;ISC&lt;/span&gt; and &lt;span class="caps"&gt;BSD&lt;/span&gt;
 Group: Development/Languages
&lt;span class="gu"&gt;@@ -25,7 +25,7 @@ Source6: nodejs-fixdep&lt;/span&gt;
 BuildRequires: v8-devel &amp;gt;= %{v8_ge}
 BuildRequires: http-parser-devel &amp;gt;= 2.0
 BuildRequires: libuv-devel
&lt;span class="gd"&gt;-BuildRequires: c-ares-devel&lt;/span&gt;
&lt;span class="gi"&gt;+BuildRequires: c-ares-devel &amp;gt;= 1.9.0&lt;/span&gt;
 BuildRequires: zlib-devel
 # Node.js requires some features from openssl 1.0.1 for &lt;span class="caps"&gt;SPDY&lt;/span&gt; support
 BuildRequires: openssl-devel &amp;gt;= 1:1.0.1
&lt;span class="gu"&gt;@@ -165,9 +165,13 @@ cp -p common.gypi %{buildroot}%{_datadir}/node&lt;/span&gt;

 %files docs
 %{_defaultdocdir}/%{name}-docs-%{version}
&lt;span class="gd"&gt;-%doc &lt;span class="caps"&gt;LICENSE&lt;/span&gt;&lt;/span&gt;

 %changelog
&lt;span class="gi"&gt;+* Thu Jan 31 2013 Jason Antman  - 0.9.5-10&lt;/span&gt;
&lt;span class="gi"&gt;+- specify build requirement of c-ares-devel &amp;gt;= 1.9.0&lt;/span&gt;
&lt;span class="gi"&gt;+- specify build requirement of libuv-devel 0.9.4&lt;/span&gt;
&lt;span class="gi"&gt;+- remove duplicate %doc &lt;span class="caps"&gt;LICENSE&lt;/span&gt; that was causing cpio &amp;#39;Bad magic&amp;#39; error on CentOS6&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
 * Sat Jan 12 2013 &lt;span class="caps"&gt;T.C.&lt;/span&gt; Hollingsworth  - 0.9.5-9
 - fix brown paper bag bug in requires generation script
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;v8.spec&lt;/strong&gt;, diff from Fedora Rawhide 3.13.7.5-2 (&lt;a href="https://raw.github.com/jantman/specfiles/master/v8.spec"&gt;full specfile&lt;/a&gt;)&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gd"&gt;--- v8.spec.orig       2013-01-26 16:03:18.000000000 -0500&lt;/span&gt;
&lt;span class="gi"&gt;+++ v8.spec     2013-01-31 09:04:51.068029459 -0500&lt;/span&gt;
&lt;span class="gu"&gt;@@ -21,9 +21,11 @@&lt;/span&gt;

 # %%global svnver 20110721svn8716

&lt;span class="gi"&gt;+%{!?python_sitelib: %define python_sitelib %(%{__python} -c &amp;quot;import distutils.sysconfig as d; print d.get_python_lib()&amp;quot;)}&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
 Name:          v8
 Version:       %{somajor}.%{sominor}.%{sobuild}.%{sotiny}
&lt;span class="gd"&gt;-Release:       2%{?dist}&lt;/span&gt;
&lt;span class="gi"&gt;+Release:       5%{?dist}&lt;/span&gt;
 Epoch:         1
 Summary:       JavaScript Engine
 Group:         System Environment/Libraries
&lt;span class="gu"&gt;@@ -32,7 +34,7 @@&lt;/span&gt;
 Source0:       http://commondatastorage.googleapis.com/chromium-browser-official/v8-%{version}.tar.bz2
 BuildRoot:     %{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)
 ExclusiveArch: %{ix86} x86_64 %{arm}
&lt;span class="gd"&gt;-BuildRequires: scons, readline-devel, libicu-devel&lt;/span&gt;
&lt;span class="gi"&gt;+BuildRequires: scons, readline-devel, libicu-devel, ncurses-devel&lt;/span&gt;

 %description
 V8 is Google&amp;#39;s open source JavaScript engine. V8 is written in C++ and is used 
&lt;span class="gu"&gt;@@ -51,8 +53,13 @@&lt;/span&gt;
 %setup -q -n %{name}-%{version}

 # -fno-strict-aliasing is needed with gcc 4.4 to get past some ugly code
&lt;span class="gd"&gt;-PARSED_OPT_FLAGS=`echo \&amp;#39;$RPM_OPT_FLAGS -fPIC -fno-strict-aliasing -Wno-unused-parameter -Wno-error=strict-overflow -Wno-error=unused-local-typedefs -Wno-unused-but-set-variable\&amp;#39;| sed &amp;quot;s/ /&amp;#39;,/g&amp;quot; | sed &amp;quot;s/&amp;#39;,/&amp;#39;, &amp;#39;/g&amp;quot;`&lt;/span&gt;
&lt;span class="gi"&gt;+%if 0%{?el5}&lt;/span&gt;
&lt;span class="gi"&gt;+PARSED_OPT_FLAGS=`echo \&amp;#39;$RPM_OPT_FLAGS -fPIC -fno-strict-aliasing -Wno-unused-parameter -lncurses\&amp;#39;| sed &amp;quot;s/ /&amp;#39;,/g&amp;quot; | sed &amp;quot;s/&amp;#39;,/&amp;#39;, &amp;#39;/g&amp;quot;`&lt;/span&gt;
&lt;span class="gi"&gt;+sed -i &amp;quot;s|&amp;#39;-O3&amp;#39;,|$PARSED_OPT_FLAGS,|g&amp;quot; SConstruct&lt;/span&gt;
&lt;span class="gi"&gt;+%else&lt;/span&gt;
&lt;span class="gi"&gt;+PARSED_OPT_FLAGS=`echo \&amp;#39;$RPM_OPT_FLAGS -fPIC -fno-strict-aliasing -Wno-unused-parameter -Wno-error=strict-overflow -Wno-unused-but-set-variable\&amp;#39;| sed &amp;quot;s/ /&amp;#39;,/g&amp;quot; | sed &amp;quot;s/&amp;#39;,/&amp;#39;, &amp;#39;/g&amp;quot;`&lt;/span&gt;
 sed -i &amp;quot;s|&amp;#39;-O3&amp;#39;,|$PARSED_OPT_FLAGS,|g&amp;quot; SConstruct
&lt;span class="gi"&gt;+%endif&lt;/span&gt;

 # clear spurious executable bits
 find . \( -name \*.cc -o -name \*.h -o -name \*.py \) -a -executable   
&lt;span class="gu"&gt;@@ -198,6 +205,17 @@&lt;/span&gt;
 %{python_sitelib}/j*.py*

 %changelog
&lt;span class="gi"&gt;+* Thu Jan 31 2013 Jason Antman  - 1:3.13.7.5-5&lt;/span&gt;
&lt;span class="gi"&gt;+- remove -Werror=unused-local-typedefs on cent6&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+* Wed Jan 30 2013 Jason Antman  - 1:3.13.7.5-4&lt;/span&gt;
&lt;span class="gi"&gt;+- define python_sitelib if it isn&amp;#39;t already (CentOS 5)&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+* Wed Jan 30 2013 Jason Antman  - 1:3.13.7.5-3&lt;/span&gt;
&lt;span class="gi"&gt;+- pull 3.13.7.5-2 &lt;span class="caps"&gt;SRPM&lt;/span&gt; from Fedora 19 Koji most recent build&lt;/span&gt;
&lt;span class="gi"&gt;+- add ncurses-devel BuildRequires&lt;/span&gt;
&lt;span class="gi"&gt;+- modify PARSED_OPT_FLAGS to work with g++ 4.1.2 on CentOS 5&lt;/span&gt;
&lt;span class="gi"&gt;+ &lt;/span&gt;
 * Sat Jan 26 2013 &lt;span class="caps"&gt;T.C.&lt;/span&gt; Hollingsworth  - 1:3.13.7.5-2
 - rebuild for icu-50
 - ignore new &lt;span class="caps"&gt;GCC&lt;/span&gt; 4.8 warning
&lt;/pre&gt;&lt;/div&gt;</summary><category term="build"></category><category term="centos"></category><category term="node"></category><category term="nodejs"></category><category term="package"></category><category term="packaging"></category><category term="redhat"></category><category term="RHEL"></category><category term="rpm"></category><category term="specfile"></category></entry><entry><title>Fedora Linux and OSX Dual Boot on Mid-2010 (6,2) 15” MacBook Pro Laptop</title><link href="/2013/01/fedora-linux-and-osx-dual-boot-on-mid-2010-62-15-macbook-pro-laptop/" rel="alternate"></link><updated>2013-01-21T12:13:00-05:00</updated><author><name>admin</name></author><id>tag:,2013-01-21:2013/01/fedora-linux-and-osx-dual-boot-on-mid-2010-62-15-macbook-pro-laptop/</id><summary type="html">&lt;p&gt;As part of the transition from a contractor to a full-time employee of
&lt;a href="http://www.cmgdigital.com"&gt;Cox Media Group Digital &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Strategy&lt;/a&gt; (check out our &lt;a href="https://github.com/cmgdigital"&gt;github&lt;/a&gt;), I&amp;#8217;ve
been issued a &lt;a href="http://support.apple.com/kb/SP582"&gt;Mid-2010 (6,2)&lt;/a&gt; 15&amp;#8221; &lt;a href="http://en.wikipedia.org/wiki/Macbook_pro#Technical_specifications_2"&gt;MacBook Pro&lt;/a&gt; laptop, to replace
my current &lt;a href="http://support.apple.com/kb/SP11"&gt;Early-2008 (3,1)&lt;/a&gt; MacPro desktop. The desktop is currently
running &lt;a href="http://fedoraproject.org/"&gt;Fedora&lt;/a&gt; 17, dual-boot with with Mac &lt;span class="caps"&gt;OS&lt;/span&gt; X (left in place for
firmware updates and emergencies) using the &lt;a href="http://www.rodsbooks.com/refind/index.html"&gt;rEFInd boot manager&lt;/a&gt; to
choose between the two OSes. It took me two days to get this working
right on my desktop, but it had been my plan to duplicate this setup on
my laptop. I found a lot of conflicting information online, but I
decided to give it a&amp;nbsp;try.&lt;/p&gt;
&lt;p&gt;Well, I have Fedora 18 and &lt;span class="caps"&gt;OS&lt;/span&gt; X 10.8 dual-booting on the laptop, but not
as planned. After a day and a half of research, troubleshooting and
re-installs, here&amp;#8217;s what I found to actually work, in the hope that
nobody else will go through the ordeal I went through. Following that
are some notes about the new Fedora 18 installer (Anaconda 18),
especially important for anyone who&amp;#8217;s used Linux for a while. To those
who are new to Linux, don&amp;#8217;t be dissuaded by the above. Most of the
frustration I experienced is because I&amp;#8217;ve been using Linux for a
relatively long time (about 10 years), had my own ideas about exactly
how I wanted things setup (which are decidedly &lt;em&gt;not&lt;/em&gt; supported by
Fedora), and had some assumptions about the installation process based
on earlier&amp;nbsp;versions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How to get it&amp;nbsp;working:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Forget about rEFInd. This had been the original advice from &lt;a href="http://mjg59.dreamwidth.org/"&gt;Matthew
Garrett&lt;/a&gt;, &lt;a href="https://twitter.com/mjg59"&gt;@mjg59&lt;/a&gt;, kernel coder, contributor to the Anaconda
project, and all-around authority on booting Linux on &lt;span class="caps"&gt;EFI&lt;/span&gt;/&lt;span class="caps"&gt;UEFI&lt;/span&gt; hardware.
My advice, and the method that worked for&amp;nbsp;me:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Shrink your Mac partitions and leave as much free space as you want
    for Fedora. using the Disk Utility tool in &lt;span class="caps"&gt;OS&lt;/span&gt; X (I also created an
    &lt;span class="caps"&gt;8GB&lt;/span&gt; &lt;span class="caps"&gt;VFAT&lt;/span&gt; partition that both OSes can read/write&amp;nbsp;to).&lt;/li&gt;
&lt;li&gt;&lt;a href="http://fedoraproject.org/en/get-fedora"&gt;Download Fedora 18&lt;/a&gt; 64-bit &lt;span class="caps"&gt;DVD&lt;/span&gt; image, I chose the &lt;span class="caps"&gt;KDE&lt;/span&gt; version.
    Verify the sha256 sum if you want (they don&amp;#8217;t have a readily visible
    link to the checksum file. Copy the download link, paste it into
    your address bar and remove the filename. You should get a directory
    index that includes a &lt;code&gt;-CHECKSUM&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;Per the Installation Guide&amp;#8217;s &lt;a href="http://docs.fedoraproject.org/en-US/Fedora/18/html/Installation_Guide/Making_USB_Media-UNIX_Linux.html"&gt;Making Fedora &lt;span class="caps"&gt;USB&lt;/span&gt; Media page&lt;/a&gt;, use
    &lt;code&gt;liveusb-creator&lt;/code&gt; to setup the installation image on the &lt;span class="caps"&gt;USB&lt;/span&gt; flash
    drive (I needed to start it with the &lt;code&gt;--reset-mbr&lt;/code&gt; option). You can
    also use other tools (dd if you&amp;#8217;re not on a Fedora-based distro), or
    a &lt;span class="caps"&gt;DVD&lt;/span&gt;, but this is the method I&amp;nbsp;chose.&lt;/li&gt;
&lt;li&gt;Due to a &lt;a href="https://fedorahosted.org/liveusb-creator/ticket/810"&gt;bug in liveusb-creator&lt;/a&gt;, you may need to manually edit
    &lt;code&gt;/EFI/boot/grub.cfg&lt;/code&gt; on the created &lt;span class="caps"&gt;USB&lt;/span&gt; stick if grub gives you a
    file not found error. If that happens, please see my bug report
    above for the action to take (in short, you need to mount the &lt;span class="caps"&gt;USB&lt;/span&gt;
    stick, &lt;code&gt;chmod u+w /EFI/boot/grub.cfg&lt;/code&gt; then edit that file and
    replace every occurrence of &amp;#8220;isolinux&amp;#8221; with &amp;#8220;syslinux&amp;#8221; and every
    occurrence of &amp;#8220;root=live:&lt;span class="caps"&gt;LABEL&lt;/span&gt;=Fedora-18-x86_64-Live-&lt;span class="caps"&gt;KDE&lt;/span&gt;.iso&amp;#8221; with&amp;nbsp;&amp;#8220;root=live:&lt;span class="caps"&gt;LABEL&lt;/span&gt;=&lt;span class="caps"&gt;LIVE&lt;/span&gt;&amp;#8221;).&lt;/li&gt;
&lt;li&gt;Boot the &lt;span class="caps"&gt;USB&lt;/span&gt; drive (use the alt key when you turn on the laptop to
    select the &lt;span class="caps"&gt;USB&lt;/span&gt; drive) and just install Fedora normally, letting it
    do its thing. Select a boot disk and let it put &lt;span class="caps"&gt;GRUB2&lt;/span&gt; on the &lt;span class="caps"&gt;EFI&lt;/span&gt;&amp;nbsp;partition.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When you boot, it will boot to &lt;span class="caps"&gt;GRUB&lt;/span&gt;. There will be some options for Mac
&lt;span class="caps"&gt;OS&lt;/span&gt; there, but they don&amp;#8217;t work (more on that below). If you want to boot
Mac, hold down the alt/option key when you power on the laptop, which
will bring you to the boot disk selector and you can pick the Mac disk.
I know it&amp;#8217;s not pretty or ideal, but it&amp;#8217;s the best option right&amp;nbsp;now.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Making it&amp;nbsp;Better:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;GRUB2&lt;/span&gt; tries to automatically detect other OSes and configure them in the
boot loader (this is done through &lt;code&gt;/etc/grub.d/30_os-prober&lt;/code&gt;, commonly
just referred to as &lt;code&gt;os-prober&lt;/code&gt;). It tries to boot Mac directly through
the xnu_kernel64 module, which not only isn&amp;#8217;t installed on the boot
partition by default, but just doesn&amp;#8217;t work with at least Mountain Lion
(10.8). So getting &lt;span class="caps"&gt;GRUB&lt;/span&gt; to boot Mac means either having the bugs in the
xnu module fixed, or figuring out how to setup a chainloader to boot
from &lt;span class="caps"&gt;GRUB&lt;/span&gt; to Mac. The latter is probably the method I&amp;#8217;ll investigate,
but for now, since I rarely use Mac, I&amp;#8217;m happy having to use the alt key
at boot to get there. To remove the annoying, broken Mac &lt;span class="caps"&gt;OS&lt;/span&gt; options from
the grub screen, run the following commands as root (they assume you
have your &lt;span class="caps"&gt;EFI&lt;/span&gt; partition mounted at &lt;code&gt;/boot/efi&lt;/code&gt; which I believe Fedora
should do by&amp;nbsp;default:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;cp /boot/efi/EFI/fedora/grub.cfg /boot/efi/EFI/fedora/grub.cfg.bak
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GRUB_DISABLE_OS_PROBER=&amp;quot;true&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /etc/default/grub
grub2-mkconfig &amp;gt; /boot/efi/&lt;span class="caps"&gt;EFI&lt;/span&gt;/fedora/grub.cfg
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Thoughts on the Fedora 18 Anaconda&amp;nbsp;Installer&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I found a couple of issues with the new Anaconda 18 installer that were
either unweildy or confusing for someone who&amp;#8217;s been installing Linux for
a long time. Overall, the new installer is very nice. It has a clean,
even elegant &lt;span class="caps"&gt;UI&lt;/span&gt;, a relatively nice flow from start to completion, and is
certainly beginner-friendly. It has fewer options than any Linux
installer I&amp;#8217;ve ever used before - not even options for package
selection, firewall or SELinux configuration, etc. - but I guess this is
in line with the goal of making Fedora a desktop &lt;span class="caps"&gt;OS&lt;/span&gt; for the masses. I
would have appreciated an &amp;#8220;advanced mode&amp;#8221; installer that was more like
Fedora 17 (or even much older versions), but I guess I&amp;#8217;m an edge case,
at least in the Fedora community. However, I did find two things
especially difficult, both related to the fact that my laptop has two
main drives (a &lt;span class="caps"&gt;500GB&lt;/span&gt; hard drive and a &lt;span class="caps"&gt;120GB&lt;/span&gt;&amp;nbsp;&lt;span class="caps"&gt;SSD&lt;/span&gt;):&lt;/p&gt;
&lt;p&gt;First, the installer prompted me to select a &amp;#8220;boot disk&amp;#8221;. I guess I
should have read the installation guide, but I assumed that nomenclature
translated to either &amp;#8220;which disk should the automatic partitiioning put
yout &lt;code&gt;/boot&lt;/code&gt; partition on&amp;#8221; or &amp;#8220;which disk should I set the bootable flag
on in the partition table&amp;#8221;. In fact, it means &amp;#8220;which disk should I put
&lt;span class="caps"&gt;GRUB&lt;/span&gt; on the &lt;span class="caps"&gt;EFI&lt;/span&gt; partition of&amp;#8221;. I installed, rebooted, and was shocked -
and somewhat distressed - to boot directly to &lt;span class="caps"&gt;GRUB2&lt;/span&gt; instead of the
rEFInd installation I had setup. The installer didn&amp;#8217;t have any of the
previously-customary &amp;#8220;warning: this will overwrite your &lt;span class="caps"&gt;MBR&lt;/span&gt;/&lt;span class="caps"&gt;EFI&lt;/span&gt; boot
partition&amp;#8221; notices, so I felt safe letting it continue. It turned out
that this was the way I ended up going, and it also turns out that
there&amp;#8217;s a bug in Anaconda that makes it fail installation if you tell it
not to write a bootloader to disk (though it&amp;#8217;s patched by one line of
Python code). But I was deeply distressed that - contrary to the
experience of every, admittedly more complicated, Linux installer I&amp;#8217;d
used before - the Fedora 18 installer overwrote my &lt;span class="caps"&gt;EFI&lt;/span&gt; bootloader
(analogous to overwriting the &lt;span class="caps"&gt;MBR&lt;/span&gt; on a &lt;span class="caps"&gt;BIOS&lt;/span&gt; boot machine) without ever
warning me or asking for a&amp;nbsp;confirmation.&lt;/p&gt;
&lt;p&gt;Secondly, the partitioning tool is clearly designed for only one
destination disk. The overview screen lists configured partitions by
label and mount point, but not by physical device, so figuring out which
partitions are on which physical disks takes a click on each and every
partition to view that information in the detail panel. When you create
a new partition, it&amp;#8217;s automatically put in a &lt;span class="caps"&gt;LVM&lt;/span&gt; volume group spanning
all disks. Changing the target of the automatically created volume group
requires a few clicks, as does changing the physical disks backing any
new volume groups. To assign a newly created partition to a specific
disk, you have to click on an unlabeled &amp;#8220;tool&amp;#8221; icon under the list of
partitions, far away from the information on the partition in question.
It&amp;#8217;s a nice interface for someone who clicks the &amp;#8220;partition
automatically&amp;#8221; button, or who just knows they want to add &amp;#8220;an extra
partition&amp;#8221;, but for anyone who has a specific layout in mind (like
having &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;/boot&lt;/code&gt; and &lt;code&gt;/var&lt;/code&gt;, specifically sized, on the &lt;span class="caps"&gt;SSD&lt;/span&gt; and
&lt;code&gt;/home&lt;/code&gt; on the rotating disk) it takes about 4-5 more clicks and dialogs
to add a partition than the last Fedora installer did. Mainly, it&amp;#8217;s
lacking any sort of Advanced Mode for partitioning that allows the user
to quickly and accurately layout a more complex partitioning&amp;nbsp;scheme.&lt;/p&gt;
&lt;p&gt;Below are some screenshots from the Fedora 17 and Fedora 18 Installation
Guides, which contrast both the overview of all partitions and the
individual partition&amp;nbsp;settings:&lt;/p&gt;
&lt;p&gt;Fedora 18 Overview, from &lt;a href="http://docs.fedoraproject.org/en-US/Fedora/18/html/Installation_Guide/s1-diskpartitioning-x86.html"&gt;9.13. Creating a Custom Partition Layout&lt;/a&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="http://www.dedoimedo.com/images/computers_years/2013_1/fedora-18-installer-configure-partitions.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;Fedora 17 Overview, from &lt;a href="http://docs.fedoraproject.org/en-US/Fedora/17/html/Installation_Guide/s1-diskpartitioning-x86.html"&gt;9.14. Creating a Custom Layout or Modifying
the Default Layout&lt;/a&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="http://docs.fedoraproject.org/en-US/Fedora/17/html/Installation_Guide/images/diskpartitioning/ddmain.png" /&gt;  &lt;/p&gt;
&lt;p&gt;Fedora 18 Partition Creation/Editing, from &lt;a href="http://docs.fedoraproject.org/en-US/Fedora/18/html/Installation_Guide/Create_LVM-x86.html"&gt;9.13.3. Create &lt;span class="caps"&gt;LVM&lt;/span&gt; Logical
Volume&lt;/a&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="http://docs.fedoraproject.org/en-US/Fedora/18/html/Installation_Guide/images/diskpartitioning/lvm-pv.png" /&gt;  &lt;/p&gt;
&lt;p&gt;Fedora 17 Partition Creation/Editing, from &lt;a href="http://docs.fedoraproject.org/en-US/Fedora/17/html/Installation_Guide/Adding_Partitions-x86.html"&gt;9.14.2. Adding
Partitions&lt;/a&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="http://docs.fedoraproject.org/en-US/Fedora/17/html/Installation_Guide/images/diskpartitioning/part-add.png" /&gt;&lt;/p&gt;</summary><category term="bootloader"></category><category term="efi"></category><category term="fedora"></category><category term="gpt"></category><category term="grub"></category><category term="installation"></category><category term="laptop"></category><category term="mac"></category><category term="macbook"></category><category term="os x"></category></entry><entry><title>Pretty-Print a JSON response at the command line</title><link href="/2012/10/pretty-print-a-json-response-at-the-command-line/" rel="alternate"></link><updated>2012-10-09T14:44:00-04:00</updated><author><name>admin</name></author><id>tag:,2012-10-09:2012/10/pretty-print-a-json-response-at-the-command-line/</id><summary type="html">&lt;p&gt;I&amp;#8217;ve been doing some work with &lt;a href="http://www.rabbitmq.com/"&gt;RabbitMQ&lt;/a&gt; lately, and have been doing
some testing against its &lt;span class="caps"&gt;HTTP&lt;/span&gt;-based &lt;span class="caps"&gt;API&lt;/span&gt;, which returns results in &lt;span class="caps"&gt;JSON&lt;/span&gt;.
If you&amp;#8217;re looking to pretty-print a &lt;span class="caps"&gt;JSON&lt;/span&gt; response for easier viewing,
here&amp;#8217;s a nice way to do it at the command line using Python and
&lt;a href="http://docs.python.org/library/json.html"&gt;json.tool&lt;/a&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl http://username:pass@hostname:55672/api/overview | python -m json.tool&lt;/code&gt;{lang=&amp;#8221;bash&amp;#8221;}&lt;/p&gt;</summary><category term="curl"></category><category term="json"></category><category term="python"></category><category term="rabbitmq"></category></entry><entry><title>Nagstamon on Fedora 17</title><link href="/2012/10/nagstamon-on-fedora-17/" rel="alternate"></link><updated>2012-10-05T07:37:00-04:00</updated><author><name>admin</name></author><id>tag:,2012-10-05:2012/10/nagstamon-on-fedora-17/</id><summary type="html">&lt;p&gt;Since I started my last job, I&amp;#8217;ve been using &lt;a href="http://nagstamon.ifw-dresden.de/"&gt;Nagstamon&lt;/a&gt; on my
workstation; it&amp;#8217;s a really handy little system tray application that
monitors a Nagios/Icinga instance and shows status updates/summary in a
handy fashion, including flashing and (optionally) a sound alert when
something changes. Unfortunately, there doesn&amp;#8217;t seem to be a Fedora 17
package for it, though there is an entry on the &lt;a href="http://fedoraproject.org/wiki/Package_maintainers_wishlist#N-O"&gt;Fedora package
maintainers wishlist&lt;/a&gt;. The closest I was able to find is a
&lt;a href="http://pkgs.org/centos-6-rhel-6/repoforge-i386/nagstamon-0.9.7.1-2.el6.rf.noarch.rpm.html"&gt;repoforge/RPMforge&lt;/a&gt; package of Nagstamon 0.9.7.1, along with a
&lt;a href="http://apt.sw.be/source/nagstamon-0.9.7.1-2.rf.src.rpm"&gt;source &lt;span class="caps"&gt;RPM&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are the steps to build that package on&amp;nbsp;F17:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download and install &lt;a href="http://apt.sw.be/source/rpm-macros-rpmforge-0-6.rf.src.rpm"&gt;rpm-macros-rpmforge&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;As root, edit &lt;code&gt;/etc/rpm/macros.rpmforge&lt;/code&gt; and comment out the &lt;code&gt;%dist&lt;/code&gt;
    macro, so we&amp;#8217;ll still have the default &amp;#8220;fc17&amp;#8221; dist&amp;nbsp;tag.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wget http://apt.sw.be/source/nagstamon-0.9.7.1-2.rf.src.rpm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;rpmbuild &amp;#8212;rebuild&amp;nbsp;nagstamon-0.9.7.1-2.rf.src.rpm&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Hopefully this will help someone else as well. At the moment, Nagstamon
is actually up to version 0.9.9, so hopefully I&amp;#8217;ll build a newer package
sometime&amp;nbsp;soon.&lt;/p&gt;</summary><category term="fedora"></category><category term="nagios. icinga"></category><category term="nagstamon"></category><category term="package"></category><category term="rpm"></category></entry><entry><title>Getting oVirt up and running</title><link href="/2012/09/getting-ovirt-up-and-running/" rel="alternate"></link><updated>2012-09-07T05:00:00-04:00</updated><author><name>admin</name></author><id>tag:,2012-09-07:2012/09/getting-ovirt-up-and-running/</id><summary type="html">&lt;p&gt;The bulk of this post was written way back in April 2012. If you&amp;#8217;re just
coming here, and looking to setup oVirt, you should probably &lt;a href="#postscript"&gt;skip down
to the postscript&lt;/a&gt; for an update, and ignore most of the content here
(as it&amp;#8217;s applicable to an older oVirt&amp;nbsp;version).&lt;/p&gt;
&lt;p&gt;I recently started setting up &lt;a href="http://www.ovirt.org"&gt;oVirt&lt;/a&gt;, the community version of Red
Hat Enterprise Virtualization, at work for some testing (mainly a
&amp;#8220;sandbox&amp;#8221; &lt;span class="caps"&gt;VM&lt;/span&gt; environment, and because &lt;a href="http://theforeman.org/"&gt;Foreman&lt;/a&gt; &lt;a href="http://blog.theforeman.org/2012/03/vnc-support-built-in-foreman.html"&gt;supports&lt;/a&gt; it). To
start with, I had two nodes, each with two dual-core Xeon processors
(&lt;span class="caps"&gt;VT&lt;/span&gt;-x capable) with &lt;span class="caps"&gt;20GB&lt;/span&gt; &lt;span class="caps"&gt;RAM&lt;/span&gt;, one with &lt;span class="caps"&gt;600GB&lt;/span&gt; internal storage and one
with &lt;span class="caps"&gt;140GB&lt;/span&gt; internal. While oVirt&amp;#8217;s documentation isn&amp;#8217;t exactly
wonderful, I found a blgo post by Jason Brooks, &lt;a href="http://blog.jebpages.com/archives/how-to-get-up-and-running-with-ovirt/"&gt;How to Get Up and
Running with oVirt&lt;/a&gt;, which gives a great walkthrough of getting the
oVirt Engine setup on a machine, and also setting up that same machine
as a &lt;span class="caps"&gt;VM&lt;/span&gt; host. As oVirt is still fairly young, this is all done on
Fedora. I performed my installation via Cobbler, though I&amp;#8217;m afraid to
admit it was an entirely manual, interactive&amp;nbsp;install.&lt;/p&gt;
&lt;p&gt;I did run into a few bumps during Jason&amp;#8217;s tutorial. In step 15, adding
the data &lt;span class="caps"&gt;NFS&lt;/span&gt; export as a Storage Domain, I was unable to add the &lt;span class="caps"&gt;NFS&lt;/span&gt;
export. I found the &lt;a href="http://www.ovirt.org/wiki/Troubleshooting_NFS_Storage_Issues"&gt;Troubleshooting &lt;span class="caps"&gt;NFS&lt;/span&gt; Storage Issues page on the
oVirt wiki&lt;/a&gt;, ensured that SELinux was disabled and that the export had
the correct permissions, confirmed that &lt;code&gt;/etc/nfsmount.conf&lt;/code&gt; specified
&lt;code&gt;Nfsvers=3&lt;/code&gt;, rebooted, and then ran the &lt;code&gt;nfs-check.py&lt;/code&gt; script. At this
point, I was able to add the other storage domains in steps 15 and&amp;nbsp;16.&lt;/p&gt;
&lt;p&gt;My second issue was that even on Fedora 16, I simply can&amp;#8217;t get the spice
client (through the &lt;code&gt;spice-xpi&lt;/code&gt; browser plugin) to work. As far as I can
tell from the logs, it looks like &lt;code&gt;spicec&lt;/code&gt; is being sent a value of
&amp;#8220;None&amp;#8221; for the secured port parameter, instead of the correct port
number. I assume this is a bug in oVirt, but I&amp;#8217;ll revisit this problem
when I have time. In the mean time, I changed my test &lt;span class="caps"&gt;VM&lt;/span&gt; to use &lt;span class="caps"&gt;VNC&lt;/span&gt;,
which is launched by installing the &lt;code&gt;ovirt-engine-cli&lt;/code&gt; package (see
below) on your client computer, connecting to the oVirt &lt;span class="caps"&gt;API&lt;/span&gt; with&amp;nbsp;ovirt-shell:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;ovirt-shell --connect --url=https://ovirt-engine.example.com:8443/api --user=admin@internal --password adminpassword&lt;/code&gt;&lt;br /&gt;
and then running &lt;code&gt;console vm_name&lt;/code&gt;. This launches the &lt;code&gt;vncviewer&lt;/code&gt;
binary, which is in the &amp;#8220;tigervnc&amp;#8221; package on&amp;nbsp;Fedora.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Installing&amp;nbsp;ovirt-engine-cli&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To run &lt;code&gt;ovirt-shell&lt;/code&gt; on your workstation (Fedora 16, of course&amp;#8230;)
you&amp;#8217;ll need the ovirt-engine-cli and ovirt-engine-sdk packages. I
manually downloaded them from
&lt;a href="http://www.ovirt.org/releases/nightly/fedora/16/"&gt;http://www.ovirt.org/releases/nightly/fedora/16/&lt;/a&gt;, versions 2.1.3 and
1.6.2, respecitively. The &lt;span class="caps"&gt;SDK&lt;/span&gt; and &lt;span class="caps"&gt;CLI&lt;/span&gt; are python based, so there are a
few Python dependencies, all of which were automatically solved by yum.
I know there are &lt;span class="caps"&gt;SDK&lt;/span&gt; and &lt;span class="caps"&gt;CLI&lt;/span&gt; packages out there for other distros, but
haven&amp;#8217;t tried them&amp;nbsp;yet.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Installing Linux&amp;nbsp;Guests&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Installing a CentOS 6.2 x86_64 guest was relatively straightforward,
and my usual kickstart infrastructure worked fine. The only catch was
the VirtIO storage interface, which shows up as &lt;code&gt;/dev/vdx&lt;/code&gt; instead of
&lt;code&gt;/dev/sdx&lt;/code&gt;; I just added another kickstart metadata option in Cobbler
that allows me to use &lt;code&gt;sdx&lt;/code&gt; by specifying &amp;#8220;virtual=yes&amp;#8221; (for our VMWare
hosts), or &lt;code&gt;vdx&lt;/code&gt; by specifying&amp;nbsp;&amp;#8220;virtual=ovirt&amp;#8221;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Setting up&amp;nbsp;Authentication&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As installed, oVirt only has one user, &amp;#8220;admin@internal&amp;#8221;; it requires an
external directory service for user authentication. Currently, it
supports &lt;span class="caps"&gt;IPA&lt;/span&gt;, Red Hat&amp;#8217;s Enterprise Identity Management tool (combines
&lt;span class="caps"&gt;RHEL&lt;/span&gt;, oVirt Directory Server, Kerberos and &lt;span class="caps"&gt;NTP&lt;/span&gt;; perhaps &lt;a href="http://freeipa.org"&gt;FreeIPA&lt;/a&gt;
would work as well?) and Microsoft Active Directory. As much as I&amp;#8217;d like
to give &lt;span class="caps"&gt;IPA&lt;/span&gt; or FreeIPA a try, my company already has an &lt;span class="caps"&gt;AD&lt;/span&gt;
infrastructure, so I opted to go that route. Documentation is given in
the &lt;a href="http://www.ovirt.org/wiki/File:OVirt-3.0-Installation_Guide-en-US.pdf"&gt;oVirt 3.0 Installation Guide&lt;/a&gt;, starting on page 96.
Unfortunately, I was never about to get &lt;span class="caps"&gt;AD&lt;/span&gt; auth working correctly, so I
just worked with the one admin&amp;nbsp;user.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Adding a&amp;nbsp;Node&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The biggest issue I had was adding the second node to oVirt. I attempted
to use the &lt;span class="caps"&gt;DVD&lt;/span&gt; Import feature of Cobbler on the &lt;a href="http://www.ovirt.org/get-ovirt/"&gt;oVirt Node Image
&lt;span class="caps"&gt;ISO&lt;/span&gt;&lt;/a&gt;, but that failed. I then found the image&amp;#8217;s
&lt;code&gt;LiveOS/livecd-iso-to-pxeboot&lt;/code&gt; script and used that to make a kernerl
and initrd, and kernel parameters, for Cobbler. &lt;span class="caps"&gt;PXE&lt;/span&gt; works&amp;nbsp;fine.&lt;/p&gt;
&lt;p&gt;&lt;a name="postscript"&gt;&lt;/a&gt;&lt;strong&gt;Postscript:&lt;/strong&gt; I ended up blowing away my
oVirt installation in favor of testing other things. At some point, the
engine install got corrupted in a way that I just couldn&amp;#8217;t fix; even
though I spent all day one Saturday working on it, it took more time
than I could allocate to a personal project. So this post is really
semi-complete at best. However, there is some good news. Jason Brooks&amp;#8217;
original post, &lt;a href="http://blog.jebpages.com/archives/how-to-get-up-and-running-with-ovirt/"&gt;How to Get Up and Running with oVirt&lt;/a&gt;, was written for
oVirt 3.0, as was this post. Since then, there has been a new release,
&lt;a href="http://wiki.ovirt.org/wiki/OVirt_3.1_release_notes"&gt;oVirt 3.1&lt;/a&gt;, which apparently has a better &lt;span class="caps"&gt;UI&lt;/span&gt; and a better installer.
Jason Brooks has a new post, &lt;a href="http://blog.jebpages.com/archives/up-and-running-with-ovirt-3-1-edition/"&gt;Up and Running with oVirt, 3.1 Edition&lt;/a&gt;,
which covers installation and configuration of both an all-in-one
machine and a separate node. If you&amp;#8217;re looking to try oVirt, I&amp;#8217;d
recommend you give that a shot. Unfortunately (and strangely, given that
this is supposed to be the &amp;#8220;upstream&amp;#8221; of RedHat&amp;#8217;s proprietary &lt;span class="caps"&gt;RHEV&lt;/span&gt;) it&amp;#8217;s
still all based on&amp;nbsp;Fedora.&lt;/p&gt;</summary><category term="fedora"></category><category term="kvm"></category><category term="ovirt"></category><category term="qemu"></category><category term="redhat"></category><category term="rhev"></category><category term="spice"></category><category term="virtualization"></category></entry><entry><title>Wordpress - Automatically publish a pending post each weekday morning from a PHP script</title><link href="/2012/09/wordpress-automatically-publish-a-pending-post-each-weekday-morning-from-a-php-script/" rel="alternate"></link><updated>2012-09-04T05:00:00-04:00</updated><author><name>admin</name></author><id>tag:,2012-09-04:2012/09/wordpress-automatically-publish-a-pending-post-each-weekday-morning-from-a-php-script/</id><summary type="html">&lt;p&gt;In an earlier post, &lt;a href="/2012/08/piwik-web-analytics-and-some-unfortunate-stats-about-my-blog/"&gt;Piwik Web Analytics, and some unfortunate stats
about my blog&lt;/a&gt;, I mentioned that the &lt;a href="http://feedburner.google.com/"&gt;Feedburner&lt;/a&gt; stats for this
blog show a relatively high subscribe/unsubscribe rate for this blog. I
think a large part of that is my tendency to blog in spurts, and even
worse, my tendency to write drafts and not publish them. In an effort to
combat this, I&amp;#8217;ve been trying to finish blog posts and then set them to
&amp;#8220;Pending&amp;#8221; status, and go back and publish one every day (well, every day
that I have some still sitting unpublished). Of course, that counts on
me logging in to Wordpress every day, which isn&amp;#8217;t something I do. The
following script is, at least for now, the answer for&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;This script (a standalone &lt;span class="caps"&gt;PHP&lt;/span&gt; script) uses [&lt;code&gt;wp-load.php&lt;/code&gt;][] to load the
wordpress environment, and then finds the oldest post with a given
status (&amp;#8220;pending&amp;#8221; in my case) and attempts to publish it. It only does
this if there has not been another post published in the last 24 hours.
The following script can be found in subversion at&amp;nbsp;[http://svn.jasonantman.com/misc-scripts/wordpress_daily_post.php][]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="x"&gt;#!/usr/bin/php&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**&lt;/span&gt;
&lt;span class="sd"&gt; * wordpress_daily_post.php&lt;/span&gt;
&lt;span class="sd"&gt; * Script to publish the oldest post with a given status, if no&lt;/span&gt;
&lt;span class="sd"&gt; * other post has been published in 24 hours. Intended to be run&lt;/span&gt;
&lt;span class="sd"&gt; * via cron on weekdays.&lt;/span&gt;
&lt;span class="sd"&gt; *&lt;/span&gt;
&lt;span class="sd"&gt; * Copyright 2012 Jason Antman &lt;/span&gt;
&lt;span class="sd"&gt; *&lt;/span&gt;
&lt;span class="sd"&gt; * Licensed under the Apache License, Version 2.0 &lt;/span&gt;
&lt;span class="sd"&gt; *&lt;/span&gt;
&lt;span class="sd"&gt; * use it anywhere you want, however you want, provided that this header is left intact,&lt;/span&gt;
&lt;span class="sd"&gt; * and that if redistributed, credit is given to me.&lt;/span&gt;
&lt;span class="sd"&gt; *&lt;/span&gt;
&lt;span class="sd"&gt; * It is strongly requested, but not technically required, that any changes/improvements&lt;/span&gt;
&lt;span class="sd"&gt; * be emailed to the above address.&lt;/span&gt;
&lt;span class="sd"&gt; *&lt;/span&gt;
&lt;span class="sd"&gt; * The latest version of this script will always be available at:&lt;/span&gt;
&lt;span class="sd"&gt; * $HeadURL: http://svn.jasonantman.com/misc-scripts/wordpress_daily_post.php $&lt;/span&gt;
&lt;span class="sd"&gt; * $LastChangedRevision: 40 $&lt;/span&gt;
&lt;span class="sd"&gt; *&lt;/span&gt;
&lt;span class="sd"&gt; * Changelog:&lt;/span&gt;
&lt;span class="sd"&gt; * 2012-09-03 Jason Antman  - 1.0&lt;/span&gt;
&lt;span class="sd"&gt; *  - first version&lt;/span&gt;
&lt;span class="sd"&gt; */&lt;/span&gt;

&lt;span class="c1"&gt;# &lt;span class="caps"&gt;BEGIN&lt;/span&gt; &lt;span class="caps"&gt;CONFIGURATION&lt;/span&gt;&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;WP_LOAD_LOC&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/var/www/vhosts/blog.jasonantman.com/wp-load.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Configure this to the full path of your Wordpress wp-load.php&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SOURCE_POST_STATUS&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// post status to publish&lt;/span&gt;
&lt;span class="c1"&gt;# &lt;span class="caps"&gt;END&lt;/span&gt; &lt;span class="caps"&gt;CONFIGURATION&lt;/span&gt;&lt;/span&gt;

&lt;span class="nv"&gt;$&lt;span class="caps"&gt;VERBOSE&lt;/span&gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$DRY_RUN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;array_shift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-d&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;--dry-run&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nv"&gt;$DRY_RUN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;span class="caps"&gt;DRY&lt;/span&gt; &lt;span class="caps"&gt;RUN&lt;/span&gt; &lt;span class="caps"&gt;ONLY&lt;/span&gt; - &lt;span class="caps"&gt;NOT&lt;/span&gt; &lt;span class="caps"&gt;ACTUALLY&lt;/span&gt; &lt;span class="caps"&gt;PUBLISHING&lt;/span&gt;.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-v&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;--verbose&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nv"&gt;$&lt;span class="caps"&gt;VERBOSE&lt;/span&gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;WP_LOAD_LOC=&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WP_LOAD_LOC&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SOURCE_POST_STATUS=&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SOURCE_POST_STATUS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nb"&gt;array_shift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HTTP_HOST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// needed for wp-includes/ms-settings.php:100&lt;/span&gt;
&lt;span class="k"&gt;require_once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;WP_LOAD_LOC&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;# check that we&amp;#39;re running on a weekday&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;N&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;#  if($&lt;span class="caps"&gt;VERBOSE&lt;/span&gt;){ fwrite(&lt;span class="caps"&gt;STDERR&lt;/span&gt;, &amp;quot;today is a saturday or sunday, dieing.\n&amp;quot;); }&lt;/span&gt;
&lt;span class="c1"&gt;#  exit(1);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# find the publish date/time of the last published post&lt;/span&gt;
&lt;span class="nv"&gt;$published&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_posts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;numberposts&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;orderby&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;order&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;span class="caps"&gt;DESC&lt;/span&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;post_status&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;publish&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$published&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nv"&gt;$pub_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_date&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$pub_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;&lt;span class="caps"&gt;ID&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;strtotime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$pub_date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;86400&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$&lt;span class="caps"&gt;VERBOSE&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;last post (&lt;span class="caps"&gt;ID&lt;/span&gt; &lt;/span&gt;&lt;span class="si"&gt;$pub_id&lt;/span&gt;&lt;span class="s2"&gt;) within last day (&lt;/span&gt;&lt;span class="si"&gt;$pub_date&lt;/span&gt;&lt;span class="s2"&gt;). Nothing to do. Exiting.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$&lt;span class="caps"&gt;VERBOSE&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Found last post (&lt;span class="caps"&gt;ID&lt;/span&gt; &lt;/span&gt;&lt;span class="si"&gt;$pub_id&lt;/span&gt;&lt;span class="s2"&gt;) with post date &lt;/span&gt;&lt;span class="si"&gt;$pub_date&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;# find the earliest post of status SOURCE_POST_STATUS, if there is one.&lt;/span&gt;
&lt;span class="nv"&gt;$to_post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_posts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;numberposts&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;orderby&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;order&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;span class="caps"&gt;ASC&lt;/span&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;post_status&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;SOURCE_POST_STATUS&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$to_post&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;&lt;span class="caps"&gt;ID&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$to_pub_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_date&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$to_pub_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_title&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$new_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Y-m-d H:i:s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$now&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$new_date_gmt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gmdate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Y-m-d H:i:s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$now&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$&lt;span class="caps"&gt;VERBOSE&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Post to publish: &lt;span class="caps"&gt;ID&lt;/span&gt;=&lt;/span&gt;&lt;span class="si"&gt;$to_pub_id&lt;/span&gt;&lt;span class="s2"&gt; &lt;span class="caps"&gt;DATE&lt;/span&gt;=&lt;/span&gt;&lt;span class="si"&gt;$to_pub_date&lt;/span&gt;&lt;span class="s2"&gt; NEW_DATE=&lt;/span&gt;&lt;span class="si"&gt;$new_date&lt;/span&gt;&lt;span class="s2"&gt; &lt;span class="caps"&gt;TITLE&lt;/span&gt;=&lt;/span&gt;&lt;span class="si"&gt;$to_pub_title&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# actually publish it&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$DRY_RUN&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nv"&gt;$arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;span class="caps"&gt;ID&lt;/span&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$to_pub_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;post_status&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;publish&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$new_date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;post_date_gmt&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$new_date_gmt&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_update_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// publish the post&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ret&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;span class="caps"&gt;ERROR&lt;/span&gt;: Post &lt;/span&gt;&lt;span class="si"&gt;$to_pub_id&lt;/span&gt;&lt;span class="s2"&gt; was not successfully published.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$&lt;span class="caps"&gt;VERBOSE&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Published post. New &lt;span class="caps"&gt;ID&lt;/span&gt;: &lt;/span&gt;&lt;span class="si"&gt;$ret&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Dry run only, not publishing post.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# check that the post really was published&lt;/span&gt;
&lt;span class="nv"&gt;$published&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_posts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;numberposts&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;orderby&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;order&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;span class="caps"&gt;DESC&lt;/span&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;post_status&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;publish&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$published&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nv"&gt;$pub_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_date&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$pub_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;&lt;span class="caps"&gt;ID&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$pub_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_title&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$pub_guid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;guid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$pub_title&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;$to_pub_title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDERR&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;span class="caps"&gt;ERROR&lt;/span&gt;: title of most recent post does not match title of what we wanted to post.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDOUT&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Published post &lt;/span&gt;&lt;span class="si"&gt;$pub_id&lt;/span&gt;&lt;span class="s2"&gt; at &lt;/span&gt;&lt;span class="si"&gt;$pub_date&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDOUT&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Title: &lt;/span&gt;&lt;span class="si"&gt;$pub_title&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDOUT&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n\n&lt;/span&gt;&lt;span class="s2"&gt; &lt;span class="caps"&gt;GUID&lt;/span&gt;/Link: &lt;/span&gt;&lt;span class="si"&gt;$pub_guid&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;&lt;span class="caps"&gt;STDOUT&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="k"&gt;__FILE__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; on &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;shell_exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hostname --fqdn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; running as &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;get_current_user&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You&amp;#8217;ll need to set &lt;code&gt;WP_LOAD_LOC&lt;/code&gt; (line 29) to the full path of your
Wordpress installation&amp;#8217;s &lt;code&gt;wp-load.php&lt;/code&gt; (it should be in the top-level
directory of your Wordpress installation. I run this script from cron&amp;nbsp;like:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;0 6 * * 1-5 /home/jantman/bin/wordpress_daily_post.php --verbose # publish WP pending posts daily
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;so that it runs at &lt;span class="caps"&gt;6AM&lt;/span&gt; (local time) each weekday. Assuming you have cron
setup to send you mail, you&amp;#8217;ll get a daily message saying what was (or
wasn&amp;#8217;t)&amp;nbsp;done.&lt;/p&gt;</summary><category term="cron"></category><category term="PHP"></category><category term="wordpress"></category></entry><entry><title>RVM and Ruby 1.9 to test logstash grok patterns on Fedora/CentOS</title><link href="/2012/09/rvm-and-ruby-1-9-to-test-logstash-grok-patterns-on-fedoracentos/" rel="alternate"></link><updated>2012-09-03T08:37:00-04:00</updated><author><name>admin</name></author><id>tag:,2012-09-03:2012/09/rvm-and-ruby-1-9-to-test-logstash-grok-patterns-on-fedoracentos/</id><summary type="html">&lt;p&gt;I&amp;#8217;ve been working on a personal project with &lt;a href="http://logstash.net/"&gt;Logstash&lt;/a&gt; lately, and it
relies relatively heavily on &lt;a href="https://github.com/jordansissel/grok"&gt;grok&lt;/a&gt; filters for matching text and
extracting matched parts. Today, I&amp;#8217;ve been parsing syslog from
&lt;a href="http://puppetlabs.com/puppet/puppet-open-source/"&gt;Puppet&lt;/a&gt; to extract various metrics and timings, which will then be
passed on from Logstash to &lt;a href="https://github.com/etsy/statsd"&gt;Etsy&amp;#8217;s statsd&lt;/a&gt; and then to &lt;a href="http://graphite.wikidot.com/"&gt;graphite&lt;/a&gt;
for display. Unfortunately, a few of my patterns are showing the
&amp;#8220;_grokparsefailure&amp;#8221; tag and I just can&amp;#8217;t seem to find the&amp;nbsp;problem.&lt;/p&gt;
&lt;p&gt;The logstash wiki provides a page on &lt;a href="https://github.com/logstash/logstash/wiki/Testing-your-Grok-patterns-(--logstash-1.1.0-and-above-)"&gt;Testing your Grok patterns&lt;/a&gt;, as
does Sean Laurent on his blog: &lt;a href="http://blog.bealetech.com/content/testing-logstash-grok-filters"&gt;Testing Logstash grok filters&lt;/a&gt;.
Unfortunately, I work in a CentOS/&lt;span class="caps"&gt;RHEL&lt;/span&gt; shop, and we&amp;#8217;re decidedly &lt;em&gt;not&lt;/em&gt; a
Ruby shop. Our Logstash install is using the monolithic/standalone Java
&lt;span class="caps"&gt;JAR&lt;/span&gt;. We run Puppet, which is currently under ruby 1.8.7, and the
&lt;a href="http://rubygems.org/gems/jls-grok"&gt;jls-grok rubygem&lt;/a&gt; requires ruby 1.9. There&amp;#8217;s no way I&amp;#8217;d feel safe
installing 1.9 on any of our machines, as they all run (and require)
Puppet. So, I found out about &lt;a href="https://rvm.io/"&gt;&lt;span class="caps"&gt;RVM&lt;/span&gt;&lt;/a&gt;, the Ruby Version Manager, which
allows you to run and switch between multiple ruby versions, and all of
it is installed on a per-user basis. So, I created a new user on my
Fedora 16 desktop called &amp;#8220;rvmtest&amp;#8221; and went about the process of setting
up what&amp;#8217;s needed to test grok patterns in the user&amp;#8217;s local environment.
I imagine this would work similarly under CentOS or &lt;span class="caps"&gt;RHEL&lt;/span&gt;, but the
following is only tested on Fedora 16. If you have any issues, you
should probably refer back to the &lt;span class="caps"&gt;RVM&lt;/span&gt;&amp;nbsp;documentation.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create the isolated user, just to be extra careful. Login as that&amp;nbsp;user.&lt;/li&gt;
&lt;li&gt;As per &lt;a href="https://rvm.io/rvm/install/"&gt;Installing &lt;span class="caps"&gt;RVM&lt;/span&gt;&lt;/a&gt;:
    &lt;code&gt;curl https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer | bash -s stable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;edit your &lt;code&gt;~/.bashrc&lt;/code&gt; and&amp;nbsp;add:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;[[&lt;/span&gt; -s &lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;HOME&lt;/span&gt;/.rvm/scripts/rvm&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; . &lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;HOME&lt;/span&gt;/.rvm/scripts/rvm&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;[[&lt;/span&gt; -r &lt;span class="nv"&gt;$rvm_path&lt;/span&gt;/scripts/completion &lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; . &lt;span class="nv"&gt;$rvm_path&lt;/span&gt;/scripts/completion
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&amp;lt;p&amp;gt;
The first line sets up RVM for your sessions, and the second sources
in tab-completion for the `rvm` command.
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;&lt;code&gt;source .bashrc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If you&amp;#8217;re interested, you can see a list of all known rubies with:
    &lt;code&gt;rvm list known&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install Ruby (&lt;span class="caps"&gt;MRI&lt;/span&gt;) 1.9.2: &lt;code&gt;rvm install 1.9.2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;switch&amp;#8221; to that ruby: &lt;code&gt;rvm use 1.9.2&lt;/code&gt; and confirm it by running
    &lt;code&gt;ruby -v&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Make it the default ruby for us: &lt;code&gt;rvm use 1.9.2 --default&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a &amp;#8220;gemset&amp;#8221; (set of rubygems for our environment):
    &lt;code&gt;rvm gemset create groktest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use it, and set it as default: &lt;code&gt;rvm use 1.9.2@groktest --default&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;for grok testing, &lt;code&gt;gem install jls-grok&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;check that it&amp;#8217;s there: &lt;code&gt;gem list&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Download Logstash&amp;#8217;s default grok patterns &lt;a href="https://raw.github.com/logstash/logstash/master/patterns/grok-patterns"&gt;from&amp;nbsp;github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;You should now be ready to test some grok&amp;nbsp;patterns.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;While the two howto&amp;#8217;s linked above use &lt;code&gt;irb&lt;/code&gt; to interactively test the
patterns, I prefer something easier to move to production, more
reliable, and more repeatable. The following quick little ruby script
takes test to match against on &lt;span class="caps"&gt;STDIN&lt;/span&gt; (log files, messages, etc.) and
prints the matches to &lt;span class="caps"&gt;STDOUT&lt;/span&gt;. The script is based on &lt;a href="https://github.com/jordansissel/ruby-grok/blob/master/examples/test.rb"&gt;test.rb&lt;/a&gt; from
&lt;a href="https://github.com/jordansissel/ruby-grok"&gt;jordansissel&amp;#8217;s ruby-grok&lt;/a&gt;. Note one important thing here, I couldn&amp;#8217;t
get the shebang (&lt;code&gt;#!&lt;/code&gt;) to work with anything other than the explicit
path to my &lt;span class="caps"&gt;RVM&lt;/span&gt; ruby install (&lt;code&gt;which ruby&lt;/code&gt;) so you&amp;#8217;ll need to manually
update this&amp;nbsp;yourself.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#!.rvm/rubies/ruby-1.9.2-320bin/ruby&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;grok-pure&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pp&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;grok&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Grok&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;
&lt;span class="n"&gt;grok&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_patterns_from_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;grok-patterns&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;your_grok_pattern_here&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;grok&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;span class="caps"&gt;PATTERN&lt;/span&gt;: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gets&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;span class="caps"&gt;IN&lt;/span&gt;: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;match&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;grok&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;match&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;span class="caps"&gt;MATCH&lt;/span&gt;:&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;pp&lt;/span&gt; &lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;captures&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;No Match.&amp;quot;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here&amp;#8217;s an example using a pattern to capture information from custom
syslog messages triggered by updating puppet configs. Here&amp;#8217;s some sample&amp;nbsp;messages:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;[rvmtest@jantmanwork ~]$ cat puppet.log
Updated 2 files in puppet svn (environment prod) to revision 754
Updated 3 files in puppet svn (environment prod) to revision 756
Updated 1 files in puppet svn (environment prod) to revision 757
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the pattern that I&amp;nbsp;use:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;Updated%{SPACE}%{NUMBER:puppet_svn_num_files}%{SPACE}files%{SPACE}in%{SPACE}puppet%{SPACE}svn%{SPACE}\(environment%{SPACE}%{WORD:puppet_svn_env}\)%{SPACE}to%{SPACE}revision%{SPACE}%{NUMBER:puppet_svn_revision}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the output of the&amp;nbsp;script:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;[rvmtest@jantmanwork ~]$ cat puppet.log | ./puppet-update-test.rb 
PATTERN: Updated%{SPACE}%{NUMBER:puppet_svn_num_files}%{SPACE}files%{SPACE}in%{SPACE}puppet%{SPACE}svn%{SPACE}\(environment%{SPACE}%{WORD:puppet_svn_env}\)%{SPACE}to%{SPACE}revision%{SPACE}%{NUMBER:puppet_svn_revision}
IN: Updated 2 files in puppet svn (environment prod) to revision 754
MATCH:
{&amp;quot;SPACE&amp;quot;=&amp;gt;[&amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;],
 &amp;quot;NUMBER:puppet_svn_num_files&amp;quot;=&amp;gt;[&amp;quot;2&amp;quot;],
 &amp;quot;BASE10NUM&amp;quot;=&amp;gt;[&amp;quot;2&amp;quot;, &amp;quot;754&amp;quot;],
 &amp;quot;WORD:puppet_svn_env&amp;quot;=&amp;gt;[&amp;quot;prod&amp;quot;],
 &amp;quot;NUMBER:puppet_svn_revision&amp;quot;=&amp;gt;[&amp;quot;754&amp;quot;]}
IN: Updated 3 files in puppet svn (environment prod) to revision 756
MATCH:
{&amp;quot;SPACE&amp;quot;=&amp;gt;[&amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;],
 &amp;quot;NUMBER:puppet_svn_num_files&amp;quot;=&amp;gt;[&amp;quot;3&amp;quot;],
 &amp;quot;BASE10NUM&amp;quot;=&amp;gt;[&amp;quot;3&amp;quot;, &amp;quot;756&amp;quot;],
 &amp;quot;WORD:puppet_svn_env&amp;quot;=&amp;gt;[&amp;quot;prod&amp;quot;],
 &amp;quot;NUMBER:puppet_svn_revision&amp;quot;=&amp;gt;[&amp;quot;756&amp;quot;]}
IN: Updated 1 files in puppet svn (environment prod) to revision 757
MATCH:
{&amp;quot;SPACE&amp;quot;=&amp;gt;[&amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;, &amp;quot; &amp;quot;],
 &amp;quot;NUMBER:puppet_svn_num_files&amp;quot;=&amp;gt;[&amp;quot;1&amp;quot;],
 &amp;quot;BASE10NUM&amp;quot;=&amp;gt;[&amp;quot;1&amp;quot;, &amp;quot;757&amp;quot;],
 &amp;quot;WORD:puppet_svn_env&amp;quot;=&amp;gt;[&amp;quot;prod&amp;quot;],
 &amp;quot;NUMBER:puppet_svn_revision&amp;quot;=&amp;gt;[&amp;quot;757&amp;quot;]}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hopefully this will make the process a bit simpler for someone&amp;nbsp;else&amp;#8230;&lt;/p&gt;</summary><category term="grok"></category><category term="grokparsefailure"></category><category term="jruby"></category><category term="kibana"></category><category term="logstash"></category><category term="ruby"></category><category term="rvm"></category></entry><entry><title>Setting emacs zone-mode based on path</title><link href="/2012/08/setting-emacs-zone-mode-based-on-path/" rel="alternate"></link><updated>2012-08-15T08:00:00-04:00</updated><author><name>admin</name></author><id>tag:,2012-08-15:2012/08/setting-emacs-zone-mode-based-on-path/</id><summary type="html">&lt;p&gt;At work, we do a fair amount of &lt;span class="caps"&gt;DNS&lt;/span&gt; updates. Our zone files are stored
in subversion, and are named according to the domain (with no .zone
extension). It&amp;#8217;s a real pain when updating a few (or a few dozen) zones
in Emacs, since I have to remember to &amp;#8220;M-x zone-mode&amp;#8221; so the serial gets
automatically updated. Here&amp;#8217;s a lisp snippet to put in your &lt;code&gt;.emacs&lt;/code&gt;
file that will set zone-mode for all files in any path matching the
regex &lt;code&gt;svn/named/zones-internal&lt;/code&gt;. I deliberately made it a relative path
(or, really, any path containing that) so it would work for all of my
team&amp;#8217;s workstations, no matter where we have the svn repo checked&amp;nbsp;out:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-to-list&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;auto-mode-alist&lt;/span&gt; &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;svn/named/zones-internal/&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;zone-mode&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Many thanks to &lt;code&gt;taylanub&lt;/code&gt; on #emacs on irc.freenode.net for helping
with&amp;nbsp;this.&lt;/p&gt;</summary><category term="bind"></category><category term="emacs"></category><category term="lisp"></category><category term="named"></category><category term="zone-mode"></category></entry><entry><title>Workflow for contributing to GitHub projects</title><link href="/2012/08/workflow-for-contributing-to-github-projects/" rel="alternate"></link><updated>2012-08-11T09:35:00-04:00</updated><author><name>admin</name></author><id>tag:,2012-08-11:2012/08/workflow-for-contributing-to-github-projects/</id><summary type="html">&lt;p&gt;Lately I&amp;#8217;ve been contributing to some open source projects hosted on
&lt;a href="http://github.com"&gt;github&lt;/a&gt;. I&amp;#8217;m pretty new to git, and the process is a bit confusing
for beginners. So, here&amp;#8217;s a sample workflow, based on the &lt;a href="http://theforeman.org"&gt;The
Foreman&lt;/a&gt;&amp;#8216;s &lt;a href="https://github.com/theforeman/foreman"&gt;foreman github repository&lt;/a&gt;. Note that I&amp;#8217;m developing
against the &amp;#8220;develop&amp;#8221; branch of that repository, not the master, so that
throws in a little difference that isn&amp;#8217;t documented in most
introductions. To throw in another wrench, I maintan a branch with the
code that I&amp;#8217;m currently actually using (i.e. the application code that I
have checked out on the production server), called &amp;#8220;jantman&amp;#8221;. This is
more or less composed of the upstream &amp;#8220;develop&amp;#8221; branch, with all of my
finished (but not yet merged in the upstream) topic branches. I&amp;#8217;m pretty
sure all this is correct, but honestly, I&amp;#8217;m still new enough at git that
I can&amp;#8217;t make any promises. Unfortunatelty, I haven&amp;#8217;t had the time to
&lt;em&gt;really&lt;/em&gt; learn git, and I also can&amp;#8217;t find a simple enough tutorial that
covers all&amp;nbsp;this&amp;#8230;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Fork the original repository through the GitHub&amp;nbsp;interface.&lt;/li&gt;
&lt;li&gt;On your machine, clone your&amp;nbsp;fork:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git clone git@github.com:username/reponame.git &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;reponame
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Make sure you&amp;#8217;ve&amp;nbsp;setup&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git config --global branch.autosetupmerge &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Add your upstream&amp;nbsp;repo:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git remote add upstream git://github.com/upstream_user/upstream_repo.git
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Fetch it and initialize any&amp;nbsp;submodules:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git fetch upstream &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git submodule update --init
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Check the current branch (&lt;code&gt;git branch&lt;/code&gt;, let&amp;#8217;s assume it&amp;#8217;s called
    &amp;#8220;develop&amp;#8221;) and rebase to its&amp;nbsp;upstream:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git rebase upstream/develop develop
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Create my &amp;#8220;jantman&amp;#8221; branch, which will be the upstream &amp;#8220;develop&amp;#8221;,
    plus my finished work merged into&amp;nbsp;it:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git checkout -b jantman origin/develop
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Create a topic branch to do some&amp;nbsp;work:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git checkout -b NewBranchName jantman
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Periodically, push the topic branch to&amp;nbsp;github:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git push origin NewBranchName
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;If you commit to this branch from another computer (or someone else
    commits to it), periodically update your local tracking&amp;nbsp;branch:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git pull origin NewBranchName
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Periodically, you want to pull in the upstream changes:&lt;ol&gt;
&lt;li&gt;switch to the develop&amp;nbsp;branch:&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git checkout develop
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;2.  grab the latest version of the upstream git repo:
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;git fetch upstream
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;3.  rebase develop to mirror the upstream develop branch:
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;git rebase upstream/develop develop
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;4.  switch to our personal branch:
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;git checkout jantman
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;5.  rebase our personal branch onto develop (pull all the new
    commits from develop into our personal branch):
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;git rebase develop jantman
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;6.  If we want those new upstream changes to continue down to our
    topic branches:
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;git rebase develop topicBranchName
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;When we&amp;#8217;re done with a topic branch, we want to merge it into our
    &amp;#8220;personal&amp;#8221;&amp;nbsp;branch:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git checkout jantman; git merge --squash node-table-facts
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&amp;lt;p&amp;gt;
and then commit:
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;git commit
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&amp;lt;p&amp;gt;
The `--squash` will squash all the history of that branch down to
one commit. This is generally easier for integration into upstream,
and assuming the topic branch was created for a single feature or
bug, should be logical.
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;If we&amp;#8217;re sure we don&amp;#8217;t need it anymore, delete the topic branch from
    our local&amp;nbsp;machine:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git branch -d topicBranchName
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&amp;lt;p&amp;gt;
and from github:
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;git push origin --delete topicBranchName
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Finally, make sure we push our &amp;#8220;personal&amp;#8221; branch back to&amp;nbsp;origin:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;git push origin jantman
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Assuming all went well, you&amp;#8217;ll see the new commit on github, and
    have a nice pull request&amp;nbsp;button.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://www.doctrine-project.org/contribute.html"&gt;Contribute —&amp;nbsp;Doctrine-Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://qsapp.com/wiki/Github"&gt;Github - Quicksilver&amp;nbsp;Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/carmaa/inception/wiki/Contributor-Workflow-with-Github"&gt;Contributor Workflow with Github · carmaa/inception&amp;nbsp;Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://help.github.com/fork-a-repo/"&gt;Help.GitHub - Fork A&amp;nbsp;Repo&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="foreman"></category><category term="git"></category><category term="github"></category><category term="workflow"></category></entry><entry><title>Easily comparing a bunch of files in one directory</title><link href="/2012/08/easily-comparing-a-bunch-of-files-in-one-directory/" rel="alternate"></link><updated>2012-08-10T09:50:00-04:00</updated><author><name>admin</name></author><id>tag:,2012-08-10:2012/08/easily-comparing-a-bunch-of-files-in-one-directory/</id><summary type="html">&lt;p&gt;So I pulled a specific configuration file (rsyslog.conf) off of a &lt;span class="caps"&gt;LOT&lt;/span&gt; of
hosts. I&amp;#8217;m going to be managing it with &lt;a href=""&gt;Puppet&lt;/a&gt;, but before I do, I
need to know what&amp;#8217;s out there already lest it get overwritten. I used
&lt;a href="http://code.google.com/p/parallel-ssh/"&gt;pssh&lt;/a&gt; with &lt;code&gt;cat&lt;/code&gt; and an output directory to grab the file from all 30
servers in question. Now, I&amp;#8217;ve got a directory with 30 files in it, and
I need to figure out how many different files (by contents) there are,
and which ones&amp;nbsp;differ.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;find . -type f -exec md5sum &lt;span class="s1"&gt;&amp;#39;{}&amp;#39;&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt; | sort | uniq -d -w 36
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will check the contents of each file by &lt;span class="caps"&gt;MD5&lt;/span&gt; checksum, and print out
the (lexographically) first file in each group, along with its &lt;span class="caps"&gt;MD5&lt;/span&gt; sum.
You can also strip off the uniq command, and see the list sorted by&amp;nbsp;md5.&lt;/p&gt;
&lt;p&gt;A &lt;span class="caps"&gt;GUI&lt;/span&gt; alternative would be to use &lt;a href="http://www.pixelbeat.org/fslint/"&gt;fslint&lt;/a&gt;, which is a graphical tool
that can (among other things) display a list of the duplicate files
within a path or set of&amp;nbsp;paths.&lt;/p&gt;</summary><category term="compare"></category><category term="diff"></category></entry><entry><title>Logging OpenSSH SFTP Transactions</title><link href="/2012/07/logging-openssh-sftp-transactions/" rel="alternate"></link><updated>2012-07-16T08:47:00-04:00</updated><author><name>admin</name></author><id>tag:,2012-07-16:2012/07/logging-openssh-sftp-transactions/</id><summary type="html">&lt;p&gt;I just came across a really handy post on &lt;a href="https://plus.google.com/117561367404774597588/posts"&gt;David Busby&lt;/a&gt;&amp;#8216;s blog:
&lt;a href="http://blog.oneiroi.co.uk/linux/enable-logging-in-the-sftp-subsystem/"&gt;Enable logging in the &lt;span class="caps"&gt;SFTP&lt;/span&gt; subsystem - Oneiroi&lt;/a&gt;. From OpenSSH 4.4 on,
you can pass arguments to Subsystem calls, and the sftp subsystem
supports logging to an aribtrary syslog facility and priority. Simply
adding a line&amp;nbsp;like:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;Subsystem       sftp    /usr/libexec/openssh/sftp-server -f LOCAL5 -l INFO
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and the appropriate lines to your syslog config will give you a handy
transfer log&amp;nbsp;like:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;Jul 16 09:22:25 hostname sftp-server[2058]: session opened for local user jantman from [A.B.C.D]
Jul 16 09:22:26 hostname sftp-server[2058]: open &amp;quot;/home/jantman/temp/sftp_test&amp;quot; flags WRITE,CREATE,TRUNCATE mode 0666
Jul 16 09:22:45 hostname sftp-server[2058]: close &amp;quot;/home/jantman/temp/sftp_test&amp;quot; bytes read 0 written 1464813
Jul 16 09:23:08 hostname sftp-server[2058]: session closed for local user jantman from [A.B.C.D]
Jul 16 09:27:50 hostname sftp-server[2309]: session opened for local user jantman from [A.B.C.D]
Jul 16 09:27:50 hostname sftp-server[2309]: open &amp;quot;/home/jantman/temp/sftp_test&amp;quot; flags READ mode 0666
Jul 16 09:27:54 hostname sftp-server[2309]: close &amp;quot;/home/jantman/temp/sftp_test&amp;quot; bytes read 1464813 written 0
Jul 16 09:27:54 hostname sftp-server[2309]: session closed for local user jantman from [A.B.C.D]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you have syslog write these logs to their own file, remember to setup
log rotation for&amp;nbsp;them.&lt;/p&gt;
&lt;p&gt;Unfortunately, I&amp;#8217;m not aware of any way to log &lt;span class="caps"&gt;SCP&lt;/span&gt; file&amp;nbsp;transfers.&lt;/p&gt;</summary><category term="logging"></category><category term="openssh"></category><category term="sftp"></category><category term="ssh"></category></entry><entry><title>Tools for watching apache httpd and memcached</title><link href="/2012/06/tools-for-watching-apache-httpd-and-memcached/" rel="alternate"></link><updated>2012-06-26T13:46:00-04:00</updated><author><name>admin</name></author><id>tag:,2012-06-26:2012/06/tools-for-watching-apache-httpd-and-memcached/</id><summary type="html">&lt;p&gt;Recently I was working on a code release on a site running &lt;span class="caps"&gt;PHP&lt;/span&gt; on
&lt;a href="http://httpd.apache.org/"&gt;Apache httpd&lt;/a&gt;, and using [&gt;memcached][]. Without getting into
specifics, we had a number of issues that were both Apache and memcached
problems, and little visibility into them as it was running on an older
server without much monitoring in place. I started looking around for
simple tools that could provide a bit more insight, without many
dependencies (as the machine is a relatively minimalist install). Here
are some of the options I&amp;nbsp;found:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://code.google.com/p/memcache-top/"&gt;memcache-top&lt;/a&gt; - A top-like script that pulls stats from memcached
    instances and can show both per-instance, total and average usage %,
    hit rate, number of connections, time to run the stats query,
    evictions, gets, sets, and read and write amounts. Best of all, it&amp;#8217;s
    a very small perl script that requires only &lt;span class="caps"&gt;IO&lt;/span&gt;::Socket and
    Time::HiRes. Here&amp;#8217;s a small example of the&amp;nbsp;output:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;memcache-top v0.6       (default port: 11211, color: on, refresh: 3 seconds)

INSTANCE                USAGE   HIT %   CONN    TIME    EVICT   GETS    SETS    READ    WRITE
127.0.0.1:11211         86.6%   99.4%   115     0.6ms   0.0     4114    1669    1.3M    24.2M
127.0.0.1:11212         85.5%   59.9%   2       0.4ms   0.0     0       0       90      8055

AVERAGE:                86.0%   79.6%   58      0.5ms   0.0     2057    834     682.4K  12.1M

TOTAL:          0.9GB/  1.0GB           117     1.0ms   0.0     4114    1669    1.3M    24.2M
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/dormando/damemtop"&gt;damemtop&lt;/a&gt; is also a nice top-like memcached tool. On the positive
    side, you can specify any column from &amp;#8220;stats&amp;#8221;, &amp;#8220;stats items&amp;#8221; or
    &amp;#8220;stats slabs&amp;#8221; in the configuration file, and can choose between
    average or one-second snapshots for each column. On the down side,
    it requires the &lt;span class="caps"&gt;YAML&lt;/span&gt; and AnyEvent Perl modules, so it has some
    uncommon&amp;nbsp;dependencies.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;damemtop: Tue Jun 26 14:02:24 2012 [sort: hostname asc] [delay: 3s]
hostname           all_version  all_fill_rate  hit_rate  evictions  curr_items  curr_connections   cmd_get  cmd_set  bytes_written  bytes_read  get_hits  get_misses  
TOTAL:             
NA                 NA           NA             NA        NA         NA          NA                 87       32       491,735        30,894      86        1           
AVERAGE:           
NA                 NA           86.00%         99.00%    NA         NA          NA                 43       16       122,933        7,723       43        1           
10.200.1.78:11211  1.2.6        86.63%         98.04%    0          0           -1.00204024880524  51       19       386,492        21,613      50        1           
10.200.1.78:11212  1.2.6        85.46%         NA        0          0           0                  0        0        11,373         31          0         0           
10.200.1.79:11211  1.2.6        87.31%         100.00%   0          0           -1.00204024880524  36       13       82,479         9,219       36        0           
10.200.1.79:11212  1.2.6        85.08%         NA        0          0           0                  0        0        11,389         31          0         0           
loop took: 0.305617094039917
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;#8217;m still looking around for something for apache that uses mod_status
and isn&amp;#8217;t too verbose; ideally I&amp;#8217;d like to be able to watch memcached,
apache response codes/times, and apache mod_status all in the same
terminal&amp;nbsp;window.&lt;/p&gt;</summary><category term="apache"></category><category term="memcached"></category><category term="perl"></category><category term="top"></category><category term="troubleshooting"></category></entry><entry><title>Emacs Mode Variable for HTML</title><link href="/2012/06/emacs-mode-variable-for-html/" rel="alternate"></link><updated>2012-06-26T08:43:00-04:00</updated><author><name>admin</name></author><id>tag:,2012-06-26:2012/06/emacs-mode-variable-for-html/</id><summary type="html">&lt;p&gt;Unfortunately, I often find myself editing files that are mixed &lt;span class="caps"&gt;PHP&lt;/span&gt; and
&lt;span class="caps"&gt;HTML&lt;/span&gt;, and ending with a &amp;#8220;.php&amp;#8221; extension. For most smaller
projects/tasks, I use &lt;a href="http://www.gnu.org/software/emacs/"&gt;emacs&lt;/a&gt; at the command line (nox) and my .emacs
settings for &lt;a href="http://php-mode.sourceforge.net/"&gt;php-mode&lt;/a&gt; will latch onto the &amp;#8220;.php&amp;#8221; extension and open
it with &lt;span class="caps"&gt;PHP&lt;/span&gt; mode. Unfortunately, &lt;span class="caps"&gt;PHP&lt;/span&gt; mode really doesn&amp;#8217;t like embedded
&lt;span class="caps"&gt;HTML&lt;/span&gt; (let alone mostly &lt;span class="caps"&gt;HTML&lt;/span&gt; with some inline &lt;span class="caps"&gt;PHP&lt;/span&gt;), and the indentation
gets very messy, among other&amp;nbsp;problems.&lt;/p&gt;
&lt;p&gt;The simple solution is to add the following (&lt;span class="caps"&gt;XHTML&lt;/span&gt; 1.0
Transitional-compliant) comment to the first line of the file, which
tells emacs to load&amp;nbsp;html-mode:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can also get emacs to do this for you, as per the &lt;a href="http://www.gnu.org/software/emacs/manual/html_node/emacs/Specifying-File-Variables.html"&gt;Specifying File
Variables&lt;/a&gt; documentation page. Once in html-mode, simply &lt;tt&gt;M-x
add-file-local-variable-prop-line&lt;/a&gt;, enter "mode" for the variable
name and use the default of the current&amp;nbsp;mode.&lt;/p&gt;</summary><category term="emacs"></category><category term="html. php"></category></entry><entry><title>Apache httpd - logging for sites with and without load balancing</title><link href="/2012/05/apache-httpd-logging-for-sites-with-and-without-load-balancing/" rel="alternate"></link><updated>2012-05-30T09:46:00-04:00</updated><author><name>admin</name></author><id>tag:,2012-05-30:2012/05/apache-httpd-logging-for-sites-with-and-without-load-balancing/</id><summary type="html">&lt;p&gt;There are a few unfortunate places where I have an Apache httpd server
serving multiple vhosts, some behind a F5 BigIp load balancer and some
with direct traffic. For sites behind the &lt;span class="caps"&gt;LB&lt;/span&gt;, the remote &lt;span class="caps"&gt;IP&lt;/span&gt;/host will
always show up as the &lt;span class="caps"&gt;LB&lt;/span&gt;&amp;#8217;s &lt;span class="caps"&gt;IP&lt;/span&gt;/host, not that of the actual client. Using
the default configuration with LogFormat directives in &lt;code&gt;httpd.conf&lt;/code&gt;,
this means that either we need to define log formats per-vhost or lose
the client &lt;span class="caps"&gt;IP&lt;/span&gt; in one of our scenarios (&lt;span class="caps"&gt;LB&lt;/span&gt; or no&amp;nbsp;&lt;span class="caps"&gt;LB&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;I came by a simple solution to this on &lt;a href="http://www.maretmanu.org/homepage/inform/apache-forwarded.php"&gt;Emmanuel Chantréau&lt;/a&gt;&amp;#8216;s blog,
and here is my condensed version of it. It sets an environment variable
(&amp;#8220;bigip-request&amp;#8221;) if the BIOrigClientAddr request header is set (this
header holds the client&amp;#8217;s &lt;span class="caps"&gt;IP&lt;/span&gt;; it&amp;#8217;s the BigIp proprietary version of the
X-Forwarded-For header. You could easily substitute that more standard
header in the following snippet) and then sets the &amp;#8220;combined&amp;#8221; LogFormat
based on that variable - a version using BIOrigClientAddr if it is set,
and a version using the normal &amp;#8220;%h&amp;#8221; remote host&amp;nbsp;otherwise.&lt;/p&gt;
&lt;p&gt;In&amp;nbsp;httpd.conf:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# set the &amp;quot;bigip-request&amp;quot; env variable to &amp;quot;1&amp;quot; if there is a BIOrigClientAddr header in the request                                                                                                   &lt;/span&gt;
&lt;span class="nb"&gt;SetEnvIf&lt;/span&gt; BIOrigClientAddr . bigip-request
&lt;span class="c"&gt;# we&amp;#39;ll use this following LogFormat (BIOrigClientAddr in place of remote host) as &amp;quot;combined&amp;quot; &lt;span class="caps"&gt;IF&lt;/span&gt; the bigip-request env variable is set                                                                     &lt;/span&gt;
&lt;span class="nb"&gt;LogFormat&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;%{BIOrigClientAddr}i %l %u %t %v \&amp;quot;%r\&amp;quot; %&amp;gt;s %b \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot;&amp;quot;&lt;/span&gt; combined_lb
&lt;span class="c"&gt;# else we&amp;#39;ll use this one (remote host &lt;span class="caps"&gt;IP&lt;/span&gt; address) as &amp;quot;combined&amp;quot; &lt;span class="caps"&gt;IF&lt;/span&gt; the bigip-request env variable is &lt;span class="caps"&gt;NOT&lt;/span&gt; set                                                                                   &lt;/span&gt;
&lt;span class="nb"&gt;LogFormat&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;%h %l %u %t %v \&amp;quot;%r\&amp;quot; %&amp;gt;s %b \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot;&amp;quot;&lt;/span&gt; combined
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And then in our vhost&amp;nbsp;configuration:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# use this log format if we&amp;#39;re behind an &lt;span class="caps"&gt;LB&lt;/span&gt;&lt;/span&gt;
&lt;span class="nb"&gt;CustomLog&lt;/span&gt; logs/&amp;lt;%= domain %&amp;gt;_access_log combined env=!bigip-request
&lt;span class="c"&gt;# or this format if we&amp;#39;re not&lt;/span&gt;
&lt;span class="nb"&gt;CustomLog&lt;/span&gt; logs/&amp;lt;%= domain %&amp;gt;_access_log combined_lb env=bigip-request
&lt;/pre&gt;&lt;/div&gt;</summary><category term="apache"></category><category term="bigip"></category><category term="f5"></category><category term="httpd"></category><category term="load balancer"></category><category term="logging"></category></entry><entry><title>Creating RPMs from Perl CPAN Modules</title><link href="/2012/05/creating-rpms-from-perl-cpan-modules/" rel="alternate"></link><updated>2012-05-15T15:01:00-04:00</updated><author><name>admin</name></author><id>tag:,2012-05-15:2012/05/creating-rpms-from-perl-cpan-modules/</id><summary type="html">&lt;p&gt;I try my absolute best to always install software on my Linux boxes as
&lt;a href="http://en.wikipedia.org/wiki/RPM_Package_Manager"&gt;&lt;span class="caps"&gt;RPM&lt;/span&gt;&lt;/a&gt;s, installed through &lt;a href="http://yum.baseurl.org/"&gt;Yum&lt;/a&gt; (yes, I use &lt;a href="http://www.centos.org"&gt;CentOS&lt;/a&gt; on servers
and &lt;a href="http://fedoraproject.org/"&gt;Fedora&lt;/a&gt; on my desktops/laptops). Not only is this more-or-less
required to sanely manage configuration through Puppet, but it also lets
me recreate a machine, or install dependencies for something, in one
simple command line. Unfortunately, I run quite a bit of Perl code, and
there are a lot of &lt;a href="http://www.cpan.org/"&gt;&lt;span class="caps"&gt;CPAN&lt;/span&gt;&lt;/a&gt; Perl modules that aren&amp;#8217;t in any of the usual
CentOS/Fedora&amp;nbsp;repositories.&lt;/p&gt;
&lt;p&gt;Enter cpan2rpm: a Perl script that, in its simplest invocation,
downloads a specified &lt;span class="caps"&gt;CPAN&lt;/span&gt; module and automatically builds RPMs and
SRPMs for it. The &lt;a href="http://perl.arix.com/cpan2rpm/"&gt;original version&lt;/a&gt; by &lt;a href="http://www.arix.com/ec/"&gt;Erick Calder&lt;/a&gt; hasn&amp;#8217;t been
touched since 2005, but there&amp;#8217;s &lt;a href="http://www.mediaburst.co.uk/blog/creating-perl-module-rpms/"&gt;a newer version from Mediaburst&lt;/a&gt;,
&lt;a href="http://www2.mbstatic.co.uk/wp-content/uploads/2009/09/cpan2rpmmb"&gt;cpan2rpmmb&lt;/a&gt;, that seems to incorporate some nice improvements and
worked quite well for&amp;nbsp;me.&lt;/p&gt;</summary><category term="cpan"></category><category term="cpan2rpm"></category><category term="perl"></category><category term="rpm"></category><category term="yum"></category></entry><entry><title>Adjusting the VirtualBox F12 BIOS Boot Prompt Timeout</title><link href="/2012/04/adjusting-the-virtualbox-f12-bios-boot-prompt-timeout/" rel="alternate"></link><updated>2012-04-09T13:52:00-04:00</updated><author><name>admin</name></author><id>tag:,2012-04-09:2012/04/adjusting-the-virtualbox-f12-bios-boot-prompt-timeout/</id><summary type="html">&lt;p&gt;I&amp;#8217;m working from home today, connected by &lt;span class="caps"&gt;VPN&lt;/span&gt;. I&amp;#8217;m in the process of
testing a bunch of Puppet stuff, and needed to re-image a bunch of
&lt;a href="https://www.virtualbox.org/"&gt;VirtualBox&lt;/a&gt; VMs on my desktop at work, using &lt;span class="caps"&gt;PXE&lt;/span&gt; boot to &lt;a href="https://fedorahosted.org/cobbler/"&gt;Cobbler&lt;/a&gt;.
I&amp;#8217;m only connected to the desktop by &lt;span class="caps"&gt;SSH&lt;/span&gt;, and running the VMs with
&lt;code&gt;VBoxHeadless&lt;/code&gt; and connecting to them via &lt;span class="caps"&gt;RDP&lt;/span&gt; (well, &lt;span class="caps"&gt;VRDP&lt;/span&gt;). The problem
with this is that if I start a &lt;span class="caps"&gt;VM&lt;/span&gt; on my console window, then switch to
my &lt;span class="caps"&gt;RDP&lt;/span&gt; client and connect, by the time the &lt;span class="caps"&gt;VM&lt;/span&gt; gets keyboard focus, it&amp;#8217;s
already past the VBox &amp;#8220;Press F12 to select boot device&amp;#8221; prompt and
booting from disk. I could modify the boot order on the &lt;span class="caps"&gt;VM&lt;/span&gt;, but then
that becomes a pain when it reboots after the&amp;nbsp;install.&lt;/p&gt;
&lt;p&gt;Thanks to some of the guys on the &lt;a href="https://www.virtualbox.org/wiki/IRC"&gt;VirtualBox &lt;span class="caps"&gt;IRC&lt;/span&gt; channel&lt;/a&gt;, I found
out about the &lt;code&gt;--bioslogodisplaytime&lt;/code&gt; option for VMs, which controls the
length of time (in milliseconds) that the boot splash screen is shown
(the default value seems to be 0). It&amp;#8217;s included in the &lt;a href="http://www.virtualbox.org/manual/ch08.html#vboxmanage-modifyvm"&gt;reference guide
to VBoxManage&lt;/a&gt; in the modifyvm section. Setting this to a value of 10
seconds or so, as shown below, is more than enough for me to start the
&lt;span class="caps"&gt;VM&lt;/span&gt;, Alt-Tab to my &lt;span class="caps"&gt;RDP&lt;/span&gt; client, connect to the &lt;span class="caps"&gt;VM&lt;/span&gt;, and hit &amp;#8216;F12&amp;#8217; to select
a one-time network&amp;nbsp;boot:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;VBoxManage modifyvm VMNAME --bioslogodisplaytime 10000
&lt;/pre&gt;&lt;/div&gt;</summary><category term="provisioning"></category><category term="pxe"></category><category term="rdp"></category><category term="sysadmin"></category><category term="vbox"></category><category term="virtualbox"></category><category term="virtualization"></category><category term="vm"></category></entry><entry><title>Adding Piwik Web Analytics Integration to ViewVC</title><link href="/2012/03/adding-piwik-web-analytics-integration-to-viewvc/" rel="alternate"></link><updated>2012-03-23T21:15:00-04:00</updated><author><name>admin</name></author><id>tag:,2012-03-23:2012/03/adding-piwik-web-analytics-integration-to-viewvc/</id><summary type="html">&lt;p&gt;All of my public &lt;a href="http://viewvc.jasonantman.com"&gt;subversion repositories&lt;/a&gt; and &lt;a href="http://cvs.jasonantman.com"&gt;&lt;span class="caps"&gt;CVS&lt;/span&gt; repositories&lt;/a&gt;
are available online through a great Python application called
&lt;a href="http://viewvc.org/"&gt;ViewVC&lt;/a&gt;, which provides a web-based interface to &lt;span class="caps"&gt;CVS&lt;/span&gt; and &lt;span class="caps"&gt;SVN&lt;/span&gt;
repositories, as well as history browsing, graphical diffs, etc. An
amazingly large amount of the traffic to my web server is for the vhosts
that serve this, so I decided that I should add some analytics to it.
I&amp;#8217;m in the process of trying out &lt;a href="http://piwik.org"&gt;Piwik&lt;/a&gt;, a full-featured,
&lt;span class="caps"&gt;GPL&lt;/span&gt;-licensed, self-hosted alternative to &lt;a href="http://www.google.com/analytics/"&gt;Google Analytics&lt;/a&gt;. It gives
lots of useful information like number of visits and unique visits per
page, search engine keywords, referrers, average time on page, bounce
rate (number of one-page visits),&amp;nbsp;etc.&lt;/p&gt;
&lt;p&gt;I have ViewVC installed from the &lt;a href="http://pkgs.repoforge.org/viewvc/"&gt;RPMforge packages&lt;/a&gt;, so there&amp;#8217;s one
code base for both of my vhosts. This means that I can&amp;#8217;t simply slap the
tracking code at the bottom of the templates and call it a day. I opted
to go for a nicer solution, and what follows is a patch (diff -u) to the
current (1.1.13) version of ViewVC that adds a &amp;#8220;piwik&amp;#8221; section to
viewvc.conf, and adds the piwik tracking code with the specified base
&lt;span class="caps"&gt;URL&lt;/span&gt; and site &lt;span class="caps"&gt;ID&lt;/span&gt; into all ViewVC pages.&amp;nbsp;Enjoy.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gh"&gt;diff -ru viewvc-&lt;span class="caps"&gt;ORIG&lt;/span&gt;/lib/config.py viewvc/lib/config.py&lt;/span&gt;
&lt;span class="gd"&gt;--- viewvc-&lt;span class="caps"&gt;ORIG&lt;/span&gt;/lib/config.py   2012-01-25 08:31:52.000000000 -0500&lt;/span&gt;
&lt;span class="gi"&gt;+++ viewvc/lib/config.py    2012-03-23 21:57:08.000000000 -0400&lt;/span&gt;
&lt;span class="gu"&gt;@@ -108,6 +108,7 @@&lt;/span&gt;
     &amp;#39;query&amp;#39;,
     &amp;#39;templates&amp;#39;,
     &amp;#39;utilities&amp;#39;,
&lt;span class="gi"&gt;+    &amp;#39;piwik&amp;#39;,&lt;/span&gt;
     )
   _force_multi_value = (
     # Configuration values with multiple, comma-separated values.
&lt;span class="gu"&gt;@@ -127,6 +128,7 @@&lt;/span&gt;
                &amp;#39;options&amp;#39;,
                &amp;#39;templates&amp;#39;,
                &amp;#39;utilities&amp;#39;,
&lt;span class="gi"&gt;+               &amp;#39;piwik&amp;#39;,&lt;/span&gt;
                ),
     &amp;#39;root&amp;#39;  : (&amp;#39;authz-*&amp;#39;,
                &amp;#39;options&amp;#39;,
&lt;span class="gu"&gt;@@ -461,7 +463,14 @@&lt;/span&gt;
     self.cvsdb.check_database_for_root = 0

     self.query.viewvc_base_url = None
&lt;span class="gd"&gt;-    &lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+    # begin  patch for piwik integration&lt;/span&gt;
&lt;span class="gi"&gt;+    self.piwik.use_piwik = 0&lt;/span&gt;
&lt;span class="gi"&gt;+    self.piwik.base_url = &amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="gi"&gt;+    self.piwik.site_id = &amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="gi"&gt;+    self.piwik.use_jsindex = 0&lt;/span&gt;
&lt;span class="gi"&gt;+    # end  patch for piwik integration&lt;/span&gt;
&lt;span class="gi"&gt;+   &lt;/span&gt;
 def _startswith(somestr, substr):
   return somestr[:len(substr)] == substr

&lt;span class="gh"&gt;diff -ru viewvc-&lt;span class="caps"&gt;ORIG&lt;/span&gt;/templates/include/footer.ezt viewvc/templates/include/footer.ezt&lt;/span&gt;
&lt;span class="gd"&gt;--- viewvc-&lt;span class="caps"&gt;ORIG&lt;/span&gt;/templates/include/footer.ezt    2012-01-25 08:31:52.000000000 -0500&lt;/span&gt;
&lt;span class="gi"&gt;+++ viewvc/templates/include/footer.ezt 2012-03-23 22:03:04.000000000 -0400&lt;/span&gt;
&lt;span class="gu"&gt;@@ -13,5 +13,17 @@&lt;/span&gt;



&lt;span class="gi"&gt;+[is cfg.piwik.use_piwik &amp;quot;1&amp;quot;]&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+var pkBaseURL = ((&amp;quot;https:&amp;quot; == document.location.protocol) ? &amp;quot;https://[cfg.piwik.base_url]/&amp;quot; : &amp;quot;http://[cfg.piwik.base_url]/&amp;quot;);&lt;/span&gt;
&lt;span class="gi"&gt;+document.write(unescape(&amp;quot;%3Cscript src=&amp;#39;&amp;quot; + pkBaseURL + &amp;quot;[is cfg.piwik.use_jsindex &amp;quot;1&amp;quot;]js/[else]piwik.js[end]&amp;#39; type=&amp;#39;text/javascript&amp;#39;%3E%3C/script%3E&amp;quot;));&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+try {&lt;/span&gt;
&lt;span class="gi"&gt;+var piwikTracker = Piwik.getTracker(pkBaseURL + &amp;quot;piwik.php&amp;quot;, [cfg.piwik.site_id]);&lt;/span&gt;
&lt;span class="gi"&gt;+piwikTracker.trackPageView();&lt;/span&gt;
&lt;span class="gi"&gt;+piwikTracker.enableLinkTracking();&lt;/span&gt;
&lt;span class="gi"&gt;+} catch( err ) {}&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+[else][end]&lt;/span&gt;


Only in viewvc-&lt;span class="caps"&gt;ORIG&lt;/span&gt;/templates/include: header.ezt~
&lt;span class="gh"&gt;diff -ru viewvc-&lt;span class="caps"&gt;ORIG&lt;/span&gt;/viewvc.conf.dist viewvc/viewvc.conf.dist&lt;/span&gt;
&lt;span class="gd"&gt;--- viewvc-&lt;span class="caps"&gt;ORIG&lt;/span&gt;/viewvc.conf.dist    2012-01-25 08:31:52.000000000 -0500&lt;/span&gt;
&lt;span class="gi"&gt;+++ viewvc/viewvc.conf.dist 2012-03-23 21:44:02.000000000 -0400&lt;/span&gt;
&lt;span class="gu"&gt;@@ -1131,3 +1131,29 @@&lt;/span&gt;
 #viewvc_base_url =

 ##---------------------------------------------------------------------------
&lt;span class="gi"&gt;+[piwik]&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+## This section enables Piwik  web analytics tracking.&lt;/span&gt;
&lt;span class="gi"&gt;+## If piwik is enabled (use_piwik = 1) all other options must be specified.&lt;/span&gt;
&lt;span class="gi"&gt;+##&lt;/span&gt;
&lt;span class="gi"&gt;+## This is based on a patch by Jason Antman  &lt;/span&gt;
&lt;span class="gi"&gt;+## to ViewVC 1.1.13, written 2012-03-23.&lt;/span&gt;
&lt;span class="gi"&gt;+## The latest version of the patch, and information on it, can always be found at:&lt;/span&gt;
&lt;span class="gi"&gt;+## &lt;/span&gt;
&lt;span class="gi"&gt;+##&lt;/span&gt;
&lt;span class="gi"&gt;+##&lt;/span&gt;
&lt;span class="gi"&gt;+## To enable piwik, change use_piwik to 1. Set to 0 to disable&lt;/span&gt;
&lt;span class="gi"&gt;+use_piwik = 1&lt;/span&gt;
&lt;span class="gi"&gt;+##&lt;/span&gt;
&lt;span class="gi"&gt;+## Set base_url to the hostname and path to your piwik installation, with no trailing slash.&lt;/span&gt;
&lt;span class="gi"&gt;+## i.e. piwik.example.com or www.example.com/piwik&lt;/span&gt;
&lt;span class="gi"&gt;+base_url = piwik.example.com&lt;/span&gt;
&lt;span class="gi"&gt;+##&lt;/span&gt;
&lt;span class="gi"&gt;+## Set to the numeric id of your website in Piwik&lt;/span&gt;
&lt;span class="gi"&gt;+site_id = 5&lt;/span&gt;
&lt;span class="gi"&gt;+##&lt;/span&gt;
&lt;span class="gi"&gt;+## Set to 1 if you want to use js/index.php to serve the tracking code, &lt;/span&gt;
&lt;span class="gi"&gt;+## or leave at 0 if you want to call piwik.js directly&lt;/span&gt;
&lt;span class="gi"&gt;+use_jsindex = 0&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+##---------------------------------------------------------------------------&lt;/span&gt;
\ No newline at end of file
&lt;/pre&gt;&lt;/div&gt;</summary><category term="analytics"></category><category term="piwik"></category><category term="python"></category><category term="subversion"></category><category term="svn"></category><category term="tracking"></category><category term="viewvc"></category></entry><entry><title>MediaWiki - Preformatted Text within Lists</title><link href="/2012/03/mediawiki-preformatted-text-within-lists/" rel="alternate"></link><updated>2012-03-15T18:10:00-04:00</updated><author><name>admin</name></author><id>tag:,2012-03-15:2012/03/mediawiki-preformatted-text-within-lists/</id><summary type="html">&lt;p&gt;As I discovered this morning, with &lt;a href="http://www.mediawiki.org"&gt;MediaWiki&lt;/a&gt; 1.5.7+, if you attempt
to put a &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; wraped block of code within a numbered list, the
indentation breaks and the numbering starts over after the &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;
block. This was pretty annoying, as I was trying to document a procedure
including the commands to be run and their explanation. It took a few
minutes, but I found the solution in the &lt;a href="http://meta.wikimedia.org/wiki/Help:Editing_FAQ#Q:_Can_I_put_preformatted_text_inside_a_numbered_list.3F"&gt;wikimedia Help:Editing &lt;span class="caps"&gt;FAQ&lt;/span&gt;&lt;/a&gt;
page, thanks to &lt;a href="http://meta.wikimedia.org/wiki/User:Rompe"&gt;Ulf Rompe&lt;/a&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;# one
# two
#:
#:here are a couple lines
#:of preformatted text
#:
# and the numbering
# continues
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The code lines are indented a bit more than what looks right, but it&amp;nbsp;works.&lt;/p&gt;</summary><category term="formatting"></category><category term="mediawiki"></category><category term="wiki"></category></entry><entry><title>Meld - Graphical Diff Tool for SVN Directories</title><link href="/2012/03/meld-graphical-diff-tool-for-svn-directories/" rel="alternate"></link><updated>2012-03-12T09:48:00-04:00</updated><author><name>admin</name></author><id>tag:,2012-03-12:2012/03/meld-graphical-diff-tool-for-svn-directories/</id><summary type="html">&lt;p&gt;I&amp;#8217;ve been in the process of manually merging two directories in a
subversion repo. The second started out as a &amp;#8220;development&amp;#8221; copy of the
first (without branching, unfortunately). Since there&amp;#8217;s quite a few
files, I decided that a graphical diff program is a must. I usually use
&lt;a href="http://kdiff3.sourceforge.net"&gt;kdiff3&lt;/a&gt;, but my requirements for this are a bit more stringent than
usual: it has to handle recursive diffs on two directories, and it has
to be able to ignore &lt;span class="caps"&gt;SVN&lt;/span&gt; keywords (or an arbitrary regex) since all of
the files have keyword substitution on LastChangedRevision and HeadURL.
Kdiff3 supports &lt;a href="http://kdiff3.sourceforge.net/doc/preprocessors.html"&gt;preprocessor commands&lt;/a&gt; which can include filtering
the text through sed before performing the diff (so I modified their
regex to ignore version control keywords), but for some reason (perhaps
either bimary differences, or metadata differences) I couldn&amp;#8217;t get the
file difference indicator in the diretory tree view to reflect this;
even when ignoring keyword lines and whitespace, it still showed every
pair of files as&amp;nbsp;different.&lt;/p&gt;
&lt;p&gt;Enter &lt;a href="http://meldmerge.org/"&gt;Meld&lt;/a&gt;, a graphical diff project. I&amp;#8217;ve only used it for half an
hour or so, but it seems wonderful. It&amp;#8217;s easy to use, has a pleasing
interface similar to &lt;a href="http://www.caffeinated.me.uk/kompare/"&gt;Kompare&lt;/a&gt;, and even has simple check boxes in the
options menu to ignore whitespace and &lt;span class="caps"&gt;SVN&lt;/span&gt; keywords - and they work! So
far, I&amp;#8217;m about half way through my 300+ file tree, and the merge is
going&amp;nbsp;wonderfully.&lt;/p&gt;</summary><category term="diff"></category><category term="kde"></category><category term="kdiff"></category><category term="meld"></category><category term="merge"></category><category term="subversion"></category><category term="svn"></category></entry><entry><title>Using VirtualBox Remotely</title><link href="/2012/03/using-virtualbox-remotely/" rel="alternate"></link><updated>2012-03-09T12:00:00-05:00</updated><author><name>admin</name></author><id>tag:,2012-03-09:2012/03/using-virtualbox-remotely/</id><summary type="html">&lt;p&gt;At work, I have a pretty beefy workstation (a Dell OptiPlex 990 with a
3.4GHz Intel Core i7-2600 and &lt;span class="caps"&gt;8GB&lt;/span&gt; &lt;span class="caps"&gt;RAM&lt;/span&gt; running Fedora 16) that I usually
run a few VMs on as my test/development environment. I usually reboot my
machine every other week or so, and start VirtualBox and my VMs once the
system boots. All of the VMs are Linux boxes, running test-only, so I
never really cared about &lt;span class="caps"&gt;RDP&lt;/span&gt; or anything like that. Today I&amp;#8217;m working
from home and need to setup a new development environment, so here&amp;#8217;s how
to get VirtualBox working nicely assuming you&amp;#8217;ve never set it up for
&lt;span class="caps"&gt;VRDP&lt;/span&gt; (its Virtual Remote Desktop Protocol) before, and have a network
connection (&lt;span class="caps"&gt;LAN&lt;/span&gt; or &lt;span class="caps"&gt;VPN&lt;/span&gt; or something) to the machine running VirtualBox.
I currently have VirtualBox &lt;span class="caps"&gt;OSE&lt;/span&gt; 4.1.8 installed from [rpmfusion][] &lt;span class="caps"&gt;RPM&lt;/span&gt;.
Most of this can be found in [Chapter 7 of the VirtualBox manual][], but
here&amp;#8217;s a step-by-step&amp;nbsp;method.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
First, download the Oracle (non-free) Oracle VirtualBox &lt;span class="caps"&gt;VM&lt;/span&gt; Extension
Pack tarball from the [VirtualBox Downloads Page][], which provides &lt;span class="caps"&gt;VRDP&lt;/span&gt;
support (as well as support for the virtual &lt;span class="caps"&gt;USB&lt;/span&gt; 2.0 device, Intel &lt;span class="caps"&gt;PXE&lt;/span&gt;
Boot &lt;span class="caps"&gt;ROM&lt;/span&gt; support for the E1000 &lt;span class="caps"&gt;NIC&lt;/span&gt; driver, and experimental Linux host
&lt;span class="caps"&gt;PCI&lt;/span&gt; passthrough suport). Then install it using:&amp;nbsp;wzxhzdk:0


&lt;/li&gt;
&lt;li&gt;
Assuming you have an existing &lt;span class="caps"&gt;VM&lt;/span&gt; (you can list them using
`VBoxManage list vms`), enable &lt;span class="caps"&gt;VRDP&lt;/span&gt; support on it:&amp;nbsp;wzxhzdk:1


&lt;/li&gt;
&lt;li&gt;
I like to assign specific ports to &lt;span class="caps"&gt;VRDP&lt;/span&gt; on each &lt;span class="caps"&gt;VM&lt;/span&gt; so I can &amp;#8220;bookmark&amp;#8221;
them in my [&lt;span class="caps"&gt;KRDC&lt;/span&gt;][] client by &lt;span class="caps"&gt;VM&lt;/span&gt; name. I generally start with 10011, as
the 10011-10049 range is both unassigned and doesn&amp;#8217;t appear in my
`/etc/services`:&amp;nbsp;wzxhzdk:2


&lt;/li&gt;
&lt;li&gt;
Start the &lt;span class="caps"&gt;VM&lt;/span&gt;, using VBoxHeadless (shows more debugging/errors, but also
stays in the foreground, so you&amp;#8217;ll want to use [screen][] or something
like it):


wzxhzdk:3


If all went well, it should show some output including a confirmation
that the &lt;span class="caps"&gt;VRDE&lt;/span&gt; server is running on the correct port:&amp;nbsp;wzxhzdk:4


&lt;/li&gt;
&lt;/ul&gt;
That&amp;#8217;s it. Assuming you&amp;#8217;re using something like [screen][], you can
start a whole bunch of new VMs, and still keep the VBoxHeadless output
in case of an error.

  [rpmfusion]: http://nonfree.rpmfusion.org/
  [Chapter 7 of the VirtualBox manual]: http://www.virtualbox.org/manual/ch07.html
  [VirtualBox Downloads Page]: https://www.virtualbox.org/wiki/Downloads
  [&lt;span class="caps"&gt;KRDC&lt;/span&gt;]: http://kde.org/applications/internet/krdc/
  [screen]:&amp;nbsp;http://www.gnu.org/software/screen/</summary><category term="rdp"></category><category term="virtualbox"></category><category term="virtualization"></category><category term="vm"></category></entry><entry><title>VMWare vSphere CLI and Perl SDK as an RPM</title><link href="/2012/02/vmware-vsphere-cli-and-perl-sdk-as-an-rpm/" rel="alternate"></link><updated>2012-02-28T19:01:00-05:00</updated><author><name>admin</name></author><id>tag:,2012-02-28:2012/02/vmware-vsphere-cli-and-perl-sdk-as-an-rpm/</id><summary type="html">&lt;p&gt;Lately I&amp;#8217;ve been playing around with the VMWare &lt;a href="http://www.vmware.com/support/developer/viperltoolkit/"&gt;vSphere &lt;span class="caps"&gt;SDK&lt;/span&gt; for
Perl&lt;/a&gt;, since the new job uses a bunch of VMWare stuff (and I&amp;#8217;ve been
starting my foray into Perl as a new language, and am amazed by the
&lt;a href="http://www.cpan.org/"&gt;massive number&lt;/a&gt; of modules out there). As much as I find [&lt;code&gt;yum&lt;/code&gt;][]
limiting having used [&lt;code&gt;zypper&lt;/code&gt;][] on OpenSuSE, I&amp;#8217;m not much of a fan of
non-natively-packaged software. Not only is it more difficult to
maintain and upgrade a system and nearly impossible to nicely automate
when building from source (or a proprietary installer script), it&amp;#8217;s also
much more difficult to transition from a development environment to&amp;nbsp;production.&lt;/p&gt;
&lt;p&gt;In a quick search, I found a perfectly working spec file and some
&lt;span class="caps"&gt;RHEL&lt;/span&gt;/Cent-specific patches (and even beginner-level &lt;code&gt;rpmbuild&lt;/code&gt;
instructions) for the current 5.0.0-422456 VMWare &lt;span class="caps"&gt;CLI&lt;/span&gt; and Perl &lt;span class="caps"&gt;SDK&lt;/span&gt; for
x86_64 at
&lt;a href=""&gt;http://www.firetooth.net/confluence/display/public/vSphere+Perl+&lt;span class="caps"&gt;SDK&lt;/span&gt;+and+&lt;span class="caps"&gt;CLI&lt;/span&gt;+&lt;span class="caps"&gt;RPM&lt;/span&gt;+Packages&lt;/a&gt;.
Many thanks to &lt;a href="http://www.linkedin.com/in/vwhitteron"&gt;Vaughan Whitteron&lt;/a&gt; of &lt;span class="caps"&gt;NSW&lt;/span&gt; in Australia for posting
this! It built and installed without any problems on my Fedora 16
desktop, and a CentOS 6.2 development&amp;nbsp;box.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;http://www.firetooth.net/confluence/display/public/vSphere+Perl+SDK+and+CLI+RPM+Packages
&lt;/pre&gt;&lt;/div&gt;</summary><category term="perl"></category><category term="rpm"></category><category term="vcli"></category><category term="vmware"></category><category term="vsphere"></category></entry><entry><title>F5 BigIp - Manually Changing Session Persistence Cookies on the Client Side</title><link href="/2012/02/f5-bigip-manually-changing-session-persistence-cookies-on-the-client-side/" rel="alternate"></link><updated>2012-02-03T13:32:00-05:00</updated><author><name>admin</name></author><id>tag:,2012-02-03:2012/02/f5-bigip-manually-changing-session-persistence-cookies-on-the-client-side/</id><summary type="html">&lt;p&gt;Yesterday I was asked to help out a bit debugging issues with a site
that sits behind a &lt;a href="http://www.f5.com/products/big-ip/"&gt;F5 &lt;span class="caps"&gt;BIG&lt;/span&gt;-&lt;span class="caps"&gt;IP&lt;/span&gt;&lt;/a&gt; load balancer (&lt;span class="caps"&gt;LB&lt;/span&gt;). It&amp;#8217;s a pretty
simple site, load balanced between two web servers. The developers were
complaining about intermittent page load issues, so I immediately
considered a problem with one of the two servers (&lt;em&gt;ass&lt;/em&gt;uming that the
devs were clearing cookies and cache between attempts). The &lt;span class="caps"&gt;LB&lt;/span&gt; is using
&lt;span class="caps"&gt;HTTP&lt;/span&gt; Cookies for client session persistence, but no matter how many
times I cleared my cookies, I kept being sent to the same back-end
server. I know I could have added an iRule to the &lt;span class="caps"&gt;LB&lt;/span&gt;, but it seems like
bad practice to change a production configuration for debugging
something like&amp;nbsp;this.&lt;/p&gt;
&lt;p&gt;If your site uses a BigIp with cookies for persistence, it&amp;#8217;s no problem
to edit the cookies manually to force yourself to another back-end
server. Simply look through the cookies for a given site using something
like the &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/web-developer/"&gt;Web Developer addon for Firefox&lt;/a&gt;; the BigIp cookie is named
like &amp;#8220;BigIpServer&amp;lt;poolname&gt;&amp;#8221;. The encoding information is specified by
F5 in their knowledge base &lt;a href="http://support.f5.com/kb/en-us/solutions/public/6000/900/sol6917.html"&gt;sol6917: Overview of &lt;span class="caps"&gt;BIG&lt;/span&gt;-&lt;span class="caps"&gt;IP&lt;/span&gt; persistence
cookie encoding&lt;/a&gt;. I also managed to find a Perl one-liner from Tyler
Krpata, Manger of Security Engineering at Constant Contact, &lt;a href="http://www.tylerkrpata.com/2009/06/decode-f5-bigip-cookie-in-one-line-of.html"&gt;in a post
on his blog&lt;/a&gt;. I built on that work to develop the following perl
script, which can both encode and decode BigIP cookie &lt;span class="caps"&gt;IP&lt;/span&gt;/port&amp;nbsp;values.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#!/usr/bin/perl&lt;/span&gt;

&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Perl script to de/encode F5 BigIp persistence cookies.&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# The latest version of this script can always be obtained from:&lt;/span&gt;
&lt;span class="c1"&gt;#    via &lt;span class="caps"&gt;HTTP&lt;/span&gt; ot &lt;span class="caps"&gt;SVN&lt;/span&gt;&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Update information and description can be found at:&lt;/span&gt;
&lt;span class="c1"&gt;#   &lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Copyright 2012 Jason Antman  .&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;#########################################################################################&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# &lt;span class="caps"&gt;LICENSE&lt;/span&gt;: AGPLv3 &lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;#    This program is free software: you can redistribute it and/or modify&lt;/span&gt;
&lt;span class="c1"&gt;#    it under the terms of the &lt;span class="caps"&gt;GNU&lt;/span&gt; Affero General Public License as published by&lt;/span&gt;
&lt;span class="c1"&gt;#    the Free Software Foundation, either version 3 of the License, or&lt;/span&gt;
&lt;span class="c1"&gt;#    (at your option) any later version.&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;#    This program is distributed in the hope that it will be useful,&lt;/span&gt;
&lt;span class="c1"&gt;#    but &lt;span class="caps"&gt;WITHOUT&lt;/span&gt; &lt;span class="caps"&gt;ANY&lt;/span&gt; &lt;span class="caps"&gt;WARRANTY&lt;/span&gt;; without even the implied warranty of&lt;/span&gt;
&lt;span class="c1"&gt;#    &lt;span class="caps"&gt;MERCHANTABILITY&lt;/span&gt; or &lt;span class="caps"&gt;FITNESS&lt;/span&gt; &lt;span class="caps"&gt;FOR&lt;/span&gt; A &lt;span class="caps"&gt;PARTICULAR&lt;/span&gt; &lt;span class="caps"&gt;PURPOSE&lt;/span&gt;.  See the&lt;/span&gt;
&lt;span class="c1"&gt;#    &lt;span class="caps"&gt;GNU&lt;/span&gt; Affero General Public License for more details.&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;#    You should have received a copy of the &lt;span class="caps"&gt;GNU&lt;/span&gt; Affero General Public License&lt;/span&gt;
&lt;span class="c1"&gt;#    along with this program.  If not, see .&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# If you make any modifications/fixes/feature additions, it would be greatly appreciated&lt;/span&gt;
&lt;span class="c1"&gt;# if you send them back to me at the above email address.&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;#########################################################################################&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# &lt;span class="caps"&gt;CREDITS&lt;/span&gt;:&lt;/span&gt;
&lt;span class="c1"&gt;# - F5 itself for the formula: &lt;/span&gt;
&lt;span class="c1"&gt;# - Tyler Krpata &lt;/span&gt;
&lt;span class="c1"&gt;#     for the Perl one-liner that this logic is based on.&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# $HeadURL: http://svn.jasonantman.com/misc-scripts/bigipcookie.pl $&lt;/span&gt;
&lt;span class="c1"&gt;# $LastChangedRevision: 27 $&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Changelog:&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# 2012-02-02 Jason Antman :&lt;/span&gt;
&lt;span class="c1"&gt;#   - initial version&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;

&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="n"&gt;strict&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="n"&gt;warnings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$#&lt;span class="caps"&gt;ARGV&lt;/span&gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;span class="caps"&gt;USAGE&lt;/span&gt;: bigipcookie.pl \n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$&lt;span class="caps"&gt;ARGV&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=~&lt;/span&gt; &lt;span class="sr"&gt;m/^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3}):(\d+)$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$ipEnc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$3&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$4&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$portEnc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;join&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;reverse&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;sprintf&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%04x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=~&lt;/span&gt;&lt;span class="sr"&gt; /../g&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$ipEnc.$portEnc.0000\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$&lt;span class="caps"&gt;ARGV&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=~&lt;/span&gt; &lt;span class="sr"&gt;m/^(\d+)\.(\d+)\.0000$/&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="c1"&gt;# decode a cookie value&lt;/span&gt;
    &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$ipEnc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$portEnc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;join&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;map&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nb"&gt;reverse&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;sprintf&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%08x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;split&lt;/span&gt; &lt;span class="sr"&gt;/\./&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ipEnc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=~&lt;/span&gt;&lt;span class="sr"&gt; /../g&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$portDec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;join&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;reverse&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;sprintf&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%04x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$portEnc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=~&lt;/span&gt;&lt;span class="sr"&gt; /../g&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$ip:$portDec\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;span class="caps"&gt;USAGE&lt;/span&gt;: bigipcookie.pl \n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;An example of the&amp;nbsp;usage:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;jantman@palantir:pts/8:~/bin/misc-scripts &amp;gt; ./bigipcookie.pl 192.168.23.50:80
840411328.20480.0000
jantman@palantir:pts/8:~/bin/misc-scripts &amp;gt; ./bigipcookie.pl 840411328.20480.0000
192.168.23.50:80
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On a side note for those of your who are security-conscious: yes, of
course, this means that if you&amp;#8217;re using BigIp with cookie persistence,
it is disclosing the internal &lt;span class="caps"&gt;IP&lt;/span&gt; and port of your server to your end&amp;nbsp;users.&lt;/p&gt;</summary><category term="bigip"></category><category term="cookies"></category><category term="debugging"></category><category term="f5"></category><category term="load balancer"></category><category term="perl"></category><category term="persistence"></category><category term="web app"></category></entry><entry><title>GNU Screen and Multiple Regions</title><link href="/2012/02/gnu-screen-and-multiple-regions/" rel="alternate"></link><updated>2012-02-03T09:13:00-05:00</updated><author><name>admin</name></author><id>tag:,2012-02-03:2012/02/gnu-screen-and-multiple-regions/</id><summary type="html">&lt;p&gt;Since I always seem to forget this wonderful feature of &lt;a href="http://www.gnu.org/software/screen/"&gt;&lt;span class="caps"&gt;GNU&lt;/span&gt; screen&lt;/a&gt;
(probably one of the pieces of software I use the most every&amp;nbsp;day)&amp;#8230;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To split the current region horizontally into two equal regions:
    &lt;code&gt;C-a S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To switch between those regions: &lt;code&gt;C-a Tab&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To close all regions but the current one: &lt;code&gt;C-a Q&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is absolutely invaluable for watching logs on multiple machines at&amp;nbsp;once.&lt;/p&gt;</summary><category term="console"></category><category term="screen"></category><category term="sysadmin"></category></entry><entry><title>Using Templates to Track Outdated Content in a Documentation MediaWiki</title><link href="/2012/02/using-templates-to-track-outdated-content-in-a-documentation-mediawiki/" rel="alternate"></link><updated>2012-02-02T11:02:00-05:00</updated><author><name>admin</name></author><id>tag:,2012-02-02:2012/02/using-templates-to-track-outdated-content-in-a-documentation-mediawiki/</id><summary type="html">&lt;p&gt;Both my last and current jobs use &lt;a href="http://www.mediawiki.org/"&gt;MediaWiki&lt;/a&gt; for internal
documentation. As always happens, some of this documentation will
inevitably get out-of-date, or totally deprecated. As is also the case,
many times when we&amp;#8217;re looking for docs in the middle of an incident, we
don&amp;#8217;t have the time to go back and fix what&amp;#8217;s wrong. So, I devised the
following template/category system to help keep track of these problem&amp;nbsp;pages.&lt;/p&gt;
&lt;p&gt;First, create some templates that you will apply to the problem pages. I
use three - one for totally deprecated pages, one for pages that need
updating, and one for pages that just need cleanup. For the cleanup
template, in the MediaWiki search box, enter &amp;#8220;Template:Cleanup&amp;#8221; and
click &amp;#8220;go&amp;#8221;. You should be told that the page doesn&amp;#8217;t exist, and given a
link to create the page. Create it, and enter the following&amp;nbsp;content:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;[[Image:Cleanup.png]]

&amp;#39;&amp;#39;&amp;#39;This page needs to be cleaned up or reorganized.&amp;#39;&amp;#39;&amp;#39;



[[Category:Pages Needing Cleanup]]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we create a category page for it, &amp;#8220;Category:Pages Needing Cleanup&amp;#8221;,
with the&amp;nbsp;content:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;__HIDDENCAT__

This category is for pages that are mostly correct and just need minor corrections or reorganization.

&amp;#39;&amp;#39;&amp;#39;To add pages to this category&amp;#39;&amp;#39;&amp;#39;, include the following at the &amp;#39;&amp;#39;&amp;#39;TOP&amp;#39;&amp;#39;&amp;#39; of the page:


{{cleanup}}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and save the&amp;nbsp;page.&lt;/p&gt;
&lt;p&gt;Now there&amp;#8217;s a few other changes we need to make. First, upload the
Cleanup.png graphic, which I got from wikimedia.org &lt;a href="http://upload.wikimedia.org/wikipedia/en/thumb/f/f2/Edit-clear.svg/40px-Edit-clear.svg.png"&gt;here&lt;/a&gt; and
uploaded as&amp;nbsp;Cleanup.png.&lt;/p&gt;
&lt;p&gt;If you refresh the Template:Cleanup page, you should now see the image.
On a side note, &amp;#8220;__HIDDENCAT__&amp;#8221; on the category page prevents that
category from showing up in the category list at the bottom of the pages
we add to it, but this only works in MediaWiki 1.13 and&amp;nbsp;up.&lt;/p&gt;
&lt;p&gt;The last step is to add the &lt;a href="http://www.mediawiki.org/wiki/Template:Mbox"&gt;MediaWiki mbox template&lt;/a&gt; and its
dependencies. While I did this once before, I didn&amp;#8217;t really remember the
steps, but I found a post on &lt;a href="http://glynor.com/2010/05/the-trouble-with-ambox-and-mbox/"&gt;Glynor&amp;#8217;s blog&lt;/a&gt; that details them rather&amp;nbsp;nicely:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Enable the &lt;a href="http://www.mediawiki.org/wiki/Extension:ParserFunctions"&gt;ParserFunctions extension&lt;/a&gt;. There are download and
    install instructions on the extension page, but you&amp;#8217;ll want to
    enable string functions. To do this, include the extension in
    LocalSettings.php&amp;nbsp;like:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="x"&gt;require_once( &amp;quot;$&lt;span class="caps"&gt;IP&lt;/span&gt;/extensions/ParserFunctions/ParserFunctions.php&amp;quot; );&lt;/span&gt;
&lt;span class="x"&gt;$wgPFEnableStringFunctions = true;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Create a new page in your wiki called &amp;#8220;Mediawiki:Common.css&amp;#8221;, and
    paste in the content from &lt;a href="http://www.mediawiki.org/wiki/MediaWiki:Common.css"&gt;MediaWiki.org MediaWiki:Common.css&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Go to &lt;a href="http://en.wikipedia.org/w/index.php?title=Special:Export"&gt;Wikipedia&amp;#8217;s Special:Export&lt;/a&gt; page, and enter
    &amp;#8220;Template:Ambox&amp;#8221; in the box, check off &amp;#8220;Include templates&amp;#8221;, and
    export the template (and all dependencies) to a local &lt;span class="caps"&gt;XML&lt;/span&gt;&amp;nbsp;file.&lt;/li&gt;
&lt;li&gt;Go to the &amp;#8220;Special:Import&amp;#8221; page of your wiki, and upload the &lt;span class="caps"&gt;XML&lt;/span&gt;
    file you just grabbed from Wikipedia. This will import the Ambox and
    mbox templates, as well as their&amp;nbsp;dependencies.&lt;/li&gt;
&lt;li&gt;Now, if you go back and refresh the Template:Cleanup page you
    created, you should see the icon and a nice message&amp;nbsp;box:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="cleanup message box" src="/GFX/mw_cleanup.png" /&gt;&lt;/p&gt;
&lt;p&gt;Finally, add the template and category pages for update and&amp;nbsp;deprecated:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Template:Update&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;[[Image:Warning.png]]

&amp;#39;&amp;#39;&amp;#39;This page is in need of updating. Some information on it may be out of date, and should not be relied on.&amp;#39;&amp;#39;&amp;#39;



[[Category:Pages Needing Updates]]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;Category:Pages Needing Updates&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;__HIDDENCAT__

This category keeps track of pages that need changes or updates.

&amp;#39;&amp;#39;&amp;#39;To add pages to this category&amp;#39;&amp;#39;&amp;#39;, include the following at the &amp;#39;&amp;#39;&amp;#39;TOP&amp;#39;&amp;#39;&amp;#39; of the page:


{{update}}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;Template:Deprecated&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;[[Image:Critical.png]]

&amp;#39;&amp;#39;&amp;#39;The information on this page is badly out-of-date.&amp;#39;&amp;#39;&amp;#39; It describes a system that is no longer in production or has drastically changed, and &amp;#39;&amp;#39;&amp;#39;needs to be updated or rewritten&amp;#39;&amp;#39;&amp;#39;.



[[Category:Deprecated Content]]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;Category:Deprecated Content&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; __HIDDENCAT__

This category keeps track of pages that are &amp;#39;&amp;#39;&amp;#39;seriously old&amp;#39;&amp;#39;&amp;#39; or otherwise describe systems/hosts/etc. that have seriously changed from what is described in the page.


&amp;#39;&amp;#39;&amp;#39;To add pages to this category&amp;#39;&amp;#39;&amp;#39;, include the following at the &amp;#39;&amp;#39;&amp;#39;TOP&amp;#39;&amp;#39;&amp;#39; of the page:


{{deprecated}}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the download the two images -
[http://upload.wikimedia.org/wikipedia/commons/9/98/Ambox_deletion.png][]
gets uploaded as Critical.png and
[http://upload.wikimedia.org/wikipedia/en/f/f4/Ambox_content.png][]
gets uploaded as&amp;nbsp;Warning.png.&lt;/p&gt;
&lt;p&gt;That&amp;#8217;s it. To use this, just add &lt;code&gt;{{cleanup}}&lt;/code&gt;, &lt;code&gt;{{deprecated}}&lt;/code&gt; or
&lt;code&gt;{{update}}&lt;/code&gt; to the top of a wiki article (adding the &lt;span class="caps"&gt;HTML&lt;/span&gt; comment
before it is also recommended), and it will add the page to the
appropriate category and show a nice message box at the top of the&amp;nbsp;page:  &lt;/p&gt;
&lt;p&gt;Cleanup:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="cleanup message box" src="/GFX/mw_cleanup.png" /&gt;  &lt;/p&gt;
&lt;p&gt;Update:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="update message box" src="/GFX/mw_update.png" /&gt;  &lt;/p&gt;
&lt;p&gt;Deprecated:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="deprecated message box" src="/GFX/mw_deprecated.png" /&gt;&lt;/p&gt;
&lt;p&gt;I also add a link to the top of the main wiki&amp;nbsp;page:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;Things that need to be done: [[:Category:Pages Needing Updates|Pages Needing Updates]], [[:Category:Deprecated Content|Pages with Largely Deprecated Content]], [[:Category:Pages Needing Cleanup|Pages Needing Cleanup]], [[Special:WantedPages|Links to Nonexistent Pages]]
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;

&lt;div class="codehilite"&gt;&lt;pre&gt;http://upload.wikimedia.org/wikipedia/commons/9/98/Ambox_deletion.png
&lt;/pre&gt;&lt;/div&gt;</summary><category term="documentation"></category><category term="mediawiki"></category><category term="sysadmin"></category></entry><entry><title>Synaptics touchpad driver synclient in Fedora 16 / Xorg with UDEV</title><link href="/2012/01/synaptics-touchpad-driver-synclient-in-fedora-16-xorg-with-udev/" rel="alternate"></link><updated>2012-01-27T17:51:00-05:00</updated><author><name>admin</name></author><id>tag:,2012-01-27:2012/01/synaptics-touchpad-driver-synclient-in-fedora-16-xorg-with-udev/</id><summary type="html">&lt;p&gt;I just installed &lt;a href="http://fedoraproject.org"&gt;Fedora 16&lt;/a&gt; on an older &lt;span class="caps"&gt;IBM&lt;/span&gt; &lt;a href="http://www.thinkwiki.org/wiki/Category:T42"&gt;ThinkPad T42&lt;/a&gt; laptop.
Unfortunately, the two mouse buttons below the &lt;a href="http://www.thinkwiki.org/wiki/UltraNav"&gt;UltraNav&lt;/a&gt; touchpad
just won&amp;#8217;t work at all. Before opening up the case and fiddling around,
I decided to try a software solution. Even after fairly exhaustive
research, I couldn&amp;#8217;t find anyone with a similar&amp;nbsp;problem.&lt;/p&gt;
&lt;p&gt;I did, however, find out that the synaptics touchpad driver has a
&lt;code&gt;synclient&lt;/code&gt; tool that can output the hardware events read directly from
the input device. I tried running &lt;code&gt;synclient -m 100&lt;/code&gt; (to monitor
hardware events every 100ms), but the only output that I got was
&lt;code&gt;Can't access shared memory area. SHMConfig disabled?&lt;/code&gt;. This was all a
bit confusing to me, since Fedora 16 doesn&amp;#8217;t even use an &lt;code&gt;xorg.conf&lt;/code&gt;
file. I was even more confused by a fair amount of information saying
that SHMConfig is no longer used in synaptics&amp;nbsp;1.2+.&lt;/p&gt;
&lt;p&gt;Long story short, the solution lies in
&lt;code&gt;/usr/share/X11/xorg.conf.d/50-synaptics.conf&lt;/code&gt;, which holds the
synaptics config snippets for xorg. All you need to do is add the
SHMConfig line before the end of the&amp;nbsp;section:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;Section &amp;quot;InputClass&amp;quot;
    Identifier &amp;quot;touchpad catchall&amp;quot;
    Driver &amp;quot;synaptics&amp;quot;
    ...
    Option &amp;quot;SHMConfig&amp;quot; &amp;quot;on&amp;quot;
EndSection
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and then restart your X server. Now, running &lt;code&gt;synclient -m&lt;/code&gt; should work&amp;nbsp;fine.&lt;/p&gt;
&lt;p&gt;I have to thank Red Hat&amp;#8217;s &lt;a href="http://fedoraproject.org/wiki/User:Kevin"&gt;Kevin Fenzi&lt;/a&gt; (nirik on [#fedora on
irc.freenode.org][]) for putting another set of eyeballs on the problem,
and throwing out some ideas that finally led me to the&amp;nbsp;solution.&lt;/p&gt;</summary><category term="synaptics"></category><category term="synclient"></category><category term="thinkpad"></category><category term="touchpad"></category><category term="xorg"></category></entry><entry><title>PHP Script to Query Linode DNS Manager API</title><link href="/2012/01/php-script-to-query-linode-dns-manager-api/" rel="alternate"></link><updated>2012-01-20T22:49:00-05:00</updated><author><name>admin</name></author><id>tag:,2012-01-20:2012/01/php-script-to-query-linode-dns-manager-api/</id><summary type="html">&lt;p&gt;I&amp;#8217;m in the process of moving all of my public-facing services, currently
hosted on a single &lt;a href="http://www.linode.com/?r=5c8ad2931b410b55455aadbcf0a8d86d6f698a91"&gt;Linode&lt;/a&gt;, to a new virtual machine (still with
Linode, of course, just a new CentOS 6 &lt;span class="caps"&gt;VM&lt;/span&gt;). Of course, I&amp;#8217;ve got a &lt;em&gt;lot&lt;/em&gt;
(about 60) of &lt;span class="caps"&gt;DNS&lt;/span&gt; records, spread across 8 domains, that point at the
old machine. For name-based vhosts in Apache, my usual procedure is to
migrate everything over to the new host and then change &lt;span class="caps"&gt;DNS&lt;/span&gt;, and once
the change propagates (I&amp;#8217;m using Linode&amp;#8217;s &lt;span class="caps"&gt;DNS&lt;/span&gt; hosting, so it makes
things a &lt;span class="caps"&gt;LOT&lt;/span&gt; easier but I don&amp;#8217;t have &lt;code&gt;rndc reload&lt;/code&gt; anymore) I test in a
browser and, assuming all is well, disable the vhost on the old server.
To do all this, I need an easy way to get a list of all the &lt;span class="caps"&gt;DNS&lt;/span&gt; records
that still point to the old&amp;nbsp;machine.&lt;/p&gt;
&lt;p&gt;Luckily, to augment their web-based control panel (Linode Manager),
Linode has a pretty full-featured &lt;a href="http://www.linode.com/api/"&gt;&lt;span class="caps"&gt;API&lt;/span&gt;&lt;/a&gt; with bindings for Python,
Perl, &lt;span class="caps"&gt;PHP&lt;/span&gt;, Ruby, Java and others. While I like Python and I&amp;#8217;m starting
to learn Perl (by trying to shift most of my non-time-sensitive
scripting to it) for my new job, &lt;span class="caps"&gt;PHP&lt;/span&gt; is still my strongest language (and
the majority of my existing administrative scripting is written in it,
especially handy when it comes time to add a web front-end to things).
So I wrote the following script to query Linode&amp;#8217;s &lt;a href="http://www.linode.com/api/dns"&gt;&lt;span class="caps"&gt;DNS&lt;/span&gt; Manager &lt;span class="caps"&gt;API&lt;/span&gt;&lt;/a&gt;
using &lt;a href="https://github.com/krmdrms/linode/"&gt;Kerem Durmus&amp;#8217; Linode &lt;span class="caps"&gt;API&lt;/span&gt; &lt;span class="caps"&gt;PHP&lt;/span&gt; wrapper&lt;/a&gt; (installation
instructions and info at that Github link). The script simply writes all
Linode &lt;span class="caps"&gt;DNS&lt;/span&gt; records for all zones to a &lt;span class="caps"&gt;CSV&lt;/span&gt; file (this could take a while
if you have a lot of&amp;nbsp;records&amp;#8230;).&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="x"&gt;, many thanks to him for releasing this.&lt;/span&gt;
&lt;span class="x"&gt;   *&lt;/span&gt;
&lt;span class="x"&gt;   * &lt;span class="caps"&gt;INSTALLATION&lt;/span&gt; (as per krmdrms &lt;span class="caps"&gt;README&lt;/span&gt;):&lt;/span&gt;
&lt;span class="x"&gt;   *  pear install Net_URL2-0.3.1&lt;/span&gt;
&lt;span class="x"&gt;   *  pear install HTTP_Request2-0.5.2&lt;/span&gt;
&lt;span class="x"&gt;   *  pear channel-discover pear.keremdurmus.com&lt;/span&gt;
&lt;span class="x"&gt;   *  pear install krmdrms/Services_Linode&lt;/span&gt;
&lt;span class="x"&gt;   *&lt;/span&gt;
&lt;span class="x"&gt;   * Also requires php-openssl / php5-openssl&lt;/span&gt;
&lt;span class="x"&gt;   *&lt;/span&gt;
&lt;span class="x"&gt;   * &lt;span class="caps"&gt;USAGE&lt;/span&gt;: php linodeDnsToCsv.php&lt;/span&gt;
&lt;span class="x"&gt;   *&lt;/span&gt;
&lt;span class="x"&gt;   * Copyright 2011 Jason Antman  , all rights reserved.&lt;/span&gt;
&lt;span class="x"&gt;   * This script is free for use by anyone anywhere, provided that you comply with the following terms:&lt;/span&gt;
&lt;span class="x"&gt;   * 1) Keep this notice and copyright statement intact.&lt;/span&gt;
&lt;span class="x"&gt;   * 2) Send any substantial changes, improvements or bog fixes back to me at the above address.&lt;/span&gt;
&lt;span class="x"&gt;   * 3) If you include this in a product or redistribute it, you notify me, and include my name in the credits or changelog.&lt;/span&gt;
&lt;span class="x"&gt;   *&lt;/span&gt;
&lt;span class="x"&gt;   * The following &lt;span class="caps"&gt;URL&lt;/span&gt; always points to the newest version of this script. If you obtained it from another source, you should&lt;/span&gt;
&lt;span class="x"&gt;   * check here:&lt;/span&gt;
&lt;span class="x"&gt;   * $HeadURL: http://svn.jasonantman.com/misc-scripts/linodeDnsToCsv.php $&lt;/span&gt;
&lt;span class="x"&gt;   * $LastChangedRevision: 25 $&lt;/span&gt;
&lt;span class="x"&gt;   *&lt;/span&gt;
&lt;span class="x"&gt;   * &lt;span class="caps"&gt;CHANGELOG&lt;/span&gt;:&lt;/span&gt;
&lt;span class="x"&gt;   * 2011-12-17 Jason Antman :&lt;/span&gt;
&lt;span class="x"&gt;   *    merged into my svn repo&lt;/span&gt;
&lt;span class="x"&gt;   * 2011-09-12 Jason Antman :&lt;/span&gt;
&lt;span class="x"&gt;   *    initial version of script&lt;/span&gt;
&lt;span class="x"&gt;   *&lt;/span&gt;
&lt;span class="x"&gt;   */&lt;/span&gt;

&lt;span class="x"&gt;require_once(&amp;quot;/var/www/linode_apikey.php&amp;quot;); // &lt;span class="caps"&gt;PHP&lt;/span&gt; file containing:   define(&amp;quot;API_KEY_LINODE&amp;quot;, &amp;quot;myApiKeyHere&amp;quot;);&lt;/span&gt;
&lt;span class="x"&gt;require_once(&amp;#39;Services/Linode.php&amp;#39;);&lt;/span&gt;

&lt;span class="x"&gt;// get list of all domains&lt;/span&gt;
&lt;span class="x"&gt;$domains = array(); // &lt;span class="caps"&gt;DOMAINID&lt;/span&gt; =&amp;gt; domain.tld&lt;/span&gt;
&lt;span class="x"&gt;try {&lt;/span&gt;
&lt;span class="x"&gt;  $linode = new Services_Linode(API_KEY_LINODE);&lt;/span&gt;
&lt;span class="x"&gt;  $result = $linode-&amp;gt;domain_list();&lt;/span&gt;

&lt;span class="x"&gt;  foreach($result[&amp;#39;&lt;span class="caps"&gt;DATA&lt;/span&gt;&amp;#39;] as $domain)&lt;/span&gt;
&lt;span class="x"&gt;    {&lt;/span&gt;
&lt;span class="x"&gt;      $domains[$domain[&amp;#39;&lt;span class="caps"&gt;DOMAINID&lt;/span&gt;&amp;#39;]] = $domain[&amp;quot;&lt;span class="caps"&gt;DOMAIN&lt;/span&gt;&amp;quot;];&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;catch (Services_Linode_Exception $e)&lt;/span&gt;
&lt;span class="x"&gt;{&lt;/span&gt;
&lt;span class="x"&gt;  echo $e-&amp;gt;getMessage();&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;

&lt;span class="x"&gt;$records = array(); // array of resource records&lt;/span&gt;
&lt;span class="x"&gt;$linode-&amp;gt;batching = true;&lt;/span&gt;
&lt;span class="x"&gt;foreach($domains as $id =&amp;gt; $name)&lt;/span&gt;
&lt;span class="x"&gt;{&lt;/span&gt;
&lt;span class="x"&gt;  $linode-&amp;gt;domain_resource_list(array(&amp;#39;DomainID&amp;#39; =&amp;gt; $id));&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;

&lt;span class="x"&gt;try {&lt;/span&gt;
&lt;span class="x"&gt;  $result = $linode-&amp;gt;batchFlush();&lt;/span&gt;

&lt;span class="x"&gt;  foreach($result as $batchPart)&lt;/span&gt;
&lt;span class="x"&gt;    {&lt;/span&gt;
&lt;span class="x"&gt;      foreach($batchPart[&amp;#39;&lt;span class="caps"&gt;DATA&lt;/span&gt;&amp;#39;] as $rrec)&lt;/span&gt;
&lt;span class="x"&gt;    {&lt;/span&gt;
&lt;span class="x"&gt;      if(! isset($records[$rrec[&amp;#39;&lt;span class="caps"&gt;DOMAINID&lt;/span&gt;&amp;#39;]])){ $records[$rrec[&amp;#39;&lt;span class="caps"&gt;DOMAINID&lt;/span&gt;&amp;#39;]] = array();}&lt;/span&gt;
&lt;span class="x"&gt;      $records[$rrec[&amp;#39;&lt;span class="caps"&gt;DOMAINID&lt;/span&gt;&amp;#39;]][$rrec[&amp;#39;&lt;span class="caps"&gt;RESOURCEID&lt;/span&gt;&amp;#39;]] = array(&amp;#39;name&amp;#39; =&amp;gt; $rrec[&amp;#39;&lt;span class="caps"&gt;NAME&lt;/span&gt;&amp;#39;], &amp;#39;type&amp;#39; =&amp;gt; $rrec[&amp;#39;&lt;span class="caps"&gt;TYPE&lt;/span&gt;&amp;#39;], &amp;#39;target&amp;#39; =&amp;gt; $rrec[&amp;#39;&lt;span class="caps"&gt;TARGET&lt;/span&gt;&amp;#39;]);&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;catch (Services_Linode_Exception $e)&lt;/span&gt;
&lt;span class="x"&gt;{&lt;/span&gt;
&lt;span class="x"&gt;  echo $e-&amp;gt;getMessage();&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;

&lt;span class="x"&gt;echo &amp;#39;&amp;quot;recid&amp;quot;,&amp;quot;domain&amp;quot;,&amp;quot;name&amp;quot;,&amp;quot;type&amp;quot;,&amp;quot;target&amp;quot;&amp;#39;.&amp;quot;\n&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt;foreach($domains as $id =&amp;gt; $name)&lt;/span&gt;
&lt;span class="x"&gt;{&lt;/span&gt;
&lt;span class="x"&gt;  foreach($records[$id] as $recid =&amp;gt; $arr)&lt;/span&gt;
&lt;span class="x"&gt;    {&lt;/span&gt;
&lt;span class="x"&gt;      echo &amp;#39;&amp;quot;&amp;#39;.$recid.&amp;#39;&amp;quot;,&amp;quot;&amp;#39;.$name.&amp;#39;&amp;quot;,&amp;quot;&amp;#39;.$arr[&amp;#39;name&amp;#39;].&amp;#39;&amp;quot;,&amp;quot;&amp;#39;.$arr[&amp;#39;type&amp;#39;].&amp;#39;&amp;quot;,&amp;quot;&amp;#39;.$arr[&amp;#39;target&amp;#39;].&amp;quot;\&amp;quot;\n&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;


&lt;span class="x"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That will print out a list containing the Linode &lt;span class="caps"&gt;DNS&lt;/span&gt; record id (recid),
domain, record name, type and&amp;nbsp;target:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&amp;quot;recid&amp;quot;,&amp;quot;domain&amp;quot;,&amp;quot;name&amp;quot;,&amp;quot;type&amp;quot;,&amp;quot;target&amp;quot;
&amp;quot;137423&amp;quot;,&amp;quot;jasonantman.com&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;TXT&amp;quot;,&amp;quot;v=spf1 mx:jasonantman.com -all&amp;quot;
&amp;quot;3597859&amp;quot;,&amp;quot;jasonantman.com&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;MX&amp;quot;,&amp;quot;linode1.jasonantman.com&amp;quot;
&amp;quot;3488952&amp;quot;,&amp;quot;jasonantman.com&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;mx&amp;quot;,&amp;quot;linode2.jasonantman.com&amp;quot;
&amp;quot;3472952&amp;quot;,&amp;quot;jasonantman.com&amp;quot;,&amp;quot;blog&amp;quot;,&amp;quot;CNAME&amp;quot;,&amp;quot;linode1.jasonantman.com&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you want to, say, search for only records that include host
&amp;#8220;example&amp;#8221;, you could use grep and awk&amp;nbsp;like:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;php linodeDnsToCsv.php | grep linode1 | grep -v &lt;span class="s1"&gt;&amp;#39;&amp;quot;linode1&amp;quot;,&amp;quot;a&amp;quot;&amp;#39;&lt;/span&gt; | awk -F , &lt;span class="s1"&gt;&amp;#39;{printf &amp;quot;%-27s %-20s %-7s %s\n&amp;quot;, $2, $3, $4, $5}&amp;#39;&lt;/span&gt; | sed &lt;span class="s1"&gt;&amp;#39;s/&amp;quot;//g&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I hope this helps someone else out, and saves them a few minutes of&amp;nbsp;coding&amp;#8230;&lt;/p&gt;</summary><category term="api"></category><category term="dns"></category><category term="linode"></category><category term="PHP"></category><category term="sysadmin"></category></entry><entry><title>Secure rsnapshot backups over the WAN via SSH</title><link href="/2012/01/secure-rsnapshot-backups-over-the-wan-via-ssh/" rel="alternate"></link><updated>2012-01-15T17:26:00-05:00</updated><author><name>admin</name></author><id>tag:,2012-01-15:2012/01/secure-rsnapshot-backups-over-the-wan-via-ssh/</id><summary type="html">&lt;p&gt;Since I moved all of my &lt;span class="caps"&gt;WAN&lt;/span&gt;-facing stuff (mail, web, this blog, svn
etc.) to a virtual server with &lt;a href="http://www.linode.com"&gt;Linode&lt;/a&gt;, and just have a desktop at
home, it&amp;#8217;s no longer practical to use &lt;a href="http://www.bacula.org/"&gt;Bacula&lt;/a&gt; for backups. Linode
manages daily and weekly backups through their backup service, but
they&amp;#8217;ll only restore a full filesystem at a time. I wanted something
that would keep daily and weekly incremental backups long enough that I
could find a file changed (or accidentally deleted) a few days or weeks
ago. Since I&amp;#8217;d be backing up to my desktop at home (which is on a
residential dynamic &lt;span class="caps"&gt;IP&lt;/span&gt; connection), the logical solution was something
using &lt;a href="http://rsync.samba.org/"&gt;rsync&lt;/a&gt;. Even better than that is the &lt;a href="http://rsnapshot.org/"&gt;rsnapshot&lt;/a&gt; tool, which
builds upon rsync and hard links to manage incremental backups with as
little disk usage as possible (though I&amp;#8217;d certainly recommend excluding
log&amp;nbsp;files).&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m pretty strict about security. Since my home connection has a dynamic
&lt;span class="caps"&gt;IP&lt;/span&gt;, things are a bit more complicated - I can&amp;#8217;t push from the server, I
can&amp;#8217;t &lt;span class="caps"&gt;ACL&lt;/span&gt; or firewall the server to just my home &lt;span class="caps"&gt;IP&lt;/span&gt;, and an IPsec &lt;span class="caps"&gt;VPN&lt;/span&gt;
would be difficult to accomplish (not to mention add a lot of overhead
to big file transfers). So, I opted for a solution that uses &lt;span class="caps"&gt;SSH&lt;/span&gt;
key-based authentication, forced comands, and a C&amp;nbsp;wrapper.&lt;/p&gt;
&lt;p&gt;The configuration of rsync and rsnapshot is mostly out of the scope of
this post. There are plenty of good resources for that, so I&amp;#8217;ll just
cover the things that won&amp;#8217;t be found in most tutorials. Also, I&amp;#8217;ll be
referring to the remote machine to be backed up as the &amp;#8220;remote host&amp;#8221; and
the local machine which triggers the backup and stores the data as the
&amp;#8220;local&amp;nbsp;host&amp;#8221;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Local Host Setup - Part&amp;nbsp;I&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Choose and create a directory to store your backups in. I have a &lt;span class="caps"&gt;1TB&lt;/span&gt;
    external disk mounted at &lt;code&gt;/mnt/backup/&lt;/code&gt;, so I chose
    &lt;code&gt;/mnt/backup/rsnapshot/&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Generate two sets of password-less &lt;span class="caps"&gt;SSH&lt;/span&gt; keys using the &lt;code&gt;ssh-keygen&lt;/code&gt;
    program. One will be used to run the rsync command on the remote
    host, the other will be used to trigger your pre- and post-backup
    scripts. Name them accordingly (i.e.
    &amp;#8220;remoteHostname_remoteBackupUsername_cmd&amp;#8221; and
    &amp;#8220;remoteHostname_remoteBackupUsername_rsync&amp;#8221;). Now, get (scp) the
    public key for each pair to the remote&amp;nbsp;host.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Remote Host&amp;nbsp;Setup&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ensure that rsync is installed on the&amp;nbsp;host.&lt;/li&gt;
&lt;li&gt;Create a user to run the backups. I called this user &amp;#8220;rsyncuser&amp;#8221;.
    Create a home directory, and a group for the user. Do not set a
    password (you don&amp;#8217;t want password&amp;nbsp;logins).&lt;/li&gt;
&lt;li&gt;Copy the public key files you created above to the user&amp;#8217;s &lt;code&gt;~/.ssh/&lt;/code&gt;
    directory.&lt;/li&gt;
&lt;li&gt;Cat the &amp;#8220;remoteHostname_remoteBackupUsername_cmd&amp;#8221; public key into
    the user&amp;#8217;s &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;Now comes the first fun part. Let&amp;#8217;s assume that your pre- and
    post-backup scripts are &lt;code&gt;/root/bin/rsnapshot-pre.sh&lt;/code&gt; and
    &lt;code&gt;/root/bin/rsnapshot-post.sh&lt;/code&gt;, respectively. As root, grab a copy of
    cmd-wrapper.c (from &lt;a href="http://svn.jasonantman.com/misc-scripts/cmd-wrapper.c"&gt;subversion&lt;/a&gt; or at the bottom of this post).
    Modify for your use - the only thing likely to change is line 38,
    which ensures it will only run for a member of &lt;span class="caps"&gt;GID&lt;/span&gt; 502. Change this
    to rsyncuser&amp;#8217;s &lt;span class="caps"&gt;GID&lt;/span&gt;. Compile the wrapper with
    &lt;code&gt;gcc -o cmd-wrapper cmd-wrapper.c&lt;/code&gt;. Copy it to rsyncuser&amp;#8217;s home
    directory (/home/rsyncuser), &lt;code&gt;chown root:rsyncuser&lt;/code&gt; and
    &lt;code&gt;chmod 4750&lt;/code&gt;. Yes, this sets the &lt;span class="caps"&gt;SUID&lt;/span&gt; bit. The program will now be
    owned by root, and runnable &lt;em&gt;as root&lt;/em&gt; by rsyncuser (or, more
    specifically, any member of the rsyncuser&amp;nbsp;group).&lt;/li&gt;
&lt;li&gt;Open rsyncuser&amp;#8217;s &lt;code&gt;.ssh/authorized_keys&lt;/code&gt; file in a text editor. At
    the beginning of the &amp;#8220;remoteHostname_remoteBackupUsername_cmd&amp;#8221; key
    line, prepend &lt;code&gt;command="/home/rsyncuser/cmd-wrapper"&lt;/code&gt;. This sets up
    &lt;span class="caps"&gt;SSH&lt;/span&gt; forced command (there&amp;#8217;s a good overview in [O&amp;#8217;Reilly&amp;#8217;s &lt;span class="caps"&gt;SSH&lt;/span&gt;: The
    Definitive Guide][]) so that when this key is used to login, it will
    directly execute &lt;code&gt;/home/rsyncuser/cmd-wrapper&lt;/code&gt; and then exit,
    without allowing access to anything&amp;nbsp;else.&lt;/li&gt;
&lt;li&gt;Add rsyncuser to &lt;code&gt;AllowUsers&lt;/code&gt; in &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; (you &lt;em&gt;do&lt;/em&gt;
    limit user access via &lt;span class="caps"&gt;SSH&lt;/span&gt;, right?) and then reload&amp;nbsp;sshd.&lt;/li&gt;
&lt;li&gt;Now, if you &lt;span class="caps"&gt;SSH&lt;/span&gt; to rsyncuser@remoteHost from the local host, using
    the &amp;#8220;_cmd&amp;#8221; ssh key and a command of &amp;#8220;pre&amp;#8221; (i.e.
    &lt;code&gt;ssh -i /path/to/remoteHostname_remoteBackupUsername_cmd rsyncuser@remoteHost pre&lt;/code&gt;),
    it should execute &lt;code&gt;/root/bin/rsnapshot-pre.sh&lt;/code&gt; ad root, and you
    should see the output&amp;nbsp;locally.&lt;/li&gt;
&lt;li&gt;Repeat the above step for the post-backup script (replacing &amp;#8220;pre&amp;#8221;
    above with &amp;#8220;post&amp;#8221;). You should now have your pre- and post-backup
    scripts working, and triggered remotely. &lt;em&gt;(Note: these steps, and
    some of the other setup here, is a bit more complex so that it will
    work better with rsnapshot backups of multiple remote&amp;nbsp;hosts.)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Cat the &amp;#8220;remoteHostname_remoteBackupUsername_rsync&amp;#8221; public key
    into the backup user&amp;#8217;s &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;As root, grab a copy of rsync-wrapper.c (from &lt;a href="http://svn.jasonantman.com/misc-scripts/rsync-wrapper.c"&gt;subversion&lt;/a&gt; or at
    the bottom of this post). Modify for your use - the only thing
    likely to change is line 38, which ensures it will only run for a
    member of &lt;span class="caps"&gt;GID&lt;/span&gt; 502 (change this to rsyncuser&amp;#8217;s &lt;span class="caps"&gt;GID&lt;/span&gt;), and perhaps the
    path of or arguments passed to rsync (the wrapper will call
    &lt;code&gt;/usr/bin/rsync --server --sender -vlogDtprRe.iLsf --numeric-ids . /&lt;/code&gt;).
    Compile the wrapper with &lt;code&gt;gcc -o rsync-wrapper rsync-wrapper.c&lt;/code&gt;.
    Copy it to rsyncuser&amp;#8217;s home directory (/home/rsyncuser),
    &lt;code&gt;chown root:rsyncuser&lt;/code&gt; and &lt;code&gt;chmod 4750&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Open rsyncuser&amp;#8217;s &lt;code&gt;.ssh/authorized_keys&lt;/code&gt; file in a text editor. At
    the beginning of the &amp;#8220;remoteHostname_remoteBackupUsername_rsync&amp;#8221;
    key line, prepend &lt;code&gt;command="/home/rsyncuser/rsync-wrapper"&lt;/code&gt;. This
    will run rsync with the arguments specified in rsync-wrapper.c every
    time this key is used to&amp;nbsp;login.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Local Host Setup - Part&amp;nbsp;&lt;span class="caps"&gt;II&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I use totally separate configs for each host that I backup, to keep
things clean and to let me enable, disable, or tweak one remote backup
without affecting the&amp;nbsp;others.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create host-specific pre- and post-backup scripts. I put them in
    &lt;code&gt;/etc/rsnapshot.d/&lt;/code&gt;.   &lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/rsnapshot.d/pre-remoteHostName.sh&lt;/code&gt;:&lt;/p&gt;
&lt;/p&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;#!/bin/bash

# do anything else needed on the local system before a backup
ssh -i /path/to/remoteHostname_remoteBackupUsername_cmd rsyncuser@remoteHost pre
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;`/etc/rsnapshot.d/post-remoteHostName.sh`:
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;#!/bin/bash

# do anything else needed on the local system after a backup
ssh -i /path/to/remoteHostname_remoteBackupUsername_cmd rsyncuser@remoteHost post
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Setup a set of rsync include and exclude files (see &lt;code&gt;man rsync(1)&lt;/code&gt;,
    &lt;code&gt;--include-from=&lt;/code&gt; and &lt;code&gt;--exclude-from=&lt;/code&gt;). I put mine at
    &lt;code&gt;/etc/rsnapshot.d/rsync-include-remoteHostName.txt&lt;/code&gt; and
    &lt;code&gt;/etc/rsnapshot.d/rsync-exclude-remoteHostName.txt&lt;/code&gt;, respectively.
    (Examples included at the bottom of this&amp;nbsp;post).&lt;/li&gt;
&lt;li&gt;Configure rsnapshot. I use a separate config file for each remote
    host. Copy the default &lt;code&gt;/etc/rsnapshot.conf&lt;/code&gt; to
    &lt;code&gt;/etc/rsnapshot-remoteHostName.conf&lt;/code&gt;. The important items are
    &lt;code&gt;rsync_short_args&lt;/code&gt;, &lt;code&gt;rsync_long_args&lt;/code&gt;, &lt;code&gt;ssh_args&lt;/code&gt;, &lt;code&gt;cmd_preexec&lt;/code&gt;,
    &lt;code&gt;cmd_postexec&lt;/code&gt; and &lt;code&gt;backup&lt;/code&gt;. Here&amp;#8217;s an example of my config file,
    with comments and blank lines&amp;nbsp;removed:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;config_version  1.2
snapshot_root   /mnt/backup/rsnapshot/
cmd_cp          /bin/cp
cmd_rm          /bin/rm
cmd_rsync       /usr/bin/rsync
cmd_ssh         /usr/bin/ssh
cmd_logger      /bin/logger
cmd_du          /usr/bin/du
cmd_rsnapshot_diff      /usr/bin/rsnapshot-diff
interval        daily   14 # save 14 daily backups
interval        weekly  6 # save 6 weekly backups
verbose         2
loglevel        3
logfile /var/log/rsnapshot-remoteHostName.log
lockfile        /var/run/rsnapshot-remoteHostName.pid
rsync_short_args        -a
rsync_long_args --delete --numeric-ids --relative --delete-excluded
ssh_args        -i /path/to/remoteHostname_remoteBackupUsername_rsync
exclude_file    /etc/rsnapshot.d/rsync-exclude-remoteHostName.txt
include_file    /etc/rsnapshot.d/rsync-include-remoteHostName.txt
link_dest       1
use_lazy_deletes        1
cmd_preexec     /etc/rsnapshot.d/pre-remoteHostName.sh
cmd_postexec    /etc/rsnapshot.d/post-remoteHostName.sh
backup  rsyncuser@remoteHostName:/      remoteHostName/
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&amp;lt;p&amp;gt;
The `backup` line is what tells rsync what to back up (`/` on
remoteHostName, logging in as rsyncuser), and where to back up to
(snapshot\_root/remoteHostName/).
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create two scripts that will actually trigger the backups, which
    I&amp;#8217;ll call &lt;code&gt;/root/bin/rsnapshot-daily.sh&lt;/code&gt; and
    &lt;code&gt;/root/bin/rsnapshot-weekly.sh&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;/root/bin/rsnapshot-daily.sh&lt;/code&gt;:&lt;/p&gt;
&lt;/p&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;#!/bin/bash

/usr/bin/rsnapshot -c /etc/rsnapshot-remoteHostName.conf daily
# add other hosts here; note, they&amp;#39;ll run in series
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;`/root/bin/rsnapshot-weekly.sh`:
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;#!/bin/bash

/usr/bin/rsnapshot -c /etc/rsnapshot-remoteHostName.conf weekly
# add other hosts here; note, they&amp;#39;ll run in series
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Add two entries to root&amp;#8217;s croontab to run the rsnapshot backups.
    Adjust the following days and times to your&amp;nbsp;liking:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;0 1 * * Mon /root/bin/rsnapshot-weekly.sh &lt;span class="c"&gt;# run the weekly backups every Monday at 01:00&lt;/span&gt;
30 2 * * * /root/bin/rsnapshot-daily.sh &lt;span class="c"&gt;# run the daily backups every day at 02:30, which *should* be after the weekly finished on Monday morning&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Check, after the next scheduled runs, that everything appears to
    have run correctly. If you want, you can manually trigger the daily
    script and watch what happens. If you do this more than once, you
    should delete the directories it creates, or else rotation will be
    messed up. If you have issues with rsync, aside from the usual
    troubleshooting, check that rsync-wrapper.c is calling rsync with
    the same arguments that rsnapshot is sending. It may be useful to
    use my &lt;a href="http://svn.jasonantman.com/misc-scripts/print-cmd.sh"&gt;print-cmd.sh&lt;/a&gt; script in place of the &amp;#8220;rsync-wrapper&amp;#8221;
    forced command. This script will simply log the command rsnapshot
    calls via&amp;nbsp;&lt;span class="caps"&gt;SSH&lt;/span&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Assuming all of this worked, you should now have a fairly secure
&lt;span class="caps"&gt;SSH&lt;/span&gt;-based remotely-triggered backup system. In a follow-up post I
provide my &lt;a href="/2012/02/nagios-check-plugin-for-rsnapshot-backups/"&gt;Nagios Check Plugin for Rsnapshot Backups&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The referenced scripts, config files, etc. are&amp;nbsp;below:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cmd-wrapper.c&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &lt;/span&gt;
&lt;span class="cp"&gt;#include &lt;/span&gt;
&lt;span class="cp"&gt;#include &lt;/span&gt;
&lt;span class="cp"&gt;#include &lt;/span&gt;
&lt;span class="cp"&gt;#include &lt;/span&gt;
&lt;span class="cp"&gt;#include &lt;/span&gt;

&lt;span class="cm"&gt;/********************************************&lt;/span&gt;
&lt;span class="cm"&gt; * Wrapper - Secure Yourself                &lt;/span&gt;
&lt;span class="cm"&gt; *                                          &lt;/span&gt;
&lt;span class="cm"&gt; * 2007 - Mike Golvach - eggi@comcast.net   &lt;/span&gt;
&lt;span class="cm"&gt; * Modified 2012 by Jason Antman  &lt;/span&gt;
&lt;span class="cm"&gt; *  - configured for use as pre- and post-backup script wrapper&lt;/span&gt;
&lt;span class="cm"&gt; *                                          &lt;/span&gt;
&lt;span class="cm"&gt; * &lt;span class="caps"&gt;USAGE&lt;/span&gt;: cmd-wrapper [pre|post]&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; * $HeadURL: http://svn.jasonantman.com/misc-scripts/cmd-wrapper.c $&lt;/span&gt;
&lt;span class="cm"&gt; * $LastChangedRevision: 26 $&lt;/span&gt;
&lt;span class="cm"&gt; *                                          &lt;/span&gt;
&lt;span class="cm"&gt; ********************************************/&lt;/span&gt;

&lt;span class="cm"&gt;/* Creative Commons Attribution-Noncommercial-Share Alike 3.0 United States License */&lt;/span&gt;

&lt;span class="cm"&gt;/* Define global variables */&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;gid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* main(int argc, char **argv) - main process loop */&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;envp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;origcmd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;origcmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SSH_ORIGINAL_COMMAND&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="cm"&gt;/* printf (&amp;quot;Original Command:%s\n&amp;quot;, origcmd); */&lt;/span&gt;

  &lt;span class="cm"&gt;/* Set euid and egid to actual user */&lt;/span&gt;

  &lt;span class="n"&gt;gid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getgid&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;setegid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getgid&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
  &lt;span class="n"&gt;seteuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getuid&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

  &lt;span class="cm"&gt;/* Confirm user is in &lt;span class="caps"&gt;GROUP&lt;/span&gt;(502) group */&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;gid&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;502&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;User Not Authorized! Exiting...&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="cm"&gt;/* Check argc count only at this point */&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Usage: cmd-wrapper [pre|post]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="cm"&gt;/* Set uid, gid, euid and egid to root */&lt;/span&gt;

  &lt;span class="n"&gt;setegid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;seteuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;setgid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;setuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="cm"&gt;/* Check argv for proper arguments and run&lt;/span&gt;
&lt;span class="cm"&gt;   * the corresponding script, if invoked.&lt;/span&gt;
&lt;span class="cm"&gt;   */&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;strncmp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;origcmd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pre&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;execl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/root/bin/rsnapshot-pre.sh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;rsnapshot-pre.sh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;&lt;span class="caps"&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Execl:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;strncmp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;origcmd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;execl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/root/bin/rsnapshot-post.sh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;rsnapshot-post.sh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;&lt;span class="caps"&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Execl:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;span class="caps"&gt;ERROR&lt;/span&gt;: Invalid command: %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;origcmd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Usage: &lt;span class="caps"&gt;COMMAND&lt;/span&gt; [pre|post]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;rsync-wrapper.c&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &lt;/span&gt;
&lt;span class="cp"&gt;#include &lt;/span&gt;
&lt;span class="cp"&gt;#include &lt;/span&gt;
&lt;span class="cp"&gt;#include &lt;/span&gt;
&lt;span class="cp"&gt;#include &lt;/span&gt;

&lt;span class="cm"&gt;/********************************************&lt;/span&gt;
&lt;span class="cm"&gt; * Wrapper - Secure Yourself                &lt;/span&gt;
&lt;span class="cm"&gt; *                                          &lt;/span&gt;
&lt;span class="cm"&gt; * 2007 - Mike Golvach - eggi@comcast.net   &lt;/span&gt;
&lt;span class="cm"&gt; * Modified 2012 by Jason Antman  &lt;/span&gt;
&lt;span class="cm"&gt; *  - configured for use as rsync wrapper&lt;/span&gt;
&lt;span class="cm"&gt; *                                          &lt;/span&gt;
&lt;span class="cm"&gt; * $HeadURL: http://svn.jasonantman.com/misc-scripts/rsync-wrapper.c $&lt;/span&gt;
&lt;span class="cm"&gt; * $LastChangedRevision: 26 $&lt;/span&gt;
&lt;span class="cm"&gt; *                                          &lt;/span&gt;
&lt;span class="cm"&gt; ********************************************/&lt;/span&gt;

&lt;span class="cm"&gt;/* Creative Commons Attribution-Noncommercial-Share Alike 3.0 United States License */&lt;/span&gt;

&lt;span class="cm"&gt;/* Define global variables */&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;gid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* main(int argc, char **argv) - main process loop */&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="cm"&gt;/* Set euid and egid to actual user */&lt;/span&gt;

  &lt;span class="n"&gt;gid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getgid&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;setegid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getgid&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
  &lt;span class="n"&gt;seteuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getuid&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

  &lt;span class="cm"&gt;/* Confirm user is in &lt;span class="caps"&gt;GROUP&lt;/span&gt;(502) group */&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;gid&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;502&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;User Not Authorized! Exiting...&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="cm"&gt;/* Check argc count only at this point */&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Usage: rsync-wrapper&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="cm"&gt;/* Set uid, gid, euid and egid to root */&lt;/span&gt;

  &lt;span class="n"&gt;setegid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;seteuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;setgid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;setuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="cm"&gt;/* Check argv for proper arguments and run&lt;/span&gt;
&lt;span class="cm"&gt;   * the corresponding script, if invoked.&lt;/span&gt;
&lt;span class="cm"&gt;   */&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;execl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/usr/bin/rsync&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;rsync&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;--server&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;--sender&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;-vlogDtprRe.iLsf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;--numeric-ids&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;&lt;span class="caps"&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Execl:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;/etc/rsnapshot.d/rsync-include-remoteHostName.txt&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;~~~~{.text&amp;nbsp;only}&lt;/p&gt;
&lt;h1 id="include"&gt;Include&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;/dev/console&lt;/li&gt;
&lt;li&gt;/dev/initctl&lt;/li&gt;
&lt;li&gt;/dev/null&lt;/li&gt;
&lt;li&gt;/dev/zero&lt;/li&gt;
&lt;li&gt;/usr/local/*&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;`/etc/rsnapshot.d/rsync-exclude-remoteHostName.txt`:

~~~~{.text only}
# Exclude
- /cgroup/*
- /dev/*
- /lib/*
- lost+found/
- /proc/*
- /sys/
- /tmp/
- /var/log/*
&lt;/pre&gt;&lt;/div&gt;</summary><category term="backups"></category><category term="linode"></category><category term="rsnapshot"></category><category term="rsync"></category><category term="security"></category><category term="ssh"></category><category term="wrapper"></category></entry><entry><title>WP-Syntax Plugin GeSHi Path Fix</title><link href="/2012/01/wp-syntax-plugin-geshi-path-fix/" rel="alternate"></link><updated>2012-01-12T19:09:00-05:00</updated><author><name>admin</name></author><id>tag:,2012-01-12:2012/01/wp-syntax-plugin-geshi-path-fix/</id><summary type="html">&lt;p&gt;The &lt;a href="http://wordpress.org/extend/plugins/wp-syntax/"&gt;Wp-Syntax&lt;/a&gt; plugin for &lt;a href="http://wordpress.org"&gt;WordPress&lt;/a&gt; provides syntax highlighting
for WordPress blogs via the &lt;a href="http://qbnz.com/highlighter"&gt;GeSHi&lt;/a&gt; &lt;span class="caps"&gt;PHP&lt;/span&gt; syntax highlighter.
Unfortunately, the plugin includes a builtin version of GeSHi (currently
1.0.8.9) in &lt;code&gt;geshi/&lt;/code&gt;. As a result, not only are users of the plugin not
instructed to use the latest version of GeSHi, but it won&amp;#8217;t use a
host-wide GeSHi installation that&amp;#8217;s already in the &lt;span class="caps"&gt;PHP&lt;/span&gt; include path
(i.e. &lt;code&gt;/usr/share/php/&lt;/code&gt;), like the the many &lt;a href="http://pkgs.org/search/?keyword=php-geshi&amp;amp;search_on=name&amp;amp;distro=0&amp;amp;arch=32-bit"&gt;php-geshi packages&lt;/a&gt;
offered by repositories including &lt;a href="http://fedoraproject.org/wiki/EPEL"&gt;&lt;span class="caps"&gt;EPEL&lt;/span&gt;&lt;/a&gt; (for Fedora, CentOS and&amp;nbsp;&lt;span class="caps"&gt;RHEL&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;The fix is quite simple. Just open &lt;code&gt;wp-syntax.php&lt;/code&gt; in the &lt;code&gt;wp-syntax/&lt;/code&gt;
plugin directory in your favorite text editor and change the GeSHi
include line (for &lt;span class="caps"&gt;WP&lt;/span&gt;-Syntax 0.9.12, this is line 53)&amp;nbsp;from:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="x"&gt;include_once(&amp;quot;geshi/geshi.php&amp;quot;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="x"&gt;include_once(&amp;quot;geshi.php&amp;quot;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you already have GeSHi installed in the &lt;span class="caps"&gt;PHP&lt;/span&gt; include path, just remove
the &lt;code&gt;geshi&lt;/code&gt; directory in your &lt;code&gt;wp-syntax/&lt;/code&gt; plugin directory, flush the
WordPress caches (if any), and load a page which uses GeSHi - it should
now use the host-wide version. If you want to still use a local version
for wp-syntax, you can move things around to where they &lt;em&gt;should&lt;/em&gt; be in
the &lt;code&gt;wp-syntax/&lt;/code&gt; plugin&amp;nbsp;directory:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mv geshi/geshi.php . &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; mv geshi/geshi/* geshi/ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rmdir geshi/geshi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;/p&gt;
Note - if you&amp;#8217;re in a shared hosting environment, or are otherwise not
able to upgrade the php-geshi package on your server yourself, you might
not want to do&amp;nbsp;this.&lt;/p&gt;
&lt;p&gt;I also &lt;a href="http://wordpress.org/support/topic/wp-syntax-move-geshi-include-path-to-allow-use-with-host-wide-geshi?replies=1#post-2556903"&gt;posted about this in the WordPress support forums&lt;/a&gt;. Hopefully
the &lt;span class="caps"&gt;WP&lt;/span&gt;-Syntax devs will include this change in the next&amp;nbsp;version&amp;#8230;&lt;/p&gt;</summary><category term="GeSHi"></category><category term="PHP"></category><category term="syntax highlighting"></category><category term="wordpress"></category></entry><entry><title>Vyatta - Showing ISC dhcpd fixed-address leases</title><link href="/2011/12/vyatta-showing-isc-dhcpd-fixed-address-leases/" rel="alternate"></link><updated>2011-12-24T14:42:00-05:00</updated><author><name>admin</name></author><id>tag:,2011-12-24:2011/12/vyatta-showing-isc-dhcpd-fixed-address-leases/</id><summary type="html">&lt;p&gt;&lt;span class="caps"&gt;ISC&lt;/span&gt; &lt;a href="http://www.isc.org/software/dhcp"&gt;dhcpd&lt;/a&gt; has the ability to always give a specific &lt;span class="caps"&gt;MAC&lt;/span&gt; address the
same &lt;span class="caps"&gt;IP&lt;/span&gt; address &amp;#8220;lease&amp;#8221; using the fixed-address configuration option.
This is configured in &lt;a href="http://www.vyatta.org"&gt;Vyatta&lt;/a&gt; using the &lt;code&gt;static-mapping&lt;/code&gt;
configuration statement. Unfortunately, since dhcpd doesn&amp;#8217;t store
fixed-address leases in the &lt;code&gt;dhcpd.leases&lt;/code&gt; file, the Vyatta
&lt;code&gt;show dhcp leases&lt;/code&gt; command doesn&amp;#8217;t show anything about them - which
makes it difficult to debug anything dhcp-related if all of the hosts on
your network are setup for fixed addresses. I found a mention of this on
the &lt;a href="http://www.vyatta.org/forum/viewtopic.php?p=121558"&gt;vyatta forum&lt;/a&gt;, and also an &lt;a href="https://bugzilla.vyatta.com/show_bug.cgi?id=1990"&gt;open bug (1990)&lt;/a&gt; to fix it, but no
proposed resolution. Since I came across this problem and happen to know
a bit about &lt;span class="caps"&gt;ISC&lt;/span&gt; dhcpd, I developed both a workaround for users
(including a perl script) and a possible solution for the Vyatta
developers to&amp;nbsp;implement.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Workaround for&amp;nbsp;Users:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There&amp;#8217;s no way to get dhcpd to store fixed-address hosts in the
dhcpd.leases file (though it&amp;#8217;s been discussed on the dhcpd-users mailing
list a few times). There is, however, a way to get dhcpd to log every
time it sends an &lt;span class="caps"&gt;ACK&lt;/span&gt; to a client. The following Vyatta configuration
commands will get dhcpd to log all transactions to syslog, will have
&lt;a href="http://rsyslog.com/"&gt;rsyslog&lt;/a&gt; put that in &lt;code&gt;/var/log/user/dhcpd&lt;/code&gt;. Since this log can fill
up very quickly on a busy server, the latter two commands will tell
&lt;a href="https://fedorahosted.org/logrotate/"&gt;logrotate&lt;/a&gt; to rotate the log file when it reaches 3000k in size, and
keep 5 copies (feel free to adjust to your&amp;nbsp;needs):&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;set service dhcp-server global-parameters &amp;quot;log-facility local2;&amp;quot;
set system syslog file dhcpd facility local2 level debug
set system syslog file dhcpd archive files 5
set system syslog file dhcpd archive size 3000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once this is done, you can &lt;code&gt;tail -f /var/log/user/dhcpd&lt;/code&gt; to watch &lt;span class="caps"&gt;DHCP&lt;/span&gt;
discover/request/offer/ack in realtime, or grep through the log file for
a specific &lt;span class="caps"&gt;IP&lt;/span&gt; or &lt;span class="caps"&gt;MAC&lt;/span&gt;. If you want an easier method, I&amp;#8217;ve written a perl
script (latest version will always live in &lt;a href="http://svn.jasonantman.com/misc-scripts/show_dhcp_fixed_ACKs.pl"&gt;my subversion repo&lt;/a&gt;) to
grep through &lt;code&gt;/var/log/user/dhcpd&lt;/code&gt; and show the most recent &lt;span class="caps"&gt;DHCPACK&lt;/span&gt; for
each &lt;span class="caps"&gt;IP&lt;/span&gt; address, sorted by &lt;span class="caps"&gt;IP&lt;/span&gt;. Here&amp;#8217;s the code of the simple script,
which is more than half comments. To use it, after performing the above
steps, all you need to do is login to your Vyatta box,
&lt;code&gt;wget http://svn.jasonantman.com/misc-scripts/show_dhcp_fixed_ACKs.pl&lt;/code&gt;
and then &lt;code&gt;perl show_dhcp_fixed_ACKs.pl&lt;/code&gt;.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#!/usr/bin/perl&lt;/span&gt;

&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# show_dhcp_fixed_ACKs.pl - script to show the most recent &lt;span class="caps"&gt;DHCP&lt;/span&gt; ACKs per &lt;span class="caps"&gt;IP&lt;/span&gt; address for &lt;span class="caps"&gt;ISC&lt;/span&gt; DHCPd,&lt;/span&gt;
&lt;span class="c1"&gt;#   from a log file. Originally written for Vyatta routers that just show the dynamic leases.&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# To use this, you need to have dhcpd logging to syslog, and your syslog server putting the log file at&lt;/span&gt;
&lt;span class="c1"&gt;# /var/log/user/dhcpd (or a file path specified by the $logfile variable below.&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# To accomplish this on Vyatta 6.3, run:&lt;/span&gt;
&lt;span class="c1"&gt;# set service dhcp-server global-parameters &amp;quot;log-facility local2;&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# set system syslog file dhcpd facility local2 level debug&lt;/span&gt;
&lt;span class="c1"&gt;# set system syslog file dhcpd archive files 5&lt;/span&gt;
&lt;span class="c1"&gt;# set system syslog file dhcpd archive size 3000&lt;/span&gt;
&lt;span class="c1"&gt;# commit&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Copyright 2011 Jason Antman  All Rights Reserved.&lt;/span&gt;
&lt;span class="c1"&gt;# This script is free for use by anyone anywhere, provided that you comply with the following terms:&lt;/span&gt;
&lt;span class="c1"&gt;# 1) Keep this notice and copyright statement intact.&lt;/span&gt;
&lt;span class="c1"&gt;# 2) Send any substantial changes, improvements or bog fixes back to me at the above address.&lt;/span&gt;
&lt;span class="c1"&gt;# 3) If you include this in a product or redistribute it, you notify me, and include my name in the credits or changelog.&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# The following &lt;span class="caps"&gt;URL&lt;/span&gt; always points to the newest version of this script. If you obtained it from another source, you should&lt;/span&gt;
&lt;span class="c1"&gt;# check here:&lt;/span&gt;
&lt;span class="c1"&gt;# $HeadURL$&lt;/span&gt;
&lt;span class="c1"&gt;# $LastChangedRevision$&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# &lt;span class="caps"&gt;CHANGELOG&lt;/span&gt;:&lt;/span&gt;
&lt;span class="c1"&gt;# 2011-12-24 jason@jasonantman.com:&lt;/span&gt;
&lt;span class="c1"&gt;#    initial version of script&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;

&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="n"&gt;strict&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="n"&gt;warnings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$logfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/var/log/user/dhcpd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;%data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nb"&gt;open&lt;/span&gt; &lt;span class="n"&gt;&lt;span class="caps"&gt;DF&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$logfile&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;die&lt;/span&gt; &lt;span class="vg"&gt;$!&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$line&lt;/span&gt; &lt;span class="o"&gt;!~&lt;/span&gt; &lt;span class="sr"&gt;m/dhcpd: &lt;span class="caps"&gt;DHCPACK&lt;/span&gt;/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
    &lt;span class="nv"&gt;$line&lt;/span&gt; &lt;span class="o"&gt;=~&lt;/span&gt; &lt;span class="sr"&gt;m/([A-Za-z]+ [0-9]+ [0-9]{1,2}:[0-9]{2}:[0-9]{2}) [^\/x]+ dhcpd: &lt;span class="caps"&gt;DHCPACK&lt;/span&gt; on (\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}) to ((?:[0-9a-f]{2}[:-]){5}[0-9a-f]{2}) via (.+)/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;#print &amp;quot;$1==$2==$3==$4==\n&amp;quot; ;&lt;/span&gt;
    &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;$2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;mac&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;$2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;$2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;if&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;$2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ip&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%-18s %-20s %-18s %-10s\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;span class="caps"&gt;IP&lt;/span&gt; Address&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Hardware Address&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Interface&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%-18s %-20s %-18s %-10s\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;----------&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;----------------&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;----&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;---------&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;# begin sort by &lt;span class="caps"&gt;IP&lt;/span&gt; address&lt;/span&gt;
&lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;@keys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="nb"&gt;map&lt;/span&gt;  &lt;span class="nb"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="nb"&gt;sort&lt;/span&gt;
  &lt;span class="nb"&gt;map&lt;/span&gt;  &lt;span class="nb"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;C4&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="sr"&gt;/(\d+)\.(\d+)\.(\d+)\.(\d+)/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;keys&lt;/span&gt; &lt;span class="nv"&gt;%data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;# end sort by &lt;span class="caps"&gt;IP&lt;/span&gt; address&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;@keys&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%-18s %-20s %-18s %-10s\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;}{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ip&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;}{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;mac&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;}{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;}{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;if&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;A solution for&amp;nbsp;Vyatta:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I suggested this to Vyatta in a reply to &lt;a href="https://bugzilla.vyatta.com/show_bug.cgi?id=1990"&gt;bug 1990&lt;/a&gt;.
Since they already use &lt;a href="http://rsyslog.com/"&gt;rsyslog&lt;/a&gt; which has very powerful processing
capabilities, it would be easy to have rsyslog parse the &lt;span class="caps"&gt;DHCPACK&lt;/span&gt;
messages in real time and update some data store (flat files or a simple
database) with the information. While how to store this would be up to
the Vyatta guys, I have some rsyslog configuration to parse &lt;span class="caps"&gt;DHCPACK&lt;/span&gt;
messages and update a MySQL database (with two tables; one for most
recent &lt;span class="caps"&gt;ACK&lt;/span&gt; per &lt;span class="caps"&gt;IP&lt;/span&gt; address and one for most recent &lt;span class="caps"&gt;ACK&lt;/span&gt; per &lt;span class="caps"&gt;MAC&lt;/span&gt; address)
that might be of some&amp;nbsp;use:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$template DHCPACKonIP, &amp;quot;INSERT INTO dhcplog_ip   
       SET   
       server_ip=inet_aton(&amp;#39;%fromhost-ip%&amp;#39;),   
       msg_type=&amp;#39;DHCPACK&amp;#39;,   
       date=&amp;#39;%timereported:::date-mysql%&amp;#39;,   
       mac_addr=&amp;#39;%msg:R,ERE,2,BLANK:DHCPACK on ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) to (([0-9a-f]{2}:){5}[0-9a-f]{2})( \(([^)]+)\))? via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;,   
       client_ip=inet_aton(&amp;#39;%msg:R,ERE,1,BLANK:DHCPACK on ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) to (([0-9a-f]{2}:){5}[0-9a-f]{2})( \(([^)]+)\))? via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;),   
       gateway=&amp;#39;%msg:R,ERE,6,BLANK:DHCPACK on ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) to (([0-9a-f]{2}:){5}[0-9a-f]{2})( \(([^)]+)\))? via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;,   
       fullmsg=&amp;#39;%msg%&amp;#39;   
       ON DUPLICATE KEY UPDATE   
       server_ip=inet_aton(&amp;#39;%fromhost-ip%&amp;#39;),   
       date=&amp;#39;%timereported:::date-mysql%&amp;#39;,   
       mac_addr=&amp;#39;%msg:R,ERE,2,BLANK:DHCPACK on ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) to (([0-9a-f]{2}:){5}[0-9a-f]{2})( \(([^)]+)\))? via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;,   
       gateway=&amp;#39;%msg:R,ERE,6,BLANK:DHCPACK on ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) to (([0-9a-f]{2}:){5}[0-9a-f]{2})( \(([^)]+)\))? via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;,   
       fullmsg=&amp;#39;%msg%&amp;#39;  
&amp;quot;,SQL

$template DHCPACKonMAC, &amp;quot;INSERT INTO dhcplog_mac   
       SET   
       server_ip=inet_aton(&amp;#39;%fromhost-ip%&amp;#39;),   
       msg_type=&amp;#39;DHCPACK&amp;#39;,   
       date=&amp;#39;%timereported:::date-mysql%&amp;#39;,   
       mac_addr=&amp;#39;%msg:R,ERE,2,BLANK:DHCPACK on ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) to (([0-9a-f]{2}:){5}[0-9a-f]{2})( \(([^)]+)\))? via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;,   
       client_ip=inet_aton(&amp;#39;%msg:R,ERE,1,BLANK:DHCPACK on ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) to (([0-9a-f]{2}:){5}[0-9a-f]{2})( \(([^)]+)\))? via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;),   
       gateway=&amp;#39;%msg:R,ERE,6,BLANK:DHCPACK on ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) to (([0-9a-f]{2}:){5}[0-9a-f]{2})( \(([^)]+)\))? via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;,   
       fullmsg=&amp;#39;%msg%&amp;#39;   
       ON DUPLICATE KEY UPDATE   
       server_ip=inet_aton(&amp;#39;%fromhost-ip%&amp;#39;),   
       date=&amp;#39;%timereported:::date-mysql%&amp;#39;,   
       client_ip=inet_aton(&amp;#39;%msg:R,ERE,1,BLANK:DHCPACK on ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) to (([0-9a-f]{2}:){5}[0-9a-f]{2})( \(([^)]+)\))? via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;),   
       gateway=&amp;#39;%msg:R,ERE,6,BLANK:DHCPACK on ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) to (([0-9a-f]{2}:){5}[0-9a-f]{2})( \(([^)]+)\))? via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;,   
       fullmsg=&amp;#39;%msg%&amp;#39;  
&amp;quot;,SQL

$template DHCPACKtoIP, &amp;quot;INSERT INTO dhcplog_ip   
       SET   
       server_ip=inet_aton(&amp;#39;%fromhost-ip%&amp;#39;),   
       msg_type=&amp;#39;DHCPACK&amp;#39;,   
       date=&amp;#39;%timereported:::date-mysql%&amp;#39;,   
       mac_addr=&amp;#39;%msg:R,ERE,2,BLANK:DHCPACK to ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) \((([0-9a-f]{2}:){5}[0-9a-f]{2})\) via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;,   
       client_ip=inet_aton(&amp;#39;%msg:R,ERE,1,BLANK:DHCPACK to ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) \((([0-9a-f]{2}:){5}[0-9a-f]{2})\) via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;),   
       gateway=&amp;#39;%msg:R,ERE,4,BLANK:DHCPACK to ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) \((([0-9a-f]{2}:){5}[0-9a-f]{2})\) via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;,   
       fullmsg=&amp;#39;%msg%&amp;#39;   
       ON DUPLICATE KEY UPDATE   
       server_ip=inet_aton(&amp;#39;%fromhost-ip%&amp;#39;),   
       date=&amp;#39;%timereported:::date-mysql%&amp;#39;,   
       mac_addr=&amp;#39;%msg:R,ERE,2,BLANK:DHCPACK to ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) \((([0-9a-f]{2}:){5}[0-9a-f]{2})\) via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;,   
       gateway=&amp;#39;%msg:R,ERE,4,BLANK:DHCPACK to ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) \((([0-9a-f]{2}:){5}[0-9a-f]{2})\) via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;,   
       fullmsg=&amp;#39;%msg%&amp;#39;  
&amp;quot;,SQL

$template DHCPACKtoMAC, &amp;quot;INSERT INTO dhcplog_mac   
       SET   
       server_ip=inet_aton(&amp;#39;%fromhost-ip%&amp;#39;),   
       msg_type=&amp;#39;DHCPACK&amp;#39;,   
       date=&amp;#39;%timereported:::date-mysql%&amp;#39;,   
       mac_addr=&amp;#39;%msg:R,ERE,2,BLANK:DHCPACK to ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) \((([0-9a-f]{2}:){5}[0-9a-f]{2})\) via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;,   
       client_ip=inet_aton(&amp;#39;%msg:R,ERE,1,BLANK:DHCPACK to ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) \((([0-9a-f]{2}:){5}[0-9a-f]{2})\) via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;),   
       gateway=&amp;#39;%msg:R,ERE,4,BLANK:DHCPACK to ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) \((([0-9a-f]{2}:){5}[0-9a-f]{2})\) via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;,   
       fullmsg=&amp;#39;%msg%&amp;#39;   
       ON DUPLICATE KEY UPDATE   
       server_ip=inet_aton(&amp;#39;%fromhost-ip%&amp;#39;),   
       date=&amp;#39;%timereported:::date-mysql%&amp;#39;,   
       client_ip=inet_aton(&amp;#39;%msg:R,ERE,1,BLANK:DHCPACK to ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) \((([0-9a-f]{2}:){5}[0-9a-f]{2})\) via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;),   
       gateway=&amp;#39;%msg:R,ERE,4,BLANK:DHCPACK to ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) \((([0-9a-f]{2}:){5}[0-9a-f]{2})\) via (([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|eth0)--end%&amp;#39;,   
       fullmsg=&amp;#39;%msg%&amp;#39;  
&amp;quot;,SQL

:msg, startswith, &amp;quot; DHCPACK on&amp;quot; :ommysql:hostname,database,dbuser,dbpass;DHCPACKonIP
&lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; :ommysql:hostname,database,dbuser,dbpass;DHCPACKonMAC
&lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; ~ ### &lt;span class="caps"&gt;DISCARD&lt;/span&gt;

if $msg startswith &amp;#39; &lt;span class="caps"&gt;DHCPACK&lt;/span&gt; to&amp;#39; and ( not ( $msg contains &amp;#39;no client hardware address&amp;#39; ) )   
then :ommysql:hostname,database,dbuser,dbpass;DHCPACKtoMAC
&lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; :ommysql:hostname,database,dbuser,dbpass;DHCPACKtoIP
&lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; ~ ### &lt;span class="caps"&gt;DISCARD&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="dhcpd"></category><category term="rsyslog"></category><category term="vyatta"></category></entry><entry><title>php-suhosin syslog issues</title><link href="/2011/10/php-suhosin-syslog-issues/" rel="alternate"></link><updated>2011-10-21T10:24:00-04:00</updated><author><name>admin</name></author><id>tag:,2011-10-21:2011/10/php-suhosin-syslog-issues/</id><summary type="html">&lt;p&gt;I just installed php-&lt;a href="http://www.hardened-php.net/suhosin/"&gt;suhosin&lt;/a&gt; 0.9.29 from &lt;span class="caps"&gt;EPEL&lt;/span&gt; on a CentOS 5.6 box.
I&amp;#8217;m running a whole bunch of name-based vhosts in Apache, and have a
bunch of web apps, so I opted to run suhosin in simulation mode (don&amp;#8217;t
actually block anything, but log errors) and have it log via syslog to a
single file. Unfortunately, when I configured this, the syslog messages
started showing up in the wrong place, apparently with the wrong
facility &lt;em&gt;and&lt;/em&gt; priority. After some roundabout debugging (at first
assuming syslogd to be the problem), I determined that, for whatever
really strange reason (perhaps an incorrect syslog.h on the &lt;span class="caps"&gt;EPEL&lt;/span&gt; box
that built the suhosin package?) the LOG_* constants were incorrect. I
looked up the correct integer values in &lt;code&gt;/usr/include/sys/syslog.h&lt;/code&gt; and
the following configuration directives accomplished the task&amp;nbsp;correctly:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="na"&gt;suhosin.log.syslog.facility&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;128&lt;/span&gt;
&lt;span class="c1"&gt;; 128 = LOG_LOCAL0&lt;/span&gt;

&lt;span class="na"&gt;suhosin.log.syslog.priority&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;5&lt;/span&gt;
&lt;span class="c1"&gt;; 5 = LOG_NOTICE&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This one line puts suhosin into simulation mode, where it only logs
errors instead of enforcing on&amp;nbsp;them:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="na"&gt;suhosin.simulation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;On&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="centos"></category><category term="logging"></category><category term="PHP"></category><category term="security"></category><category term="suhosin"></category><category term="syslog"></category></entry><entry><title>Quick and Simple Timestamping of Debug Logs</title><link href="/2011/09/quick-and-simple-timestamping-of-debug-logs/" rel="alternate"></link><updated>2011-09-08T07:06:00-04:00</updated><author><name>admin</name></author><id>tag:,2011-09-08:2011/09/quick-and-simple-timestamping-of-debug-logs/</id><summary type="html">&lt;p&gt;I&amp;#8217;ve been having some issues that may be &lt;a href="http://puppetlabs.com/"&gt;Puppet&lt;/a&gt;-related.
Unfortunately, Puppet (at least the old 0.25.4 client that I&amp;#8217;m running)
doesn&amp;#8217;t timestamp the debug logs sent to stdout. I know it&amp;#8217;s hanging
somewhere, but I need concrete numbers to look at. Here&amp;#8217;s a wonderfully
simple bash script that timestamps everything sent to it on stdin, and
echoes it back to&amp;nbsp;stdout:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="nv"&gt;&lt;span class="caps"&gt;DATECMD&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date +%H:%M:%S&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;while &lt;/span&gt;&lt;span class="nb"&gt;read &lt;/span&gt;line; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;$($&lt;span class="caps"&gt;DATECMD&lt;/span&gt;) $line&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Call it as simply as: &lt;code&gt;command | ~/bin/ts&lt;/code&gt;, or maybe like
&lt;code&gt;command 2&amp;gt;&amp;amp;1 | ~/bin/ts | tee foo.log&lt;/code&gt;. Dead simple, but very helpful
when the developers didn&amp;#8217;t think to timestamp debug log&amp;nbsp;output.&lt;/p&gt;</summary><category term="debugging"></category><category term="logs"></category><category term="puppet"></category><category term="sysadmin"></category><category term="timestamp"></category></entry><entry><title>Linux Memory Usage and Disk Caching</title><link href="/2011/08/linux-memory-usage-and-disk-caching/" rel="alternate"></link><updated>2011-08-23T08:17:00-04:00</updated><author><name>admin</name></author><id>tag:,2011-08-23:2011/08/linux-memory-usage-and-disk-caching/</id><summary type="html">&lt;p&gt;I recently added some &lt;a href="http://www.cacti.net"&gt;Cacti&lt;/a&gt;-based graphing to a number of
Linux-based servers prior to rolling out a new service. When I was
looking over the performance graphs of the initial testing, I noticed
that memory usage on our &lt;a href="http://www.rsyslog.com"&gt;rsyslog&lt;/a&gt; server was near 98%. Looking at
&lt;code&gt;top(1)&lt;/code&gt;, I saw numbers that agreed, though processor usage was around
99% idle, and no process appeared to be using more than 1% of memory. It
took me a minute or two to open my eyes and see past the panic of memory
usage, and finally look at the complete output from &lt;code&gt;free(1)&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;             total       used       free     shared    buffers     cached
Mem:       8171508    8032632     138876          0     162084    7253716
-/+ buffers/cache:     616832    7554676
Swap:      4192956        152    4192804
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The pertinent part is the last column: &amp;#8220;cached&amp;#8221;. It slipped my mind that
while rsyslog is writing vast amounts of data to disk, which may or may
not ever be read back, the kernel is using free memory to cache as much
of that as it reliably can. Hence the difference between what the kernel
and userland tools call &amp;#8220;free&amp;#8221;, and what most human beings (or at least
sysadmins) would consider &amp;#8220;free&amp;#8221; - or, more correctly, &amp;#8220;available for&amp;nbsp;use&amp;#8221;.&lt;/p&gt;
&lt;p&gt;When I get a chance, maybe I&amp;#8217;ll submit patches to the Cacti Memory Usage
Percent (&lt;span class="caps"&gt;SNMP&lt;/span&gt;) template to either graph cache separately, or remove it
from the&amp;nbsp;total.&lt;/p&gt;
&lt;p&gt;Interestingly, I also found a somewhat cute page entitled &amp;#8220;Help! Linux
ate my &lt;span class="caps"&gt;RAM&lt;/span&gt;!&amp;#8221; at &lt;a href="http://www.linuxatemyram.com/"&gt;http://www.linuxatemyram.com/&lt;/a&gt;.&lt;/p&gt;</summary><category term="linux"></category><category term="memory"></category><category term="rsyslog"></category><category term="syslog"></category></entry><entry><title>Netgear ReadyNAS 1100 Bug causes NFS Failure after reboot - workaround</title><link href="/2011/06/netgear-readynas-1100-bug-causes-nfs-failure-after-reboot-workaround/" rel="alternate"></link><updated>2011-06-28T08:40:00-04:00</updated><author><name>admin</name></author><id>tag:,2011-06-28:2011/06/netgear-readynas-1100-bug-causes-nfs-failure-after-reboot-workaround/</id><summary type="html">&lt;p&gt;At work, we have a [Netgear ReadyNAS 1100][]. It&amp;#8217;s a &lt;span class="caps"&gt;4TB&lt;/span&gt; &lt;span class="caps"&gt;NAS&lt;/span&gt; appliance,
a cute little 1U half-depth Linux box with 4 &lt;span class="caps"&gt;SATA&lt;/span&gt; disks, a &lt;span class="caps"&gt;RAID&lt;/span&gt;
controller, and some firmware to do a whole bunch of fancy stuff (mainly
geared towards consumers and very small shops - all configuration is
point-and-click web &lt;span class="caps"&gt;UI&lt;/span&gt;). We&amp;#8217;ve been using it for storing archived log
data and low-priority backups. At the beginning of this problem, it was
running RAIDiator 4.1.6 firmware since December of last year (over 6
months), and hadn&amp;#8217;t had any configuration changes in at least 4&amp;nbsp;months.&lt;/p&gt;
&lt;p&gt;Last week, I had to power off the unit and remove the power cables for
some rack maintenance. I went through the usual full shutdown procedure
in the web &lt;span class="caps"&gt;UI&lt;/span&gt;, and also told it to `fsck` the volumes, as that hadn&amp;#8217;t
been done in quite some time. Unfortunately, when the unit came back up,
even after I could log into the web &lt;span class="caps"&gt;UI&lt;/span&gt;, I couldn&amp;#8217;t mount the &lt;span class="caps"&gt;NFS&lt;/span&gt; shares
on my backup server. I kept getting messages&amp;nbsp;like:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@backup-server ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# mount -a&lt;/span&gt;
mount: mount to &lt;span class="caps"&gt;NFS&lt;/span&gt; server &lt;span class="s1"&gt;&amp;#39;css-readynas&amp;#39;&lt;/span&gt; failed: &lt;span class="caps"&gt;RPC&lt;/span&gt; Error: Program not registered.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;so my next step was to check &lt;span class="caps"&gt;RPC&lt;/span&gt; status of the readynas, from the
client. That was also a bit of a&amp;nbsp;surprise:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@backup-server ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# rpcinfo -p css-readynas                        &lt;/span&gt;
   program vers proto   port                                              
    100000    2   tcp    111  portmapper                                  
    100000    2   udp    111  portmapper                                  
    100011    1   udp    620  rquotad                                     
    100011    2   udp    620  rquotad                                     
    100011    1   tcp    623  rquotad                                     
    100011    2   tcp    623  rquotad                                     
    100024    1   udp  32765  status                                      
    100024    1   tcp  32765  status                                      
    100005    1   udp   2051  mountd                                      
    100005    1   tcp   3006  mountd                                      
    100005    2   udp   2051  mountd                                      
    100005    2   tcp   3006  mountd                                      
    100005    3   udp   2051  mountd                                      
    100005    3   tcp   3006  mountd 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Somewhere in that list is supposed to be nfsd, listening on port 2049.
Next, I did an nmap (port scan) of the&amp;nbsp;readynas:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@backup-server ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c"&gt;# nmap -sU -p2047-2050 css-readynas             &lt;/span&gt;

Starting Nmap 4.11 &lt;span class="o"&gt;(&lt;/span&gt; http://www.insecure.org/nmap/ &lt;span class="o"&gt;)&lt;/span&gt; at 2011-06-23 15:21 &lt;span class="caps"&gt;EDT&lt;/span&gt;
Interesting ports on css-readynas.rutgers.edu &lt;span class="o"&gt;(&lt;/span&gt;172.16.25.108&lt;span class="o"&gt;)&lt;/span&gt;:              
&lt;span class="caps"&gt;PORT&lt;/span&gt;     &lt;span class="caps"&gt;STATE&lt;/span&gt;         &lt;span class="caps"&gt;SERVICE&lt;/span&gt;                                              
2047/udp closed        dls                                                  
2048/udp closed        dls-monitor                                          
2049/udp open|filtered nfs                                                  
2050/udp closed        unknown  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Interesting. The port scan shows that &lt;em&gt;something&lt;/em&gt; is listening on port
2049. But rpcinfo doesn&amp;#8217;t seem to recognize it as a &lt;span class="caps"&gt;NFS&lt;/span&gt;&amp;nbsp;server.&lt;/p&gt;
&lt;p&gt;At this point, through FrontView (the web &lt;span class="caps"&gt;UI&lt;/span&gt;) I backed up the
configuration and went through a few reboot cycles, with no change. I
then started tweaking everything I could that I thought would restart
the &lt;span class="caps"&gt;NFS&lt;/span&gt; server - I added and removed allowed hosts for the &lt;span class="caps"&gt;NFS&lt;/span&gt; share,
enabled and disabled sync mode, etc. I started searching the [ReadyNAS
Forum][] and found a post that reported a very similar problem - [upnpd
grabbing nfsd port][]. The user reported that he was getting the same
&amp;#8220;&lt;span class="caps"&gt;RPC&lt;/span&gt; Error: Program not registered&amp;#8221; message, and in &lt;code&gt;daemon.log&lt;/code&gt; on the
ReadyNAS, found a line including &amp;#8220;storage nfsd[1087]: nfssvc: Address
already in use&amp;#8221;. I remembered that I&amp;#8217;d setup the ReadyNAS to forward all
logs to our central syslog server and, sure enough, found an identical
message that something had already bound to &lt;span class="caps"&gt;UDP&lt;/span&gt; port 2049 when &lt;span class="caps"&gt;NFS&lt;/span&gt; was
starting. I tried confirming that upnpd was disabled and rebooting, but
that didn&amp;#8217;t help. Grepping my logs for &amp;#8220;nfs&amp;#8221;&amp;nbsp;returned:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;daemon.log:Jun 23 12:43:43 css-readynas nfsd&lt;span class="o"&gt;[&lt;/span&gt;2331&lt;span class="o"&gt;]&lt;/span&gt;: nfssvc: Address already in use
daemon.log:Jun 23 15:26:33 css-readynas nfsd&lt;span class="o"&gt;[&lt;/span&gt;2724&lt;span class="o"&gt;]&lt;/span&gt;: nfssvc: Address already in use
kern.log:Jun 23 11:35:29 css-readynas kernel: Installing knfsd &lt;span class="o"&gt;(&lt;/span&gt;copyright &lt;span class="o"&gt;(&lt;/span&gt;C&lt;span class="o"&gt;)&lt;/span&gt; 1996 okir@monad.swb.de&lt;span class="o"&gt;)&lt;/span&gt;.
kern.log:Jun 23 12:43:43 css-readynas kernel: &lt;span class="caps"&gt;NFSD&lt;/span&gt;: Using /var/lib/nfs/v4recovery as the NFSv4 state recovery directory
kern.log:Jun 23 12:43:43 css-readynas kernel: &lt;span class="caps"&gt;NFSD&lt;/span&gt;: starting 90-second grace period
kern.log:Jun 23 14:56:20 css-readynas kernel: Installing knfsd &lt;span class="o"&gt;(&lt;/span&gt;copyright &lt;span class="o"&gt;(&lt;/span&gt;C&lt;span class="o"&gt;)&lt;/span&gt; 1996 okir@monad.swb.de&lt;span class="o"&gt;)&lt;/span&gt;.
kern.log:Jun 23 15:12:41 css-readynas kernel: &lt;span class="caps"&gt;NFSD&lt;/span&gt;: starting 90-second grace period
kern.log:Jun 23 15:26:33 css-readynas kernel: &lt;span class="caps"&gt;NFSD&lt;/span&gt;: Using /var/lib/nfs/v4recovery as the NFSv4 state recovery directory
kern.log:Jun 23 15:26:33 css-readynas kernel: &lt;span class="caps"&gt;NFSD&lt;/span&gt;: starting 90-second grace period
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;/p&gt;
My next step was a few more reboots, with no change. I then upgraded the
RAIDiator firmware to the latest, 4.1.7. Still no luck. I installed the
[Enable root &lt;span class="caps"&gt;SSH&lt;/span&gt;][] addon, and that&amp;#8217;s when things became very&amp;nbsp;clear:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;css-readynas:/var/log# netstat -unlp
Active Internet connections &lt;span class="o"&gt;(&lt;/span&gt;only servers&lt;span class="o"&gt;)&lt;/span&gt;
Proto Recv-Q Send-Q Local Address           Foreign Address         State       &lt;span class="caps"&gt;PID&lt;/span&gt;/Program name   
udp        0      0 0.0.0.0:2049            0.0.0.0:*                           794/snmpd           
udp        0      0 0.0.0.0:514             0.0.0.0:*                           673/syslogd         
udp        0      0 172.16.25.108:137       0.0.0.0:*                           1672/nmbd           
udp        0      0 0.0.0.0:137             0.0.0.0:*                           1672/nmbd           
udp        0      0 172.16.25.108:138       0.0.0.0:*                           1672/nmbd           
udp        0      0 0.0.0.0:138             0.0.0.0:*                           1672/nmbd           
udp        0      0 0.0.0.0:161             0.0.0.0:*                           794/snmpd           
udp        0      0 0.0.0.0:162             0.0.0.0:*                           802/snmptrapd       
udp        0      0 0.0.0.0:2086            0.0.0.0:*                           1565/rpc.mountd     
udp        0      0 127.0.0.1:22081         0.0.0.0:*                           1599/raidard        
udp        0      0 172.16.25.108:22081     0.0.0.0:*                           1599/raidard        
udp        0      0 0.0.0.0:22081           0.0.0.0:*                           1599/raidard        
udp        0      0 0.0.0.0:988             0.0.0.0:*                           819/rpc.rquotad     
udp        0      0 0.0.0.0:5353            0.0.0.0:*                           729/avahi-daemon: r 
udp        0      0 0.0.0.0:111             0.0.0.0:*                           666/portmap         
udp        0      0 0.0.0.0:881             0.0.0.0:*                           1553/rpc.statd      
udp        0      0 0.0.0.0:32765           0.0.0.0:*                           1553/rpc.statd     
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;/p&gt;
For some &lt;strong&gt;&lt;em&gt;very&lt;/em&gt;&lt;/strong&gt; strange reason, snmpd had bound to port 2049 (the
nfs port) instead of 161. That left no port for nfs to bind&amp;nbsp;to.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;

wzxhzdk:5


Stop snmpd, restart nfs-kernel-server so that it grabs port 2049 like it
should, and then start snmpd back up. If all went well, nfsd should now
be listening on &lt;span class="caps"&gt;UDP&lt;/span&gt; 2049, and snmpd should be listening on &lt;span class="caps"&gt;UDP&lt;/span&gt; 161 like
it should. To confirm:


wzxhzdk:6


All is well. Now to confirm this from the client machine:


wzxhzdk:7


Ok, &lt;span class="caps"&gt;NFS&lt;/span&gt; is now there. It all looks good, and re-running `mount -a` on
the client successfully mounts the &lt;span class="caps"&gt;NFS&lt;/span&gt; share.

We&amp;#8217;ll see what happens next time I have to reboot the ReadyNAS. In the
mean time, I&amp;#8217;m going to try to bring this to the attention of Netgear
support and hope they do something about it.

  [Netgear ReadyNAS 1100]: http://www.readynas.com/?cat=23
  [ReadyNAS Forum]: http://www.readynas.com/forum/
  [upnpd grabbing nfsd port]: http://www.readynas.com/forum/viewtopic.php?f=20&amp;t=23139
  [Enable root &lt;span class="caps"&gt;SSH&lt;/span&gt;]:&amp;nbsp;http://www.readynas.com/?p=4203</summary><category term="appliance"></category><category term="embedded"></category><category term="linux"></category><category term="nas"></category><category term="netgear"></category><category term="nfs"></category><category term="readynas"></category></entry><entry><title>Simple Diagrams of MySQL Schema</title><link href="/2011/05/simple-diagrams-of-mysql-schema/" rel="alternate"></link><updated>2011-05-04T08:47:00-04:00</updated><author><name>admin</name></author><id>tag:,2011-05-04:2011/05/simple-diagrams-of-mysql-schema/</id><summary type="html">&lt;p&gt;Jess Robinson&amp;#8217;s &lt;a href="http://search.cpan.org/~jrobinson/SQL-Translator/"&gt;&lt;span class="caps"&gt;SQL&lt;/span&gt;-Translator&lt;/a&gt; &lt;span class="caps"&gt;CPAN&lt;/span&gt; module translates and parses &lt;span class="caps"&gt;SQL&lt;/span&gt;
statements. The &lt;a href="http://sqlfairy.sourceforge.net/"&gt;SQLfairy&lt;/a&gt; project has some nice binaries that, among
other things, use GraphViz or &lt;span class="caps"&gt;GD&lt;/span&gt; to draw pseudo-&lt;span class="caps"&gt;ER&lt;/span&gt; diagrams from &lt;span class="caps"&gt;SQL&lt;/span&gt;
&lt;span class="caps"&gt;CREATE&lt;/span&gt; statements. Drawing a diagram of an &lt;span class="caps"&gt;SQL&lt;/span&gt; schema is as easy as
&lt;code&gt;sqlt-diagram --db=MySQL -o schema.png -i png -t "title" --color --gutter 100 -c 2 schema-erd.sql&lt;/code&gt;.
There are a few minor issues - the program seems to choke on the &lt;span class="caps"&gt;LOCK&lt;/span&gt;
&lt;span class="caps"&gt;TABLES&lt;/span&gt; statements in &lt;code&gt;mysqldump&lt;/code&gt; output. But overall, the results are
quite nice. The script can take (as easy as putting it in a Makefile)
mysqldump output and generate a diagram like the one below, including
foreign key constraints. I also found a simple intro and example in a
post on &lt;a href="http://nsaunders.wordpress.com/2009/01/11/easy-visualisation-of-database-schemas-using-sqlfairy/"&gt;Neil Saunders&lt;/a&gt;&amp;#8216;&amp;nbsp;blog.&lt;/p&gt;
&lt;p&gt;&lt;img alt="sqlfairy output" src="/GFX/sqlfairy.png" /&gt;&lt;/p&gt;</summary><category term="database"></category><category term="db"></category><category term="diagram"></category><category term="mysql"></category><category term="sql"></category></entry><entry><title>Using wireshark to capture packets from a remote host</title><link href="/2011/04/using-wireshark-to-capture-packets-from-a-remote-host/" rel="alternate"></link><updated>2011-04-26T10:50:00-04:00</updated><author><name>admin</name></author><id>tag:,2011-04-26:2011/04/using-wireshark-to-capture-packets-from-a-remote-host/</id><summary type="html">&lt;p&gt;I spend a fair amount of my time debugging network and service problems
on a few racks of Linux servers. Of course, they&amp;#8217;re located in a data
center (yes, just downstairs, but still not quite as comfortable as my
office), and they&amp;#8217;re all command-line only - no sense in using up &lt;span class="caps"&gt;RAM&lt;/span&gt;
and &lt;span class="caps"&gt;CPU&lt;/span&gt; to run a graphical &lt;span class="caps"&gt;UI&lt;/span&gt; on a box that should just be serving
remote clients. I used to go through the arduous task of running a
command line [&lt;code&gt;tcpdump&lt;/code&gt;][] session on the server until I thought I had
enough packets, then SCPing it over to my workstation and opening the
file in &lt;a href="http://www.wireshark.org/"&gt;wireshark&lt;/a&gt; (formerly Ethereal). Fortunately, thanks to a
&lt;a href="http://linuxexplore.wordpress.com/2010/05/30/remote-packet-capture-using-wireshark-tcpdump/"&gt;post&lt;/a&gt; on Rahul Panwar&amp;#8217;s &lt;a href="http://linuxexplore.wordpress.com/"&gt;Linux Explore blog&lt;/a&gt; (which seems to be
sadly neglected), I found a much easier way to do it. I&amp;#8217;ve summarized
that post here, added a little explanation, and also made some useful
comments for people working on Red Hat/CentOS and&amp;nbsp;OpenSuSE.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What you&amp;nbsp;need:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Source system (the server you want to capture packets on) that you
    have &lt;span class="caps"&gt;SSH&lt;/span&gt; access to, with tcpdump installed, and available to your
    user (either directly, or via sudo without&amp;nbsp;password).&lt;/li&gt;
&lt;li&gt;Destination system (where you run graphical Wireshark) with
    wireshark installed and working, and &lt;code&gt;mkfifo&lt;/code&gt; available.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Procedure:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;On the destination system, if you haven&amp;#8217;t already done&amp;nbsp;so,&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mkfifo /tmp/packet_capture
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&amp;lt;p&amp;gt;
This creates a [named pipe][] where the source packet data (via ssh)
will be written and Wireshark will read it from. You can use any
name or location you want, but `/tmp/packet_capture` is pretty
logical.
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;On your destination system, open up Wireshark (we do this now, since
    on many systems it required the root password to start). In the
    &amp;#8220;Capture&amp;#8221; menu, select &amp;#8220;Options&amp;#8221;. In the &amp;#8220;Interface&amp;#8221; box, type in
    the path to the &lt;span class="caps"&gt;FIFO&lt;/span&gt; you created (&lt;code&gt;/tmp/packet_capture&lt;/code&gt;). You should
    press the Start button before running the next command - I recommend
    typing the command in a terminal window, pressing start, then
    hitting enter in the terminal to run the&amp;nbsp;command.&lt;/li&gt;
&lt;li&gt;On the destination system,&amp;nbsp;run&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;ssh user@source-hostname &lt;span class="s2"&gt;&amp;quot;sudo /usr/sbin/tcpdump -s 0 -U -n -w - -i eth0 not port 22&amp;quot;&lt;/span&gt; &amp;gt; /tmp/packet_capture
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&amp;lt;p&amp;gt;
This will SSH to the source system (`source-hostname`, either by
hostname or IP) as the specified user (`user`) and execute
`sudo /usr/sbin/tcpdump`. Omit the &amp;quot;sudo&amp;quot; if you don&amp;#39;t need it,
though if you do, you&amp;#39;ll need passwordless access. Options passed to
tcpdump are: &amp;quot;-s 0&amp;quot; snarf entire packets, no length limit; &amp;quot;-U&amp;quot;
packet-buffered output - write each complete packet to output once
it&amp;#39;s captured, rather than waiting for a buffer to fill up; &amp;quot;-n&amp;quot;
don&amp;#39;t convert addresses to hostnames; &amp;quot;-w -&amp;quot; write raw packets to
STDOUT (which will be passed through the SSH tunnel and become
STDOUT of the &amp;quot;ssh&amp;quot; command on the destination machine); &amp;quot;-i eth0&amp;quot;
capture on interface eth0; &amp;quot;not port 22&amp;quot; a tcpdump filter expression
to prevent capturing our own SSH packets (more on this below). The
final &amp;quot;\&amp;gt; /tmp/packet\_capture&amp;quot; redirects the STDOUT of the ssh
program (the raw packets from tcpdump on the source machine) to the
`/tmp/packet_capture` FIFO.
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;When you&amp;#8217;re ready to stop the capture, just Ctrl+C the &lt;span class="caps"&gt;SSH&lt;/span&gt; command
    in the terminal window. Wireshark will automatically stop capturing,
    and you can save the capture file or play around with it. To capture
    again, you&amp;#8217;ll need to restart the capture in Wireshark and then run
    the ssh command&amp;nbsp;again.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;A note on network usage and tcpdump&amp;nbsp;filters&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is a relatively bandwidth intensive procedure. If you use the &amp;#8220;not
port 22&amp;#8221; tcpdump filter (shown above) on the source machine, all traffic
over eth0 (other than &lt;span class="caps"&gt;SSH&lt;/span&gt;) on that machine will be duplicated within an
&lt;span class="caps"&gt;SSH&lt;/span&gt; tunnel. So you have double the traffic, plus the overhead of
tunneling all that within &lt;span class="caps"&gt;SSH&lt;/span&gt; to the destination machine. If you&amp;#8217;re
capturing data from a busy machine this way, you could easily saturate
the uplink and wreak all sorts of havoc. As a result, I&amp;#8217;d recommend
making the tcpdump filter as specific as you can while still retaining
the data you need. If you can replace it with a filter for specific
ports (i.e. &lt;code&gt;'(port 67 or port 68)'&lt;/code&gt; for &lt;span class="caps"&gt;DHCP&lt;/span&gt;) or specific hosts, that
should cut down on the amount of data you actually have to pass through
the&amp;nbsp;tunnel.&lt;/p&gt;</summary><category term="ethereal"></category><category term="linux"></category><category term="sysadmin"></category><category term="tcpdump"></category><category term="troubleshooting"></category><category term="wireshark"></category></entry><entry><title>How to Find Network Settings in various operating systems</title><link href="/2011/02/how-to-find-network-settings-in-various-operating-systems/" rel="alternate"></link><updated>2011-02-16T21:34:00-05:00</updated><author><name>admin</name></author><id>tag:,2011-02-16:2011/02/how-to-find-network-settings-in-various-operating-systems/</id><summary type="html">&lt;p&gt;Since I&amp;#8217;m occasionally asked these things, here&amp;#8217;s how to find some
commonly needed network information in various operating systems - for
now, Windows, Mac &lt;span class="caps"&gt;OS&lt;/span&gt; X and Linux, as well as Android and iOS
(iPhone/iPad/etc.). My assumption is that the people running &lt;span class="caps"&gt;BSD&lt;/span&gt;,
Solaris, etc. (and yes, all of those have visited my blog) know this
stuff. I won&amp;#8217;t go into descriptions of what these &amp;#8220;strange&amp;#8221; things&amp;nbsp;are.&lt;/p&gt;
&lt;p&gt;First off, I know that most desktop computer users are used to doing
everything graphically. If you know what you want to do, the command
line is a lot faster. There&amp;#8217;s no reason to fear it. Watching a cooking
show might be wonderful if you have no idea how to cook a meal, but it&amp;#8217;s
not very efficient if you just need the list of&amp;nbsp;ingredients.&lt;/p&gt;
&lt;p&gt;First off, how to get a command&amp;nbsp;prompt:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: For &lt;span class="caps"&gt;XP&lt;/span&gt; and before, Start -&gt; Run -&gt; type &amp;#8220;cmd&amp;#8221;, click
    Ok. For Vista, Start -&gt; type &amp;#8220;cmd&amp;#8221;, click&amp;nbsp;it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mac &lt;span class="caps"&gt;OS&lt;/span&gt; X&lt;/strong&gt;:Applications -&gt; Utilities -&gt; Terminal&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Linux/Unix&lt;/strong&gt;: Konsole, Xterm, whatever else you use, or just drop
    to command line/runlevel&amp;nbsp;3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the following examples, anything in &lt;code&gt;monospace font&lt;/code&gt; should be typed
exactly as is at the command prompt. &lt;em&gt;Note: some of this may need to be
run as Administrator/root. If you&amp;#8217;re using Windows Vista or newer, once
&amp;#8220;cmd&amp;#8221; appears under Programs, right-click it and select Run as
Administrator. On Mac or Linux, you may have to run as sudo, and you may
have to specify an absolute (full)&amp;nbsp;path.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Default Gateway&lt;/strong&gt; - on a simple home network, this is the &lt;span class="caps"&gt;IP&lt;/span&gt; address
of your&amp;nbsp;router.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;route PRINT&lt;/code&gt;, look for the line beginning with
    &amp;#8220;Default&amp;nbsp;Gateway:&amp;#8221;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mac &lt;span class="caps"&gt;OS&lt;/span&gt; X&lt;/strong&gt;: &lt;code&gt;route get default&lt;/code&gt;, look for the &amp;#8220;gateway:&amp;#8221;&amp;nbsp;line.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;sudo /sbin/route&lt;/code&gt;, look for the line beginning with
    &amp;#8220;default&amp;#8221;, it will be the in the &amp;#8220;Gateway&amp;#8221; column. If your system
    uses iproute2, &lt;code&gt;ip route show&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;MAC&lt;/span&gt; Address&lt;/strong&gt; - The (more or less) globally unique address of your
computer&amp;#8217;s network adapter. Each network adapter (wired, wireless, etc.)
has its own. Looks like xx-xx-xx-xx-xx-xx or xx:xx:xx:xx:xx:xx or
xxxxxx:xxxxxx where each &amp;#8220;x&amp;#8221; is a number from 0 to 9 or a letter from a
to&amp;nbsp;f.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;ipconfig /all&lt;/code&gt;, look for the name of your network
    connection and then the indented line starting with &amp;#8220;Physical&amp;nbsp;Address&amp;#8221;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mac &lt;span class="caps"&gt;OS&lt;/span&gt; X&lt;/strong&gt;: &lt;code&gt;ifconfig&lt;/code&gt;, look for your network adapter (en0 is
    wired ethernet, en1 is your AirPort), the address will be on a line
    after&amp;nbsp;&amp;#8220;ether&amp;#8221;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;ifconfig&lt;/code&gt;, look for &amp;#8220;HWaddr&amp;#8221; for the right&amp;nbsp;interface.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;WAN&lt;/span&gt; (Internet or External) &lt;span class="caps"&gt;IP&lt;/span&gt; Address)&lt;/strong&gt; - Go to
&lt;a href="http://whatismyip.jasonantman.com"&gt;whatismyip.jasonantman.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ping another host&lt;/strong&gt; - A ping test shows (simple explanation) how long
it takes packets to get from your computer to another. (For you Warcraft
players, this isn&amp;#8217;t the same as the ping times shown in-game, and you
can&amp;#8217;t ping the realm&amp;nbsp;servers).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;ping -t IPaddress&lt;/code&gt;, the &lt;code&gt;-t&lt;/code&gt; makes it run until you
    type Control-C to stop&amp;nbsp;it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Everything else&lt;/strong&gt;: &lt;code&gt;ping IPaddress&lt;/code&gt;Ctrl-C (or whatever your &lt;span class="caps"&gt;OS&lt;/span&gt;
    uses) to stop&amp;nbsp;it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;#8217;ll update this with more when I get&amp;nbsp;time&amp;#8230;&lt;/p&gt;</summary><category term="linux"></category><category term="mac"></category><category term="networking"></category><category term="troubleshooting"></category><category term="windows"></category></entry><entry><title>Consolidation of nmap port scan results to HTML table</title><link href="/2011/01/consolidation-of-nmap-port-scan-results-to-html-table/" rel="alternate"></link><updated>2011-01-30T20:00:00-05:00</updated><author><name>admin</name></author><id>tag:,2011-01-30:2011/01/consolidation-of-nmap-port-scan-results-to-html-table/</id><summary type="html">&lt;p&gt;I spent a good part of the weekend auditing the security of my
infrastructure at home, since I haven&amp;#8217;t given it much attention lately.
One of my first steps was doing a port scan with &lt;a href="http://www.nmap.org"&gt;nmap&lt;/a&gt; of my public
IPs from a remote host, both to make sure there&amp;#8217;s nothing showing up
that shouldn&amp;#8217;t be and to get an idea of what a potential attacker might
see. However, given all of nmap&amp;#8217;s options for different &lt;span class="caps"&gt;TCP&lt;/span&gt; scans, it
seemed like a lot of data to sort through. Without finding any good
solution in my cursory search, I wrote up a little &lt;span class="caps"&gt;PHP&lt;/span&gt; script that takes
any number of &lt;span class="caps"&gt;XML&lt;/span&gt; nmap scan files on the command line, parses out the
hosts and ports found in each of them, and presents a nice table showing
the result for each host/port for each scan&amp;nbsp;file.&lt;/p&gt;
&lt;p&gt;The current version of the script can be found at
&lt;a href="http://svn.jasonantman.com/misc-scripts/nmap-xml-to-table.php"&gt;http://svn.jasonantman.com/misc-scripts/nmap-xml-to-table.php&lt;/a&gt;, and
simply called as &lt;code&gt;./nmap-xml-to-table.php file1.xml file2.xml [...]&lt;/code&gt; and
outputs &lt;span class="caps"&gt;HTML&lt;/span&gt; to&amp;nbsp;stdout.&lt;/p&gt;</summary><category term="nmap"></category><category term="security"></category></entry><entry><title>Vyatta VC5 - Snort alerts to syslog</title><link href="/2011/01/vyatta-vc5-snort-alerts-to-syslog/" rel="alternate"></link><updated>2011-01-30T19:54:00-05:00</updated><author><name>admin</name></author><id>tag:,2011-01-30:2011/01/vyatta-vc5-snort-alerts-to-syslog/</id><summary type="html">&lt;p&gt;I&amp;#8217;m running a &lt;a href="http://www.vyatta.org"&gt;Vyatta&lt;/a&gt; vyatta router at home - in my opinion it&amp;#8217;s
pretty near &amp;#8220;enterprise grade&amp;#8221;, and I&amp;#8217;m running the Community/Core
(read: no-cost and almost all Free) on commodity hardware with great
performance. Granted, I&amp;#8217;m still on the older version (5 as opposed to
the current 6) since an upgrade will require total downtime and a spare
set of &lt;span class="caps"&gt;SCSI&lt;/span&gt; disks for the machine it&amp;#8217;s on, but it still works quite
well. Today I decided to enable the &lt;a href="http://www.snort.org"&gt;Snort&lt;/a&gt; &lt;span class="caps"&gt;IDS&lt;/span&gt; on the box. It
actually worked quite well (albeit stuck at older rules until I upgrade
to Vyatta &lt;span class="caps"&gt;VC6&lt;/span&gt;) and didn&amp;#8217;t put much more load on the box. For the time
being I decided to just have it alert on problems and not drop anything,
as I&amp;#8217;m getting pretty high false positives and the older Vyatta version
doesn&amp;#8217;t seem to have a way to disregard&amp;nbsp;rules.&lt;/p&gt;
&lt;p&gt;My biggest complaint was that Vyatta didn&amp;#8217;t see fit to allow alerts by
syslog. I&amp;#8217;m not a big fan of keeping information like &lt;span class="caps"&gt;IDS&lt;/span&gt; logs stuck on
the router - I don&amp;#8217;t like logging in to it any more than I have to, it
doesn&amp;#8217;t have much storage, and I&amp;#8217;d also like to keep stuff like this in
a more secure location. Through a bit of digging, I found the
&lt;code&gt;/opt/vyatta/share/perl5/VyattaSnortConfig.pm&lt;/code&gt; Perl module which
generates the Snort config file from Vyatta&amp;#8217;s &lt;span class="caps"&gt;CLI&lt;/span&gt; stuff. Looking through
the Perl code, I found the definition of the snort.conf output&amp;nbsp;statements:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$output_def&lt;/span&gt; &lt;span class="o"&gt;=&amp;lt;&lt;/span&gt;
&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;simply&lt;/span&gt; &lt;span class="n"&gt;added&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="n"&gt;alert_syslog:&lt;/span&gt; &lt;span class="n"&gt;log_local3&lt;/span&gt; &lt;span class="n"&gt;log_notice&lt;/span&gt; &lt;span class="n"&gt;after&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="n"&gt;alert_unified&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$output_def&lt;/span&gt; &lt;span class="o"&gt;=&amp;lt;&lt;/span&gt;
&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="n"&gt;went&lt;/span&gt; &lt;span class="n"&gt;into&lt;/span&gt; &lt;span class="n"&gt;Vyatta&lt;/span&gt; &lt;span class="n"&gt;configuration&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;changed&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;rule&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;alert&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;committed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;changed&lt;/span&gt; &lt;span class="n"&gt;back&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;committed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="sr"&gt;/etc/s&lt;/span&gt;&lt;span class="n"&gt;nort&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snort&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="n"&gt;had&lt;/span&gt; &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="n"&gt;syslog&lt;/span&gt; &lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;m now getting snort alerts to local3 in syslog, which is fed to my centralized log server. My next project is to find or write something which will parse these logs, generate a daily summary email, and maybe check them hourly and alert on any big changes. I also might just cron an emailing of the output from Vyatta&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="n"&gt;ips&lt;/span&gt; &lt;span class="n"&gt;summary&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;So&lt;/span&gt; &lt;span class="n"&gt;far&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;over&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mo"&gt;000&lt;/span&gt; &lt;span class="n"&gt;events&lt;/span&gt; &lt;span class="n"&gt;logged&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="n"&gt;hours&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="security"></category><category term="snort"></category><category term="syslog"></category><category term="vyatta"></category></entry><entry><title>Managing Ubiquiti Networks MAC ACLs from a script</title><link href="/2011/01/managing-ubiquiti-networks-mac-acls-from-a-script/" rel="alternate"></link><updated>2011-01-06T16:06:00-05:00</updated><author><name>admin</name></author><id>tag:,2011-01-06:2011/01/managing-ubiquiti-networks-mac-acls-from-a-script/</id><summary type="html">&lt;p&gt;I have a small web-based tool for allowing members of an organization to
register their wireless &lt;span class="caps"&gt;MAC&lt;/span&gt; addresses, and then automatically adding
them to the &lt;span class="caps"&gt;MAC&lt;/span&gt; &lt;span class="caps"&gt;ACL&lt;/span&gt; on &lt;a href="http://www.ubnt.com"&gt;Ubiquiti&lt;/a&gt; AirOSv2 APs. It&amp;#8217;s a pretty quick
hack, along with a simple and ugly web-based tool, but it gets the job
done for a non-profit with only 25 people. After &lt;a href="http://www.ubnt.com/forum/showthread.php?t=21133"&gt;posting about it on
the Ubiquiti forum&lt;/a&gt; and getting a request from someone for the code, I
decided to put it out there for anyone who wants it. The script is
mostly based on SCPing configs to and from the &lt;span class="caps"&gt;AP&lt;/span&gt; and SSHing in to run
commands, and will need passwordless public key auth to the&amp;nbsp;&lt;span class="caps"&gt;AP&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The code itself is in subversion at
&lt;a href="http://svn.jasonantman.com/misc-scripts/ubiquiti-mac-acl/"&gt;http://svn.jasonantman.com/misc-scripts/ubiquiti-mac-acl/&lt;/a&gt;. It&amp;#8217;s
composed of four&amp;nbsp;files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://svn.jasonantman.com/misc-scripts/ubiquiti-mac-acl/updateAPconfigs.php.inc"&gt;updateAPconfigs.php.inc&lt;/a&gt; - the main &lt;span class="caps"&gt;PHP&lt;/span&gt; file with three functions
    for working with the&amp;nbsp;APs&lt;/li&gt;
&lt;li&gt;&lt;a href="http://svn.jasonantman.com/misc-scripts/ubiquiti-mac-acl/wirelessTools.php"&gt;wirelessTools.php&lt;/a&gt; - My &lt;span class="caps"&gt;PHP&lt;/span&gt; page for users to add MACs. It&amp;#8217;s
    pretty rough and is mostly based on handling our &lt;span class="caps"&gt;LDAP&lt;/span&gt;
    authentication/group framework, but it gives a fair example of how I
    store MACs in a MySQL table and then rebuild a given &lt;span class="caps"&gt;AP&lt;/span&gt; config file
    with the current list of MACs. I doubt it will be useful to anyone
    else as more than an&amp;nbsp;example.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://svn.jasonantman.com/misc-scripts/ubiquiti-mac-acl/wireless.sql"&gt;wireless.sql&lt;/a&gt; - The schema for the &lt;span class="caps"&gt;SQL&lt;/span&gt; database I use to store&amp;nbsp;MACs.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://svn.jasonantman.com/misc-scripts/ubiquiti-mac-acl/README.txt"&gt;&lt;span class="caps"&gt;README&lt;/span&gt;.txt&lt;/a&gt; - Readme file including some warnings on the lack of
    error checking in the&amp;nbsp;functions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
Hopefully this will be of some use to someone. I should probably mention
two important things here. First, the &lt;span class="caps"&gt;AP&lt;/span&gt; only accepts up to 32 &lt;span class="caps"&gt;MAC&lt;/span&gt;
addresses, so if you feed the &lt;code&gt;makeNewConfigFile()&lt;/code&gt; function an array
with more than 32, it will just stop at the 32^nd^. Also, be aware, this
SCPs a config file to the &lt;span class="caps"&gt;AP&lt;/span&gt;, runs &lt;code&gt;cfgmtd&lt;/code&gt; and the reboots the &lt;span class="caps"&gt;AP&lt;/span&gt;. If
you send it a bad config file, who knows what will happen. If you allow
your users to add &lt;span class="caps"&gt;MAC&lt;/span&gt; addresses, your APs will reboot every time someone
adds&amp;nbsp;one.&lt;/p&gt;
&lt;p&gt;All I ask is that if you use this, leave a comment to thank me, and if
you make any changes/additions/bugfixes, please send them back to&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;Also, I have some &lt;a href="/2010/03/nagios-check-scripts/"&gt;Nagios check scripts&lt;/a&gt; that are useful for Ubiquiti&amp;nbsp;APs.&lt;/p&gt;</summary><category term="airos"></category><category term="mac"></category><category term="PHP"></category><category term="security"></category><category term="ubiquiti"></category><category term="wap"></category><category term="wireless"></category></entry><entry><title>How to get actual login username when using sudo su</title><link href="/2011/01/how-to-get-actual-login-username-when-using-sudo-su/" rel="alternate"></link><updated>2011-01-05T11:48:00-05:00</updated><author><name>admin</name></author><id>tag:,2011-01-05:2011/01/how-to-get-actual-login-username-when-using-sudo-su/</id><summary type="html">&lt;p&gt;I&amp;#8217;ve had the need to find out the actual username of someone logged in
and working as root (via &lt;code&gt;sudo su -&lt;/code&gt;) to &lt;a href="/2011/01/client-side-subversion-commit-message-hooks/"&gt;put it into a subversion
commit message&lt;/a&gt;. This quick little bash script does the trick, and
just echos the&amp;nbsp;username.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="nv"&gt;&lt;span class="caps"&gt;PID&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$$&lt;/span&gt; &lt;span class="c"&gt;# get &lt;span class="caps"&gt;PID&lt;/span&gt; of current process&lt;/span&gt;
&lt;span class="nv"&gt;LogUID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;cat /proc/&lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;PID&lt;/span&gt;&amp;quot;&lt;/span&gt;/loginuid&lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="c"&gt;# get loginuid of current process&lt;/span&gt;
&lt;span class="nv"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;getent passwd &lt;span class="s2"&gt;&amp;quot;$LogUID&amp;quot;&lt;/span&gt; | awk -F &lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="c"&gt;# translate loginuid to username&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$username&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="linux"></category><category term="login"></category><category term="sudo"></category><category term="username"></category></entry><entry><title>Client-side subversion commit message hooks</title><link href="/2011/01/client-side-subversion-commit-message-hooks/" rel="alternate"></link><updated>2011-01-05T11:23:00-05:00</updated><author><name>admin</name></author><id>tag:,2011-01-05:2011/01/client-side-subversion-commit-message-hooks/</id><summary type="html">&lt;p&gt;While I know this isn&amp;#8217;t best practice, since we use &lt;span class="caps"&gt;LDAP&lt;/span&gt;-based auth for
our Linux boxes (including a sudoers file based on &lt;span class="caps"&gt;LDAP&lt;/span&gt; group
membership), we usually do work on some boxes as root (&lt;code&gt;sudo su -&lt;/code&gt;).
This includes our &lt;a href="http://www.puppetlabs.com/"&gt;puppetmaster&lt;/a&gt;, where configs are kept in subversion
and edited as root. The one problem with this is how to get the username
of the actual committer, not root, in subversion&amp;nbsp;messages.&lt;/p&gt;
&lt;p&gt;The theory that I came up with is a &lt;a href="/2011/01/how-to-get-actual-login-username-when-using-sudo-su/"&gt;shell script that finds out who the
actual user is&lt;/a&gt;, and then tacking this onto the beginning of the
subversion commit message (since there&amp;#8217;s no real way to do client-side
hooks in subversion). While I struggled with subversion&amp;#8217;s lack of good
client hooks, I came up with a theory based on a script that preloads
svn-commit.tmp and then calls the text editor. It&amp;#8217;s actually quite&amp;nbsp;simple.&lt;/p&gt;
&lt;p&gt;First, in your .bashrc or wherever you setup environment variables,
&lt;code&gt;export SVN_EDITOR=/usr/local/bin/svnPreCommitClientHook.sh&lt;/code&gt;. This way,
every time you run &lt;code&gt;svn commit&lt;/code&gt;, instead of calling your text editor
with &lt;code&gt;svn-commit.tmp&lt;/code&gt; as an argument, the bash script will do what it
needs to (commit message preloading) with svn-commit.tmp and &lt;em&gt;then&lt;/em&gt; call
your editor to finish the&amp;nbsp;message.&lt;/p&gt;
&lt;p&gt;/usr/local/bin/svnPreCommitClientHook.sh:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;&lt;span class="caps"&gt;LOGNAME&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;/usr/local/bin/getLogname.py&lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="c"&gt;# script to get user&amp;#39;s actual login name, even if using sudo su&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\nBY: $&lt;span class="caps"&gt;LOGNAME&lt;/span&gt;&amp;quot;&lt;/span&gt; &amp;gt; svn-commit.foo
cat svn-commit.tmp &amp;gt;&amp;gt; svn-commit.foo
mv svn-commit.foo svn-commit.tmp
&lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;EDITOR&lt;/span&gt;&amp;quot;&lt;/span&gt; svn-commit.tmp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using this method, running &lt;code&gt;svn commit&lt;/code&gt; will pull up your text editor
with &amp;#8220;&lt;span class="caps"&gt;BY&lt;/span&gt;: username&amp;#8221; already inserted in the commit&amp;nbsp;message.&lt;/p&gt;</summary><category term="linux"></category><category term="puppet"></category><category term="subversion"></category><category term="svn"></category></entry><entry><title>MySQL General Query Log and Awk Trimming Columns</title><link href="/2010/12/mysql-general-query-log-and-awk-trimming-columns/" rel="alternate"></link><updated>2010-12-21T11:45:00-05:00</updated><author><name>admin</name></author><id>tag:,2010-12-21:2010/12/mysql-general-query-log-and-awk-trimming-columns/</id><summary type="html">&lt;p&gt;So today I started to implement a number of complex regex-based rules
and templates to get &lt;a href="http://www.rsyslog.com"&gt;rsyslog&lt;/a&gt; to parse &lt;span class="caps"&gt;ISC&lt;/span&gt; DHCPd logs in realtime.
Unfortunately one of my templates must have been wrong, because I
started seeing some errors about a field that cannot be blank in
&lt;code&gt;/var/log/messages&lt;/code&gt;. Unfortunately, rsyslog doesn&amp;#8217;t log the query that
raised the error, or the name of the template, or anything else useful -
just that there was a database error. With over a dozen new templates,
this didn&amp;#8217;t help much. But the following technique&amp;nbsp;did:&lt;/p&gt;
&lt;p&gt;MySQLd has a &lt;a href="http://dev.mysql.com/doc/refman/5.1/en/query-log.html"&gt;General Query Log&lt;/a&gt; that can be activated by addling a
line&amp;nbsp;like:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;log=/tmp/query.log&lt;/code&gt;&lt;br /&gt;
to &lt;code&gt;/etc/my.cnf&lt;/code&gt; under the &lt;code&gt;[mysqld]&lt;/code&gt; section. This will log *all*
queries to the specified log file, even if they resulted in an error or
did not manipulate&amp;nbsp;data.&lt;/p&gt;
&lt;p&gt;I couldn&amp;#8217;t find documentation on the log file format, but I observed
that each line appeared to begin with some whitespace, then a number
(perhaps a connection or section number, or maybe some sort of query
ordering number), then the word &amp;#8220;Query&amp;#8221;, then the query. The following
awk expression prints everything from the third column on, dropping the
first two columns (the number and&amp;nbsp;&amp;#8220;Query&amp;#8221;):  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;awk '{ for (i=2; i&amp;lt;=NF; i++) printf "%s ", $i; printf "\n"; }'&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;For easy analysis, the output of that can be piped into &lt;code&gt;sort&lt;/code&gt; and then
&lt;code&gt;uniq&lt;/code&gt;.&lt;/p&gt;</summary><category term="awk"></category><category term="database"></category><category term="logging"></category><category term="mysql"></category></entry><entry><title>Highlighting matches with grep and less</title><link href="/2010/12/highlighting-matches-with-grep-and-less/" rel="alternate"></link><updated>2010-12-09T09:08:00-05:00</updated><author><name>admin</name></author><id>tag:,2010-12-09:2010/12/highlighting-matches-with-grep-and-less/</id><summary type="html">&lt;p&gt;Yes, I haven&amp;#8217;t posted much lately. Just a quick little tip, since it
came in handy&amp;nbsp;today.&lt;/p&gt;
&lt;p&gt;Grep accepts a &lt;code&gt;--color&lt;/code&gt; argument which highlights matches in color
(assuming your terminal supports it). Passing grep &lt;code&gt;--color=always&lt;/code&gt; and
piping the output into &lt;code&gt;less -R&lt;/code&gt; will allow you to scroll through the
colorized output with less. Very handy if you&amp;#8217;re grepping through source
code with long lines or &lt;span class="caps"&gt;SQL&lt;/span&gt;&amp;nbsp;statements.&lt;/p&gt;</summary><category term="color"></category><category term="grep"></category><category term="less"></category><category term="terminal"></category></entry><entry><title>Handling mailto links on another computer</title><link href="/2010/11/handling-mailto-links-on-another-computer/" rel="alternate"></link><updated>2010-11-16T11:34:00-05:00</updated><author><name>admin</name></author><id>tag:,2010-11-16:2010/11/handling-mailto-links-on-another-computer/</id><summary type="html">&lt;p&gt;At work, I use &lt;a href="http://synergy-foss.org/"&gt;synergy&lt;/a&gt; to control two computers with the same mouse
and keyboard. My main desktop (skynet) has two monitors - generally one
for Firefox and one for my terminals - and my secondary machine
(mithrandir), a third monitor on my desk, handles email and &lt;span class="caps"&gt;IM&lt;/span&gt;. The only
real problem I&amp;#8217;ve had with this is mailto: links, which obviously don&amp;#8217;t
work since my browser and mail client are on different&amp;nbsp;computers.&lt;/p&gt;
&lt;p&gt;Getting cross-machine mailto links to work isn&amp;#8217;t all that difficult, at
least with thunderbird which accepts a &amp;#8220;-compose&amp;#8221; command line argument.
First, get passwordless pubkey &lt;span class="caps"&gt;SSH&lt;/span&gt; authentication setup from the web
browser machine to the mail client machine. Then set your mailto
handler/mail client to a shell script in your path. Finally, fill the
script in with something&amp;nbsp;like:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
ssh mithrandir &lt;span class="s2"&gt;&amp;quot;export &lt;span class="caps"&gt;DISPLAY&lt;/span&gt;=:0.0 &amp;amp;&amp;amp; thunderbird -compose &amp;#39;$@&amp;#39;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This first sets the &lt;span class="caps"&gt;DISPLAY&lt;/span&gt; environment variable so thunderbird can open
a window in the already-running X session, then invokes thunderbird
passing it the mailto: link as an argument to -compose. Note the single
quotes which prevent spaces in the link from breaking&amp;nbsp;things.&lt;/p&gt;</summary><category term="firefox"></category><category term="Thunderbird"></category></entry><entry><title>Ignoring SVN directories and save files with grep</title><link href="/2010/10/ignoring-svn-directories-and-save-files-with-grep/" rel="alternate"></link><updated>2010-10-15T07:27:00-04:00</updated><author><name>admin</name></author><id>tag:,2010-10-15:2010/10/ignoring-svn-directories-and-save-files-with-grep/</id><summary type="html">&lt;p&gt;Yes, I know I haven&amp;#8217;t posted anything useful in a while. I&amp;#8217;ve been quite
busy at work, and hopefully I&amp;#8217;ll post some of my &lt;span class="caps"&gt;DHCP&lt;/span&gt; stuff. In the&amp;nbsp;meantime&amp;#8230;&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m starting a project for the &lt;a href="http://www.midlandparkambulance.com/"&gt;ambulance corps&lt;/a&gt; migrating two Linux
boxes to a single new server. One of them has been in production for
about five years, and (partially due to the &amp;#8220;we need it yesterday&amp;#8221;
nature of emergency services) has quite a bit of cruft laying around.
Since almost everything is web-based (well, browser-based, restricted to
the &lt;span class="caps"&gt;LAN&lt;/span&gt; only), there are a lot of web apps and &lt;span class="caps"&gt;PHP&lt;/span&gt; scripts that need to
be migrated. This is made even more complicated by the switch from SuSE
10.1 (yes, ancient) to CentOS 5.4, and therefore from &lt;code&gt;/srv/www/htdocs&lt;/code&gt;
to &lt;code&gt;/var/www/html&lt;/code&gt;. I could be lazy and symlink it, but I think it&amp;#8217;s
time to search down and destroy any absolute&amp;nbsp;includes.&lt;/p&gt;
&lt;p&gt;The problem with doing this is that, with any scripts in &lt;span class="caps"&gt;SVN&lt;/span&gt;, grepping
for a string could potentially return three hits for a file - the actual
file, the emacs save file (&lt;code&gt;filename~&lt;/code&gt;) and the text file in the &lt;code&gt;.svn&lt;/code&gt;
directory.&lt;/p&gt;
&lt;p&gt;The solution is actually pretty easy. To get rid of the .svn
directories, we add &lt;code&gt;--exclude=\*.svn\*&lt;/code&gt; to our grep command line (yes,
I know, it excludes everything with &amp;#8220;.svn&amp;#8221; in the path, but that&amp;#8217;s
acceptably imprecise for my purposes). To get rid of the tilde (save)
files, all we need is &lt;code&gt;--exclude=\*~&lt;/code&gt;. It&amp;#8217;s no problem to string them
together as &lt;code&gt;grep --exclude=\*~ --exclude=\*.svn\* -rin "foo bar" *&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;
To make this even easier, just add to your `.bashrc`:&amp;nbsp;wzxhzdk:0


&lt;/p&gt;</summary><category term="grep"></category><category term="linux"></category></entry><entry><title>Getting Sun iLOM information within Linux</title><link href="/2010/09/getting-sun-ilom-information-within-linux/" rel="alternate"></link><updated>2010-09-16T10:28:00-04:00</updated><author><name>admin</name></author><id>tag:,2010-09-16:2010/09/getting-sun-ilom-information-within-linux/</id><summary type="html">&lt;p&gt;At work, I&amp;#8217;m starting to implement &lt;a href="http://www.ocsinventory-ng.org/"&gt;&lt;span class="caps"&gt;OCS&lt;/span&gt; Inventory &lt;span class="caps"&gt;NG&lt;/span&gt;&lt;/a&gt; on our Linux
boxes to keep track of hardware. Part of the plan is also that we have a
&lt;a href="http://www.mediawiki.org"&gt;MediaWiki&lt;/a&gt; installation for internal documentation, and articles for
every host (named as the hostname). I&amp;#8217;m going to pull data from &lt;span class="caps"&gt;OCS&lt;/span&gt; into
the articles based on hostname (via a &lt;span class="caps"&gt;PHP&lt;/span&gt; include) so the documentation
will automatically include up-to-date information on&amp;nbsp;hardware.&lt;/p&gt;
&lt;p&gt;Since we&amp;#8217;re moving to MySQL-backed &lt;span class="caps"&gt;DHCP&lt;/span&gt;, I decided that it would also be
nice to include &lt;span class="caps"&gt;DHCP&lt;/span&gt; information and links to our web tool to edit the
host (like setting &lt;span class="caps"&gt;PXE&lt;/span&gt; boot information). This is pretty easy for the
ethX interfaces, as &lt;span class="caps"&gt;OCS&lt;/span&gt; collects &lt;span class="caps"&gt;MAC&lt;/span&gt; addresses and I can search our &lt;span class="caps"&gt;DHCP&lt;/span&gt;
database for them. However, it isn&amp;#8217;t as simple for the iLOM interface,
which (obviously) &lt;span class="caps"&gt;OCS&lt;/span&gt; knows nothing about - though it&amp;#8217;s arguably one of
the most-forgotten things on our&amp;nbsp;machines.&lt;/p&gt;
&lt;p&gt;I know that &lt;span class="caps"&gt;HP&lt;/span&gt; Proliant servers have the nice little &lt;span class="caps"&gt;HP&lt;/span&gt; &lt;span class="caps"&gt;PSP&lt;/span&gt; (Proliant
Support Pack) that includes tools such as &lt;code&gt;hpasmcli&lt;/code&gt;, but Sun doesn&amp;#8217;t
have anything like that. (We just have one &lt;span class="caps"&gt;HP&lt;/span&gt; box in production right
now, but I&amp;#8217;ll probably be adding support for it&amp;nbsp;soon).&lt;/p&gt;
&lt;p&gt;Enter &lt;a href="http://openipmi.sourceforge.net/"&gt;OpenIPMI&lt;/a&gt;. The iLOM has an &lt;span class="caps"&gt;IPMI&lt;/span&gt; interface, and the standard
OpenIPMI-tools package in CentOS repositories has the ipmitool required
to get the relevant information. A call is pretty simple:
&lt;code&gt;ipmitool -l open lan print 1&lt;/code&gt; yields something&amp;nbsp;like:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Set in Progress         : Set Complete Auth Type Support       : NONE MD2 MD5 PASSWORD Auth Type Enable        : Callback : MD2 MD5 PASSWORD                         : User     : MD2 MD5 PASSWORD                         : Operator : MD2 MD5 PASSWORD                         : Admin    : MD2 MD5 PASSWORD                         : OEM      : IP Address Source       : DHCP Address IP Address              : 172.16.xxx.xxx Subnet Mask             : 255.255.255.224 MAC Address             : 00:14:4f:xx:xx:xx SNMP Community String   : xxxxxx IP Header               : TTL=0x00 Flags=0x00 Precedence=0x00 TOS=0x00 BMC ARP Control         : ARP Responses Disabled, Gratuitous ARP Disabled Gratituous ARP Intrvl   : 5.0 seconds Default Gateway IP      : 172.16.xx.xx Default Gateway MAC     : 00:00:00:00:00:00 Backup Gateway IP       : 0.0.0.0 Backup Gateway MAC      : 00:00:00:00:00:00 802.1q VLAN ID          : Disabled 802.1q VLAN Priority    : 0 RMCP+ Cipher Suites     : 2,3,0 Cipher Suite Priv Max   : XXXXXXXXXXXXXXX                         :     X=Cipher Suite Unused                         :     c=CALLBACK                         :     u=USER                         :     o=OPERATOR                         :     a=ADMIN                         :     O=OEM&lt;/code&gt;&lt;br /&gt;
Now it&amp;#8217;s just a matter of integrating this into ocsinventory-agent,
having it run the command if present (and Sun hardware), and parsing the
results. Once I have some actual code done, I&amp;#8217;ll pass it&amp;nbsp;along.&lt;/p&gt;
&lt;p&gt;Many thanks to &lt;code&gt;pseud0&lt;/code&gt; on the Sun forums for answering my &lt;a href="http://forums.sun.com/thread.jspa?messageID=11049794#11049794"&gt;question&lt;/a&gt;
about&amp;nbsp;this.&lt;/p&gt;</summary><category term="inventory"></category><category term="ipmi"></category><category term="ipmitool"></category><category term="ocs-inventory"></category><category term="sun"></category><category term="sunfire"></category><category term="sysadmin"></category></entry><entry><title>Getting WoW working on OpenSuSE under Wine</title><link href="/2010/09/getting-wow-working-on-opensuse-under-wine/" rel="alternate"></link><updated>2010-09-05T22:52:00-04:00</updated><author><name>admin</name></author><id>tag:,2010-09-05:2010/09/getting-wow-working-on-opensuse-under-wine/</id><summary type="html">&lt;p&gt;Ok, I&amp;#8217;ll admit it, I&amp;#8217;ve been playing &lt;a href="http://www.worldofwarcraft.com"&gt;WoW&lt;/a&gt;. I&amp;#8217;m not usually the gamer
type, but my girlfriend pressured me into it a bit and, hey, if a
woman&amp;#8217;s idea of quality time is sitting in the same room in front of
computers playing a &lt;a href="http://en.wikipedia.org/wiki/Mmorpg"&gt;&lt;span class="caps"&gt;MMORPG&lt;/span&gt;&lt;/a&gt;, who am I to complain? My non-work-hours
productivity had suffered quite a bit, but I&amp;#8217;m not yet at risk of
becoming a full-on&amp;nbsp;addict.&lt;/p&gt;
&lt;p&gt;So, for a slight diversion from the usual&amp;nbsp;content&amp;#8230;&lt;/p&gt;
&lt;p&gt;Of course, I&amp;#8217;m not going to run Windows just to play a game, and the
screen on my MacBook Pro is pitifully small compared to the 24&amp;#8221; &lt;span class="caps"&gt;LCD&lt;/span&gt; on
my desktop. So I&amp;#8217;ve been running WoW through &lt;a href="http://www.winehq.org/"&gt;Wine&lt;/a&gt; on an admittedly
out of date &lt;a href="http://www.opensuse.org/"&gt;OpenSuSE&lt;/a&gt; 11.1 install on my workstation (a Dell
Precision 470 - 2 Gb 400Mhz &lt;span class="caps"&gt;DDR&lt;/span&gt; &lt;span class="caps"&gt;ECC&lt;/span&gt; &lt;span class="caps"&gt;RAM&lt;/span&gt;, 16 Gb swap, dual 2.8GHz Xeons
with &lt;span class="caps"&gt;HT&lt;/span&gt;, 16 &lt;span class="caps"&gt;KB&lt;/span&gt; L1 cache, 1 &lt;span class="caps"&gt;MB&lt;/span&gt; L2 cache, and a pitiful &lt;span class="caps"&gt;ATI&lt;/span&gt; Radeon 3600
&lt;span class="caps"&gt;HD&lt;/span&gt;, and everything in /home (including the game) on a 7200 &lt;span class="caps"&gt;RPM&lt;/span&gt; &lt;span class="caps"&gt;SATA&lt;/span&gt;&amp;nbsp;disk).&lt;/p&gt;
&lt;p&gt;With my recent need to upgrade to Burning Crusade, I hit a few bumps. I
ended up wiping out my entire &lt;code&gt;~/.wine&lt;/code&gt; and starting from scratch with a
fresh install, and having to apply all of the patches (luckily I backed
everything up to another drive so I already had the patches downloaded).
Of course, I backed up the data if import (&lt;code&gt;Interface&lt;/code&gt; and &lt;code&gt;WTF&lt;/code&gt; and WoW
was the only thing I had installed through&amp;nbsp;wine).&lt;/p&gt;
&lt;p&gt;I went through a number of different attempted settings for wine, &lt;span class="caps"&gt;OS&lt;/span&gt;
settings, etc. through the different patches (essentially try a patch,
change settings until it worked, move on to the next). The biggest snag
I hit was every few patches, X would lock up. No keyboard or mouse
input, the caps lock, num lock, etc. keys wouldn&amp;#8217;t respond,
Ctrl+Alt+{Backspace|Delete} wouldn&amp;#8217;t work, &lt;em&gt;but&lt;/em&gt; I still had &lt;span class="caps"&gt;SSH&lt;/span&gt; access,
so I could just kill the &lt;code&gt;Wow.exe&lt;/code&gt; process and try again. Each time this
happened was right after I accepted the second message (&lt;span class="caps"&gt;TOS&lt;/span&gt; or &lt;span class="caps"&gt;EULA&lt;/span&gt;,
whichever comes second)&amp;#8230; the last thing I&amp;#8217;d see in the log&amp;nbsp;is:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;fixme:reg:GetNativeSystemInfo (0x374045c4) using GetSystemInfo()
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and then it would lock up with Wow.exe using 400% &lt;span class="caps"&gt;CPU&lt;/span&gt; as per &lt;code&gt;top&lt;/code&gt;
(which &lt;em&gt;does&lt;/em&gt; make some sense given dual CPUs with &lt;span class="caps"&gt;HT&lt;/span&gt;). Needless to say,
I have 4 pages of notes detailing the process it took me to get to a
working fully-patched install. I don&amp;#8217;t know if different patches need
different tweaks, and don&amp;#8217;t really feel like transcribing the entire
process. But here&amp;#8217;s the final state of all the things I&amp;nbsp;tweaked.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m running OpenSuSE 11.1, kernel 2.6.27.45-0.1-default (&lt;span class="caps"&gt;SMP&lt;/span&gt; x86_64),
wine 1.3.1 (1.3.1-1.1 from the OpenSuSE
[Emulators:/Wine/openSUSE_11.1][] repo) running under WindowMaker&amp;nbsp;0.92.0-204.6.&lt;/p&gt;
&lt;p&gt;If you happen to find this post and give it a shot, please comment if it
worked, or what you did differently. If it will be of help, drop me a
line and I&amp;#8217;ll transcribe and post my entire&amp;nbsp;process.&lt;/p&gt;
&lt;p&gt;First note that I start WoW via a bash script (&lt;code&gt;~/bin/warcraft.sh&lt;/code&gt;) that
sets up my switched mouse buttons in WindowMaker (yeah, I&amp;#8217;m very
left-handed) and also &lt;code&gt;chmod -R&lt;/code&gt;&amp;#8216;s the whole
&lt;code&gt;.wine/drive_c/Program Files/World of Warcraft&lt;/code&gt; 777, which seems to be
required for WoW (and the perms get gronked after patches). The chmod is
a good starting point for&amp;nbsp;troubleshooting.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;winecfg&lt;/code&gt; under &amp;#8220;Libraries&amp;#8221; tab add overrides for &lt;code&gt;msvcr80&lt;/code&gt; and
    &lt;code&gt;wldap32&lt;/code&gt; as &amp;#8220;(native,&amp;nbsp;builtin)&amp;#8221;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;winetricks vcrun2005sp1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run warcraft Installer through wine, auto-install Gecko when asked.
    When install finishes, begin&amp;nbsp;patching.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;winetricks fakeie6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;SET gxApi "opengl"&lt;/code&gt; to &lt;code&gt;Config.wtf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;winetricks nt40&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wine regedit&lt;/code&gt;, create a key HKEY_CURRENT_USER -&gt; Software -&gt;
    Wine -&gt; Direct3D if it doesn&amp;#8217;t exist, create string value
    &amp;#8220;OffscreenRenderingMode&amp;#8221; =&gt; &amp;#8220;backbuffer&amp;#8221;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;winecfg&lt;/code&gt;, in Graphics tab, check off &amp;#8220;Allow the window manager to
    decorate the windows&amp;#8221; and &amp;#8220;Allow the window manager to control the
    windows&amp;#8221; (fixed my last hang at patch&amp;nbsp;3.3.5-12340)&lt;/li&gt;
&lt;/ol&gt;</summary><category term="warcraft"></category><category term="wine"></category><category term="wow"></category></entry><entry><title>Documentation generation for web apps - PHP and JavaScript</title><link href="/2010/08/documentation-generation-for-web-apps-php-and-javascript/" rel="alternate"></link><updated>2010-08-26T08:10:00-04:00</updated><author><name>admin</name></author><id>tag:,2010-08-26:2010/08/documentation-generation-for-web-apps-php-and-javascript/</id><summary type="html">&lt;p&gt;Recently I&amp;#8217;ve been making some changes to a relatively complex ePCR
(electronic patient care report) program that I wrote for the &lt;a href="http://www.midlandparkambulance.com"&gt;ambulance
corps&lt;/a&gt;. It&amp;#8217;s a web application (available only on our &lt;span class="caps"&gt;LAN&lt;/span&gt;, of course)
written in &lt;span class="caps"&gt;PHP&lt;/span&gt;, with a relatively large chunk of custom javascript to
provide Ajax/&lt;span class="caps"&gt;DHTML&lt;/span&gt; functions. Most of the &lt;span class="caps"&gt;PHP&lt;/span&gt; code was already
documented and processed with &lt;a href="http://www.phpdoc.org/"&gt;phpDocumentor&lt;/a&gt; (phpdoc) to generate &lt;span class="caps"&gt;API&lt;/span&gt;
documentation. However, since so much of the functionality is
&lt;span class="caps"&gt;DHTML&lt;/span&gt;-based, there was a lot of looking back to the JavaScript source to
figure out what was called&amp;nbsp;where.&lt;/p&gt;
&lt;p&gt;My search for a true multi-language documentation generator was
relatively fruitless. There&amp;#8217;s &lt;a href="http://www.stack.nl/~dimitri/doxygen/"&gt;doxygen&lt;/a&gt; but that needed a Perl helper
script for javascript files. Since virtually all of the code, both &lt;span class="caps"&gt;PHP&lt;/span&gt;
and JavaScript, is purely procedural, I was really only concerned about
docblocks and the functions they&amp;nbsp;precede.&lt;/p&gt;
&lt;p&gt;Luckily, it occurred to me that JavaScript is pretty close in syntax to
&lt;span class="caps"&gt;PHP&lt;/span&gt;, and I tend to write them with exactly the same style. A little
research showed that phpdoc can more or less handle javascript code,
with a few&amp;nbsp;caveats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The code needs to parse as &lt;span class="caps"&gt;PHP&lt;/span&gt;, so things like inline functions mess
    it&amp;nbsp;up.&lt;/li&gt;
&lt;li&gt;The default phpDocumentor ini file doesn&amp;#8217;t recognize files with
    &lt;code&gt;.js&lt;/code&gt; extensions.&lt;/li&gt;
&lt;li&gt;The files need to have a &amp;lt;?php at the&amp;nbsp;top.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Noting this, I wrote a small script that iterates through a directory of
&lt;code&gt;.js&lt;/code&gt; files, parses them line by line, pulls out only the function
declarations (which, hopefully, don&amp;#8217;t also have code on the same line)
and docblocks, and writes the output (with a &amp;lt;?php at the top) to a
same-named file in a different&amp;nbsp;directory.&lt;/p&gt;
&lt;p&gt;The script obviously requires phpdoc to be installed, and also requires
you to edit the phpDocumentor.ini file (installed with &lt;span class="caps"&gt;PEAR&lt;/span&gt; on my system
at &lt;code&gt;/usr/share/php5/PEAR/data/PhpDocumentor/phpDocumentor.ini&lt;/code&gt;) and add
a &amp;#8220;js&amp;#8221; line to the &lt;code&gt;[_phpDocumentor_phpfile_exts]&lt;/code&gt; section to get phpdoc
to recognize &lt;code&gt;*.js&lt;/code&gt; files.&lt;/p&gt;
&lt;p&gt;I was easily able to integrate this with a Makefile rule and create a
single set of cross-linked phpdoc &lt;span class="caps"&gt;API&lt;/span&gt; docs including both &lt;span class="caps"&gt;JS&lt;/span&gt; and &lt;span class="caps"&gt;PHP&lt;/span&gt;
files. I also added explicit package names (like &amp;#8220;-&lt;span class="caps"&gt;PHP&lt;/span&gt;&amp;#8221; and &amp;#8220;-&lt;span class="caps"&gt;JS&lt;/span&gt;&amp;#8221;) to
keep things separated a&amp;nbsp;little.&lt;/p&gt;
&lt;p&gt;The script can be found at:
&lt;a href="http://svn.jasonantman.com/misc-scripts/js2phpdoc.php"&gt;http://svn.jasonantman.com/misc-scripts/js2phpdoc.php&lt;/a&gt;. It&amp;#8217;s
(obviously) free for any use, provided that you follow the license terms
(leave copyrights intact, send modifications back to me, and update the
changelog if you modify&amp;nbsp;it).&lt;/p&gt;
&lt;p&gt;My Makefile rule (which uses a temp directory to both keep the generated
files separate from the source and keep the file paths as seen by phpdoc
the same as the actual source):&lt;br /&gt;
&lt;code&gt;.PHONY: docs&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;docs:&lt;br /&gt;
mkdir -p temp/js&lt;br /&gt;
bin/js2phpdoc.php js/ temp/js/&lt;br /&gt;
cp -r inc temp/&lt;br /&gt;
cp *.php temp/&lt;br /&gt;
phpdoc -c docs/default.ini&lt;br /&gt;
rm -Rf temp&lt;br /&gt;
&lt;/code&gt;&lt;/p&gt;</summary><category term="documentation"></category><category term="javascript"></category><category term="PHP"></category><category term="web programming"></category></entry><entry><title>WiFi tether for Droid</title><link href="/2010/08/wifi-tether-for-droid/" rel="alternate"></link><updated>2010-08-15T10:29:00-04:00</updated><author><name>admin</name></author><id>tag:,2010-08-15:2010/08/wifi-tether-for-droid/</id><summary type="html">&lt;p&gt;My Motorola Droid (purchased on &lt;a href="/2009/11/droid/"&gt;November 10^th^, 2009&lt;/a&gt;, 4 days after
the release) is still running Android 2.0.1. I guess this is somewhat
out of laziness - I love the Incredible and its new (and more refined)
Android version and &lt;span class="caps"&gt;UI&lt;/span&gt;, but my phone is rooted. I&amp;#8217;m not willing to give
up root, or any of my apps, and I have yet to find a tutorial for the
upgrade to 2.1 (or 2.2??) without losing root or my apps or&amp;nbsp;data.&lt;/p&gt;
&lt;p&gt;Anyway, I&amp;#8217;m in North Carolina for the weekend and though the hotel
advertised free wifi, much as I feared, nobody bothered to do a site
survey or a real installation, and the signal level in my room is
useless (despite a pretty low noise floor). So after a little googling,
I managed to find the &lt;a href="http://szym.net/projects/barnacle/"&gt;Barnacle Wifi Tether&lt;/a&gt; (&lt;a href="market://search?q=pname:net.szym.barnacle"&gt;Market link&lt;/a&gt; app.
Sure enough, it allows any Droid users with a rooted phone to setup an
ad-hoc wireless network for tethering without a custom kernel. In fact,
I&amp;#8217;m writing this right now on my MacBook Pro tethered to my phone over
WiFi. I&amp;#8217;m seeing 764Kbps down and 234Kbps up. Not enough for serious
work (forget my girlfriend&amp;#8217;s hope of playing Warcraft), but definitely
enough for email, web browsing and &lt;span class="caps"&gt;SSH&lt;/span&gt; on a much larger&amp;nbsp;screen.&lt;/p&gt;
&lt;p&gt;My only real complaints are that it&amp;#8217;s an ad-hoc network (which
apparently is a limitation of the Android WiFi driver for the phone), it
doesn&amp;#8217;t support anything better than &lt;span class="caps"&gt;WEP&lt;/span&gt; (so no online banking, and the
usual security concerns with what I&amp;#8217;d equate to public open WiFi), and I
can&amp;#8217;t seem to figure out how to get the &lt;span class="caps"&gt;MAC&lt;/span&gt; &lt;span class="caps"&gt;ACL&lt;/span&gt; to&amp;nbsp;work.&lt;/p&gt;
&lt;p&gt;But given how little I travel, it&amp;#8217;s definitely a good app, a quick
install and setup, and a lot less complex than trying to get &lt;span class="caps"&gt;USB&lt;/span&gt;
tethering working when I eventually get Linux on the&amp;nbsp;&lt;span class="caps"&gt;MBP&lt;/span&gt;.&lt;/p&gt;</summary><category term="android"></category><category term="droid"></category><category term="tether"></category><category term="wifi"></category></entry><entry><title>New MacBook Pro; Dual boot with Linux</title><link href="/2010/06/new-macbook-pro-dual-boot-with-linux/" rel="alternate"></link><updated>2010-06-22T15:17:00-04:00</updated><author><name>admin</name></author><id>tag:,2010-06-22:2010/06/new-macbook-pro-dual-boot-with-linux/</id><summary type="html">&lt;p&gt;So in the first bit of good news lately, after four years as a
part-timer, this Monday I start my full-time position at Rutgers as a
Linux SysAdmin. Not really anything different - same office, same work,
just another day a week and a pay bump (plus benefits and all that). My
only real change on the first day will be a 3-hour &lt;span class="caps"&gt;HR&lt;/span&gt; orientation and
moving my workstation to public address space. But, on the positive
side, my new laptop just came in - a shiny new 13&amp;#8221; MacBook Pro, 2.4GHz
Core2 Duo, &lt;span class="caps"&gt;4GB&lt;/span&gt; &lt;span class="caps"&gt;RAM&lt;/span&gt;, &lt;span class="caps"&gt;250GB&lt;/span&gt; &lt;span class="caps"&gt;HDD&lt;/span&gt;. Every time I see Mac packaging, I
remember why they cost so much - the box must be half the&amp;nbsp;price!&lt;/p&gt;
&lt;p&gt;&lt;img alt="MacBook Pro" src="/GFX/newMacBookPro.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;If all goes well, I&amp;#8217;ll have the machine setup to dual-boot &lt;span class="caps"&gt;OSX&lt;/span&gt; and Linux
(specifically &lt;a href="http://www.opensuse.org"&gt;OpenSuSE&lt;/a&gt; 11.2. I&amp;#8217;ll post notes when I have it&amp;nbsp;done.&lt;/p&gt;
&lt;p&gt;The list of things I have to figure out beyond just getting both OSes&amp;nbsp;running:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Do I want to use Mac for more than a select few apps that require it
    (i.e. possibly as another day-to-day &lt;span class="caps"&gt;OS&lt;/span&gt;)? If so, I need to figure
    out file sharing between the OSes, what I want unified from my
    profiles/homedirs, Firefox profile sharing,&amp;nbsp;etc.&lt;/li&gt;
&lt;li&gt;How to do a simple shared&amp;nbsp;partition?&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;FUSE&lt;/span&gt;/&lt;span class="caps"&gt;SSHFS&lt;/span&gt; on the Mac&amp;nbsp;side.&lt;/li&gt;
&lt;li&gt;Is there a way to select the boot &lt;span class="caps"&gt;OS&lt;/span&gt; (rEFIt) from&amp;nbsp;Linux?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Stay&amp;nbsp;tuned&amp;#8230;&lt;/p&gt;</summary><category term="apple"></category><category term="dual boot"></category><category term="laptop"></category><category term="linux"></category><category term="mac"></category><category term="macbook"></category><category term="opensuse"></category></entry><entry><title>Xen/Etherboot and DHCP Problems</title><link href="/2010/04/xenetherboot-and-dhcp-problems/" rel="alternate"></link><updated>2010-04-20T10:46:00-04:00</updated><author><name>admin</name></author><id>tag:,2010-04-20:2010/04/xenetherboot-and-dhcp-problems/</id><summary type="html">&lt;p&gt;Well, I&amp;#8217;ve spend the better part of the last week or so debugging a
problem with out new Xen VMs (on one host) not getting &lt;span class="caps"&gt;DHCP&lt;/span&gt; leases.
Since our &lt;span class="caps"&gt;DHCP&lt;/span&gt; servers (&lt;span class="caps"&gt;ISC&lt;/span&gt; DHCPd 3.0.6) are using Brian Masney&amp;#8217;s &lt;a href="http://personal.cfw.com/~masneyb/"&gt;&lt;span class="caps"&gt;LDAP&lt;/span&gt;
patch&lt;/a&gt; (which has recently been included in &lt;a href="http://www.isc.org/files/release-notes/42b2_0.html"&gt;mainline DHCPd&lt;/a&gt;), I
assumed that this might be the source of some of the&amp;nbsp;problems.&lt;/p&gt;
&lt;p&gt;The Xen client booting process uses &lt;a href="http://etherboot.org/"&gt;Etherboot&lt;/a&gt; (specifically 5.4.2 on
my machines) to get &lt;span class="caps"&gt;DHCP&lt;/span&gt; and &lt;span class="caps"&gt;PXE&lt;/span&gt; for the client. The Etherboot &lt;span class="caps"&gt;ROM&lt;/span&gt; is
generated online with &lt;a href="http://rom-o-matic.net/"&gt;&lt;span class="caps"&gt;ROM&lt;/span&gt;-o-Matic&lt;/a&gt; (by the Xen devs) and is then
packaged into &lt;code&gt;hvmloader&lt;/code&gt; (though I would not find this out until much
later in my investigation, given the piss-poor documentation about it).
So, aside from pulling the &lt;span class="caps"&gt;SRPM&lt;/span&gt; for Xen and looking around, I decided I
couldn&amp;#8217;t really debug much on the client end (I wasn&amp;#8217;t getting any
&lt;span class="caps"&gt;BIOS&lt;/span&gt;-like messages from Xen, so the client end seemed to be pretty much
a black&amp;nbsp;box).&lt;/p&gt;
&lt;p&gt;After a week of re-examining our &lt;span class="caps"&gt;DHCP&lt;/span&gt; servers, moving the client between
pieces of hardware and different networks, tracing out the &lt;span class="caps"&gt;DHCP&lt;/span&gt; logs,
and debugging everything in-between, I finally resorted to doing packet
captures and analyzing them. Last Thursday (my last work day of the
week), I popped my laptop on the same network, set it up in &lt;span class="caps"&gt;DHCP&lt;/span&gt;, and
did some captures of the laptop (which worked correctly) and the problem&amp;nbsp;&lt;span class="caps"&gt;VM&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Sometime around 10:00 &lt;span class="caps"&gt;PM&lt;/span&gt;, long after I&amp;#8217;d gotten home, I had opened
captures of both the good and bad hosts in separate &lt;a href="http://www.wireshark.org/"&gt;Wireshark&lt;/a&gt;
windows, and was going through them line-by-line. I&amp;#8217;d also written a
nifty little &lt;a href="/GFX/dhcptest.pl"&gt;Perl script&lt;/a&gt; (my weakest language) using
&lt;a href="http://search.cpan.org/~fvandun/Net-DHCP-0.11/lib/Net/DHCP/Packet.pm"&gt;Net::&lt;span class="caps"&gt;DHCP&lt;/span&gt;::Packet&lt;/a&gt; to craft packets identical to the ones from the
working and &lt;span class="caps"&gt;FUBAR&lt;/span&gt; hosts, and inject them into the network. The only
thing I could find different was the value of the &amp;#8220;secs&amp;#8221; field of the
&lt;span class="caps"&gt;DHCPDISCOVER&lt;/span&gt; packets (octets 9 and 10), which are supposed to contain
the number of seconds that have passed since the host started booting
(&lt;a href="http://www.faqs.org/rfcs/rfc1541.html"&gt;&lt;span class="caps"&gt;RFC&lt;/span&gt; 1541&lt;/a&gt;). My laptop (the working host) started getting replies
from the server at 21 seconds. I took my Perl packet-injecting script,
and started adjusting the &amp;#8220;secs&amp;#8221; values of both the working and bad
packets. Sure enough, with identical packets from each host, the values
converged. Anything with &amp;#8220;secs&amp;#8221; below 2 got no response from the &lt;span class="caps"&gt;DHCP&lt;/span&gt;
server, anything with 2 or greater got a correct&amp;nbsp;lease.&lt;/p&gt;
&lt;p&gt;Then it hit me. When we used to have a primary/secondary &lt;span class="caps"&gt;DHCP&lt;/span&gt; server
setup (with manual failover), we&amp;#8217;d configured the secondary server with
&lt;code&gt;min-secs: 2&lt;/code&gt;, instructing it to not give out any leases to clients with
a &amp;#8220;secs&amp;#8221; value of under 2, to prevent the secondary server from
answering if, for some reason, the primary was still online.&amp;nbsp;Bingo.&lt;/p&gt;
&lt;p&gt;At this point, I&amp;#8217;m waiting to have a meeting of the binds before I add a
network-level override of &amp;#8220;min-secs: 0&amp;#8221; for the networks in question.
But I&amp;#8217;m relatively confident that everything will go smoothly from there&amp;nbsp;on.&lt;/p&gt;
&lt;p&gt;This experience highlighted that one small &amp;#8220;bug&amp;#8221; can confuse 3 people
for the better part of a&amp;nbsp;week:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://etherboot.org/"&gt;Etherboot&lt;/a&gt; (at least 5.4.2) doesn&amp;#8217;t increment the &amp;#8220;secs&amp;#8221; field in its
&lt;span class="caps"&gt;DISCOVER&lt;/span&gt; packets as &lt;span class="caps"&gt;RFC&lt;/span&gt; 1541 suggests. Therefore anyone with &amp;#8220;min-secs&amp;#8221;
in their dhcpd configuration won&amp;#8217;t ever give out a&amp;nbsp;lease.&lt;/p&gt;
&lt;p&gt;In hindsight, it really was a brain-dead moment. There was a little note
in the dhcpd logs that I, and the others, totally overlooked:
&amp;#8220;&lt;span class="caps"&gt;DHCPDISCOVER&lt;/span&gt; (&amp;#8230;) 0 secs &amp;lt; 2&amp;#8221;. I guess I should have turned my brain
on and realized that those few characters were probably important, and
there for a reason, no matter how unassuming (and un-error-like) they
may&amp;nbsp;be&amp;#8230;&lt;/p&gt;</summary><category term="dhcp"></category><category term="dhcpd"></category><category term="etherboot"></category><category term="ldap"></category><category term="pxe"></category><category term="xen"></category></entry><entry><title>DHCP Debugging and Handy TCPdump filters</title><link href="/2010/04/dhcp-debugging-and-handy-tcpdump-filters/" rel="alternate"></link><updated>2010-04-14T09:21:00-04:00</updated><author><name>admin</name></author><id>tag:,2010-04-14:2010/04/dhcp-debugging-and-handy-tcpdump-filters/</id><summary type="html">&lt;p&gt;Recently at $&lt;span class="caps"&gt;WORK&lt;/span&gt; we&amp;#8217;ve been having some strange issues with a
particular Xen &lt;span class="caps"&gt;VM&lt;/span&gt; not getting &lt;span class="caps"&gt;DHCP&lt;/span&gt;. Traditional (tail -f dhcpd.log)
debugging hasn&amp;#8217;t turned up much, other than the server is getting the
&lt;span class="caps"&gt;DISCOVER&lt;/span&gt; but not sending out an &lt;span class="caps"&gt;OFFER&lt;/span&gt;. I&amp;#8217;ve turned to packet captures to
try and track down the problem. Of course, this is where &lt;a href="http://www.tcpdump.org/"&gt;tcpdump&lt;/a&gt; and
&lt;a href="http://www.wireshark.org/"&gt;wireshark&lt;/a&gt; come into play. So I thought I&amp;#8217;d share some of the filters
that I&amp;#8217;ve been using, and a few that I&amp;nbsp;developed.&lt;/p&gt;
&lt;p&gt;tcpdump filter for &lt;span class="caps"&gt;CDP&lt;/span&gt; (I should have this memorized by now) from
&lt;a href="http://sidewynder.blogspot.com/2005/07/tcpdump-filter-for-capturing-only.html"&gt;SWeidner&lt;/a&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;tcpdump -nn -v -i eth0 -s 1500 -c 1 &amp;#39;ether[20:2] == 0x2000&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;/p&gt;
Wireshark display filter for a specific &lt;span class="caps"&gt;DHCP&lt;/span&gt; client (by&amp;nbsp;&lt;span class="caps"&gt;MAC&lt;/span&gt;):&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;bootp.hw.mac_addr == 00:11:22:33:44:55
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;/p&gt;
tcpdump filter to match &lt;span class="caps"&gt;DHCP&lt;/span&gt; packets including a specific Client &lt;span class="caps"&gt;MAC&lt;/span&gt;&amp;nbsp;Address:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;tcpdump -i br0 -vvv -s 1500 &amp;#39;((port 67 or port 68) and (udp[38:4] = 0x3e0ccf08))&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;/p&gt;
tcpdump only allows matching on a maximum of 4 bytes (octets), not the 6
bytes of a &lt;span class="caps"&gt;MAC&lt;/span&gt; address. So, in the above example, we match the last 4
bytes (presumably the most unique) - our original &lt;span class="caps"&gt;MAC&lt;/span&gt; address was
&lt;code&gt;00:16:3e:0c:cf:08&lt;/code&gt;, so we match on &lt;code&gt;3e0ccf08&lt;/code&gt;. The &lt;code&gt;udp[38:4]&lt;/code&gt; matches
from the 38th octet after the start of the &lt;span class="caps"&gt;UDP&lt;/span&gt; header (so the comparison
starts on the 39th octet) and compares a chunk 4 octets long. The &lt;a href="http://www.networksorcery.com/enp/protocol/udp.htm"&gt;&lt;span class="caps"&gt;UDP&lt;/span&gt;
header&lt;/a&gt; is 8 octets long, followed immediately by the &lt;a href="http://www.networksorcery.com/enp/protocol/dhcp.htm"&gt;&lt;span class="caps"&gt;DHCP&lt;/span&gt; header&lt;/a&gt;,
and the Client &lt;span class="caps"&gt;MAC&lt;/span&gt; Address field is composed of octets 29-35 of the &lt;span class="caps"&gt;DHCP&lt;/span&gt;
header. Therefore, 8 octets for &lt;span class="caps"&gt;UDP&lt;/span&gt; header + 28 octets until Client &lt;span class="caps"&gt;MAC&lt;/span&gt;
Address + 2 octets offset (drop the first 2 octets of &lt;span class="caps"&gt;MAC&lt;/span&gt; address to
allow a 4 octet comparison) = 38 (our total&amp;nbsp;offset).&lt;/p&gt;
&lt;p&gt;This can also be modified as a Wireshark display&amp;nbsp;filter:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;udp[38:4]==3e:0c:cf:08
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;/p&gt;
Using the same logic, a tcpdump filter to capture packets sent by the
client (&lt;span class="caps"&gt;DISCOVER&lt;/span&gt;, &lt;span class="caps"&gt;REQUEST&lt;/span&gt;,&amp;nbsp;&lt;span class="caps"&gt;INFORM&lt;/span&gt;):&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;tcpdump -i br0 -vvv -s 1500 &amp;#39;((port 67 or port 68) and (udp[8:1] = 0x1))&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;/p&gt;
Finally, a tcpdump filter for &lt;span class="caps"&gt;DHCPDISCOVER&lt;/span&gt; packets (this makes the
possibly flawed ass-umption that Option 53 will be the first option&amp;nbsp;set:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;udp[247:4] = 0x63350101
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and a wireshark display&amp;nbsp;filter:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;udp[247:4]==63:35:01:01
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;/p&gt;
And the same thing for &lt;span class="caps"&gt;DHCPREQUEST&lt;/span&gt;&amp;nbsp;packets:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;udp[247:4] = 0x63350103
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and a wireshark display&amp;nbsp;filter:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;udp[247:4]==63:35:01:03
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;</summary><category term="dhcp"></category><category term="tcpdump"></category><category term="wireshark"></category></entry><entry><title>Apache catchall vhost</title><link href="/2010/04/apache-catchall-vhost/" rel="alternate"></link><updated>2010-04-07T10:10:00-04:00</updated><author><name>admin</name></author><id>tag:,2010-04-07:2010/04/apache-catchall-vhost/</id><summary type="html">&lt;p&gt;&lt;span class="quo"&gt;&amp;#8216;&lt;/span&gt;; echo&amp;nbsp;&amp;#8217;&lt;/p&gt;
&lt;p&gt;The page you are looking for is best found&amp;nbsp;at:&lt;/p&gt;
&lt;p&gt;&lt;span class="quo"&gt;&amp;#8216;&lt;/span&gt;; echo&amp;nbsp;&amp;#8217;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="'.$newURL.'"&gt;&lt;span class="quo"&gt;&amp;#8216;&lt;/span&gt;.$newURL.&amp;#8217;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="quo"&gt;&amp;#8216;&lt;/span&gt;; echo&amp;nbsp;&amp;#8217;&lt;/p&gt;
&lt;p&gt;You will be automatically redirected after 5 seconds. If this does not
happen, click the link&amp;nbsp;above.&lt;/p&gt;
&lt;p&gt;&lt;span class="quo"&gt;&amp;#8216;&lt;/span&gt;; echo&amp;nbsp;&amp;#8217;&lt;/p&gt;
&lt;p&gt;&lt;span class="quo"&gt;&amp;#8216;&lt;/span&gt;;&amp;nbsp;}&lt;/p&gt;
&lt;p&gt;&lt;/pre&gt;
This script takes two distinct&amp;nbsp;actions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If the requested &lt;span class="caps"&gt;URL&lt;/span&gt; is &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;/index.php&lt;/code&gt;, it transparently
    redirects to a different &lt;span class="caps"&gt;URL&lt;/span&gt; (and&amp;nbsp;port).&lt;/li&gt;
&lt;li&gt;Otherwise, it displays a &amp;#8220;page moved to&amp;#8221; message and uses a
    Meta-Refresh to redirect after 5&amp;nbsp;seconds.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="apache"></category><category term="catchall"></category><category term="PHP"></category><category term="web"></category></entry><entry><title>BIND9 Dynamic DNS</title><link href="/2010/04/bind9-dynamic-dns/" rel="alternate"></link><updated>2010-04-07T09:04:00-04:00</updated><author><name>admin</name></author><id>tag:,2010-04-07:2010/04/bind9-dynamic-dns/</id><summary type="html">&lt;p&gt;I needed a better solution for Dynamic &lt;span class="caps"&gt;DNS&lt;/span&gt; than &lt;a href="http://www.dyndns.org"&gt;dyndns.org&lt;/a&gt; for
something, so I set about setting up &lt;span class="caps"&gt;DDNS&lt;/span&gt; through my &lt;span class="caps"&gt;BIND9&lt;/span&gt; servers. I
found a number of very helpful blog posts, including &lt;a href="http://linux.yyz.us/nsupdate/"&gt;nsupdate: Painless
Dynamic &lt;span class="caps"&gt;DNS&lt;/span&gt;&lt;/a&gt;, &lt;a href="http://linux.yyz.us/dns/ddns-server.html"&gt;Painless &lt;span class="caps"&gt;DDNS&lt;/span&gt; part 2: the server&lt;/a&gt;, &lt;a href="http://ops.ietf.org/dns/dynupd/secure-ddns-howto.html"&gt;Secure dynamic
&lt;span class="caps"&gt;DNS&lt;/span&gt; howto&lt;/a&gt; and &lt;a href="http://www.oceanwave.com/technical-resources/unix-admin/nsupdate.html"&gt;A &lt;span class="caps"&gt;DDNS&lt;/span&gt; Server Using &lt;span class="caps"&gt;BIND&lt;/span&gt; and Nsupdate&lt;/a&gt;. Of course,
the &lt;a href="http://www.zytrax.com/books/dns/ch7/statements.html"&gt;&lt;span class="caps"&gt;BIND&lt;/span&gt; configuration statement reference&lt;/a&gt; was also very&amp;nbsp;helpful.&lt;/p&gt;
&lt;p&gt;The whole process was relatively&amp;nbsp;simple&amp;#8230;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add an &lt;span class="caps"&gt;RR&lt;/span&gt; for the host I want, in the appropriate&amp;nbsp;zone.&lt;/li&gt;
&lt;li&gt;Generate &lt;span class="caps"&gt;TSIG&lt;/span&gt; keys, distribute them to the&amp;nbsp;client.&lt;/li&gt;
&lt;li&gt;Make sure you have logging enabled for things of interest in your
    &lt;code&gt;logging&lt;/code&gt; section of &lt;code&gt;named.conf&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;category dnssec { syslog_info; };
category update { syslog_info; };
category security { syslog_info; };
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Create a keys.conf file for your keys (you &lt;em&gt;do&lt;/em&gt; split your configs
    out into usable chunks,&amp;nbsp;right?):&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;key foo.example.com. {
    algorithm HMAC-MD5.SIG-ALG.REG.INT;
    secret &amp;quot;this is your secret here (after Key: in the .private file)&amp;quot;;
};
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&amp;lt;p&amp;gt;
and include it in `named.conf` like
`include &amp;quot;/etc/named.d/keys.conf&amp;quot;;`
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Set an [&lt;code&gt;update-policy&lt;/code&gt;][] statement in &lt;code&gt;named.conf&lt;/code&gt;. I just added
    mine to a specific zone in a specific view (external), as that&amp;#8217;s the
    only place I would conceivably want updates right&amp;nbsp;now.&lt;/p&gt;
&lt;/p&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;update-policy {
    grant * self * A TXT;
};
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&amp;lt;p&amp;gt;
Assuming your TSIG keys are named for specific RRs, this will let
any client (with a valid key setup on the server) update its own RR
and nothing else.
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Finally, I created a script for ddns updates on the client. Since I
    want to be able to fire off this script manually or via cron (if I
    have to reload &lt;span class="caps"&gt;BIND&lt;/span&gt;, and until I make the needed changes to
    MultiBINDadmin), I bypassed the usual dhclient stuff and manually
    grab the current &lt;span class="caps"&gt;IP&lt;/span&gt; from the interface of interest. I symlinked this
    in &lt;code&gt;/etc/dhcp3/dhclient-exit-hooks.d&lt;/code&gt; so it will run on &lt;span class="caps"&gt;DHCP&lt;/span&gt;&amp;nbsp;updates.&lt;/p&gt;
&lt;/p&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;&lt;span class="caps"&gt;IFACE&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;eth0&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;&lt;span class="caps"&gt;TTL&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;3600
&lt;span class="nv"&gt;&lt;span class="caps"&gt;SERVER&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ns1.example.com
&lt;span class="nv"&gt;&lt;span class="caps"&gt;HOSTNAME&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;foo.example.com
&lt;span class="nv"&gt;&lt;span class="caps"&gt;ZONE&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;example.com
&lt;span class="nv"&gt;&lt;span class="caps"&gt;KEYFILE&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/root/ddns-keys/Kfoo.example.com.+157+12345.private

&lt;span class="nv"&gt;new_ip_address&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;ifconfig &lt;span class="nv"&gt;$&lt;span class="caps"&gt;IFACE&lt;/span&gt;&lt;/span&gt; | grep &lt;span class="s2"&gt;&amp;quot;inet addr:&amp;quot;&lt;/span&gt; | awk &lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; | awk -F &lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="nv"&gt;new_ip_address&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;new_ip_address&lt;/span&gt;&lt;span class="p"&gt;/ /&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;

nsupdate -v -k &lt;span class="nv"&gt;$&lt;span class="caps"&gt;KEYFILE&lt;/span&gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;&amp;lt; &lt;span class="caps"&gt;EOF&lt;/span&gt;&lt;/span&gt;
&lt;span class="s"&gt;server $&lt;span class="caps"&gt;SERVER&lt;/span&gt;&lt;/span&gt;
&lt;span class="s"&gt;zone $&lt;span class="caps"&gt;ZONE&lt;/span&gt;&lt;/span&gt;
&lt;span class="s"&gt;update delete $&lt;span class="caps"&gt;HOSTNAME&lt;/span&gt; A&lt;/span&gt;
&lt;span class="s"&gt;update add $&lt;span class="caps"&gt;HOSTNAME&lt;/span&gt; $&lt;span class="caps"&gt;TTL&lt;/span&gt; A $new_ip_address&lt;/span&gt;
&lt;span class="s"&gt;send&lt;/span&gt;
&lt;span class="s"&gt;&lt;span class="caps"&gt;EOF&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When I finally got things setup, my only problem was with permissions on
the zone file directories, which was easily corrected.Once this was
straightened out, my &lt;code&gt;nsupdate&lt;/code&gt; script ran flawlessly, and the update
was instantly (thanks to using &amp;#8220;notify&amp;#8221;) propagated out to the slave&amp;nbsp;server.&lt;/p&gt;
&lt;p&gt;The only problem that I now have is one of my own creation - I use a
small &lt;span class="caps"&gt;PHP&lt;/span&gt; application that I wrote (&lt;a href="http://multibindadmin.jasonantman.com/"&gt;MultiBINDadmin&lt;/a&gt;) to manage &lt;span class="caps"&gt;DNS&lt;/span&gt;.
It&amp;#8217;s incredibly easy, as it keeps track of internal and external IPs,
and everything else, for my zones, and triggers a pull on the master
&lt;span class="caps"&gt;BIND&lt;/span&gt; server via the web interface. The only problem I now have is that
this messes with &lt;span class="caps"&gt;DDNS&lt;/span&gt; updates. First, if I make changes in the web
interface and there&amp;#8217;s already been a &lt;span class="caps"&gt;DDNS&lt;/span&gt; update that day, the zone
serial generated by MultiBINDadmin will match the automatically
incremented serial generated by the &lt;span class="caps"&gt;BIND&lt;/span&gt; server. Second, and more
troubling, when the &lt;span class="caps"&gt;BIND&lt;/span&gt; server reloads, it loses the dynamic update. So
when I push changes to a zone from the web interface, my dynamic updates
go&amp;nbsp;away.&lt;/p&gt;
&lt;p&gt;For the short-term, I&amp;#8217;m just going to check the zone serial before I
make any updates and, if need be, manually increment it in the web tool.
As to losing the dynamic updates, I&amp;#8217;m just going to have cron on the
client fire the &lt;code&gt;nsupdate&lt;/code&gt; script every 30 minutes. I also did a little
kludge, setup a vhost on one of my web servers to answer for the dynamic
host (as a catch-all page), and set the &lt;span class="caps"&gt;IP&lt;/span&gt; of my web server as the
hard-coded &lt;span class="caps"&gt;RR&lt;/span&gt; address in the zone file. If someone tries to use the new
(&lt;span class="caps"&gt;DDNS&lt;/span&gt; through my &lt;span class="caps"&gt;BIND&lt;/span&gt; server) address for &lt;span class="caps"&gt;HTTP&lt;/span&gt; and for some reason the
current dynamic address disappeared (&lt;span class="caps"&gt;BIND&lt;/span&gt; reloaded), they&amp;#8217;ll get a
little page with a message and the old dyndns.org-based&amp;nbsp;&lt;span class="caps"&gt;URL&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;When I get around to it (or when this becomes a problem), I&amp;#8217;ll make two
changes to&amp;nbsp;MultiBINDadmin:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Before it pushes an update, check the current serial for the zone
    (ok, this may be a bit interesting, as the internal and external
    zones could have different serials) and increment from&amp;nbsp;that.&lt;/li&gt;
&lt;li&gt;Have a &amp;#8220;&lt;span class="caps"&gt;DDNS&lt;/span&gt;&amp;#8221; flag in the database and &lt;span class="caps"&gt;GUI&lt;/span&gt; for RRs. For all flagged
    RRs, try to get the (unfortunately external) current address and
    update the record in the &lt;span class="caps"&gt;DB&lt;/span&gt; before the&amp;nbsp;push.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The real question here, which I haven&amp;#8217;t looked into yet, is how I can
interrogate &lt;span class="caps"&gt;BIND&lt;/span&gt; about RRs for the external zone from an internal&amp;nbsp;host.&lt;/p&gt;</summary><category term="bind"></category><category term="ddns"></category><category term="dhcp"></category><category term="multibindadmin"></category></entry><entry><title>Syslog from KickStart / Anaconda</title><link href="/2010/03/syslog-from-kickstart-anaconda/" rel="alternate"></link><updated>2010-03-24T13:52:00-04:00</updated><author><name>admin</name></author><id>tag:,2010-03-24:2010/03/syslog-from-kickstart-anaconda/</id><summary type="html">&lt;p&gt;Yesterday I was installing a new machine at $&lt;span class="caps"&gt;WORK&lt;/span&gt;, and we&amp;#8217;d been having
some spotty problems with &lt;a href="http://fedoraproject.org/wiki/Anaconda"&gt;Anaconda&lt;/a&gt; not being able to find RPMs in a
specific repository. As a result, I was standing in the machine room at
a cart-mounted console, watching the output of the installation. Just as
I pressed the power button to give it a try, I realized that if the
conditions in the machine room aren&amp;#8217;t unpleasant enough, I probably
shouldn&amp;#8217;t have had those 3 bottles of&amp;nbsp;water.&lt;/p&gt;
&lt;p&gt;It took me about 4 seconds on Google to find out that KickStart files
support a &lt;code&gt;syslog&lt;/code&gt; directive that sends all logging for the installation
process to a syslog&amp;nbsp;server.&lt;/p&gt;
&lt;p&gt;The directive in the &lt;span class="caps"&gt;KS&lt;/span&gt; file is quite&amp;nbsp;simple:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;syslog=hostname
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hopefully this will be as much of a help to someone else who hasn&amp;#8217;t
noticed it&amp;nbsp;yet&amp;#8230;&lt;/p&gt;
&lt;p&gt;I found this documented in the &lt;a href="http://www.centos.org/docs/5/html/5.1/Installation_Guide/s1-kickstart2-startinginstall.html"&gt;RedHat/CentOS 5.1 Installation&amp;nbsp;Guide.&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>Thunderbird SSL “Domain Name Mismatch”</title><link href="/2010/02/thunderbird-ssl-domain-name-mismatch/" rel="alternate"></link><updated>2010-02-12T09:34:00-05:00</updated><author><name>admin</name></author><id>tag:,2010-02-12:2010/02/thunderbird-ssl-domain-name-mismatch/</id><summary type="html">&lt;p&gt;Some of my servers that are only for internal/personal use have &lt;span class="caps"&gt;SSL&lt;/span&gt;
certs with a mismatched hostname. The cert for my mail server is issued
for the &lt;span class="caps"&gt;CNAME&lt;/span&gt; used for my mail server, not the actual hostname. Of
course, this means that Thunderbird gives me some annoying errors
because they&amp;#8217;re&amp;nbsp;worried:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Domain Name Mismatch in Thunderbird" src="/GFX/Domain_Name_Mismatch.png" /&gt;&lt;/p&gt;
&lt;p&gt;Luckily, there&amp;#8217;s an &lt;a href="https://addons.mozilla.org/en-US/thunderbird/addon/2131"&gt;add-on&lt;/a&gt; called &amp;#8220;Remember Mismatched Domains&amp;#8221; that
adds a simple &amp;#8220;remember this decision&amp;#8221; check box, much like the one now
found in Firefox. Problem&amp;nbsp;solved!&lt;/p&gt;
&lt;p&gt;&lt;img alt="Thunderbird Domain Name Mismatch after add-on" src="/GFX/Domain_Name_Mismatch2.png" /&gt;&lt;/p&gt;</summary><category term="certificates"></category><category term="dns"></category><category term="Mozilla"></category><category term="SSL"></category><category term="Thunderbird"></category></entry><entry><title>Apache2 - list Name-Based Virtual Hosts</title><link href="/2010/02/apache2-list-name-based-virtual-hosts/" rel="alternate"></link><updated>2010-02-11T09:48:00-05:00</updated><author><name>admin</name></author><id>tag:,2010-02-11:2010/02/apache2-list-name-based-virtual-hosts/</id><summary type="html">&lt;p&gt;Here&amp;#8217;s a little tidbit that I never knew until I had an &lt;a href="http://httpd.apache.org/"&gt;Apache2&lt;/a&gt;
name-based virtual host problem: &lt;code&gt;httpd -S&lt;/code&gt; lists the vhosts that are
being served by Apache, and how they were parsed from the config&amp;nbsp;files.&lt;/p&gt;
&lt;p&gt;The output on one of my servers looks something&amp;nbsp;like:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;[root@web2 vhosts.d]# httpd -S
VirtualHost configuration:
wildcard NameVirtualHosts and _default_ servers:
_default_:443          web2.jasonantman.com (/etc/httpd/vhosts.d/ssl-host.conf:7)
*:80                   is a NameVirtualHost
         default server www.jasonantman.com (/etc/httpd/vhosts.d/000-default.conf:1)
         port 80 namevhost www.jasonantman.com (/etc/httpd/vhosts.d/000-default.conf:1)
         port 80 namevhost rackman.jasonantman.com (/etc/httpd/vhosts.d/rackman.jasonantman.com.conf:1)
         port 80 namevhost whatismyip.jasonantman.com (/etc/httpd/vhosts.d/whatismyip.jasonantman.com.conf:1)
Syntax OK
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is quite useful in debugging vhost problems, especially those pesky
times when a request that should go to a specific vhost is being served
by the default (in my case at this time, I had two ServerName directives
instead of a ServerName and a&amp;nbsp;ServerAlias).&lt;/p&gt;</summary><category term="apache"></category><category term="configuration"></category><category term="linux"></category></entry><entry><title>Using nmap to quickly ping all hosts in an address range</title><link href="/2010/02/using-nmap-to-quickly-ping-all-hosts-in-an-address-range/" rel="alternate"></link><updated>2010-02-08T09:10:00-05:00</updated><author><name>admin</name></author><id>tag:,2010-02-08:2010/02/using-nmap-to-quickly-ping-all-hosts-in-an-address-range/</id><summary type="html">&lt;p&gt;At $&lt;span class="caps"&gt;WORK&lt;/span&gt;, the subnet we use for some of our workstations and test boxes
was only recently setup with &lt;span class="caps"&gt;DHCP&lt;/span&gt;. Previously, we&amp;#8217;d used
&lt;span class="caps"&gt;IP&lt;/span&gt;-by-Whiteboard in the office. As a result, most of the recent machines
use &lt;span class="caps"&gt;DHCP&lt;/span&gt;, but there are a few older ones still around using static
addresses. I recently had to add a new machine, so I had to go through
the process of finding out which IPs are in use and which aren&amp;#8217;t (since
some aren&amp;#8217;t in&amp;nbsp;&lt;span class="caps"&gt;DHCP&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;I decided to be good and update &lt;span class="caps"&gt;DHCP&lt;/span&gt; with records for all machines in
the subnet, whether they&amp;#8217;re actually using &lt;span class="caps"&gt;DHCP&lt;/span&gt; or not. There&amp;#8217;s a quick
way to do this with &lt;code&gt;nmap&lt;/code&gt; using the options for ping scan (&lt;code&gt;-sP&lt;/code&gt;) and
always resolve &lt;span class="caps"&gt;DNS&lt;/span&gt; (&lt;code&gt;-R&lt;/code&gt;):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nmap -sP -R 172.16.43.129-159&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;Host ar01-hill-hill.example.com (172.16.43.129) appears to be up.
MAC Address: 00:11:BC:7D:28:0A (Cisco Systems)
Host ccf-hill019-1.example.com (172.16.43.130) appears to be up.
MAC Address: 00:00:AA:63:54:BB (Xerox)
Host ccf-hill019-2.example.com (172.16.43.131) appears to be down.
Host ccf-hill019-3.example.com (172.16.43.132) appears to be down.
Host ccf-hill019-4.example.com (172.16.43.133) appears to be down.
Host ccf-hill019-5.example.com (172.16.43.134) appears to be down.
Host ccf-hill019-6.example.com (172.16.43.135) appears to be down.
Host ccf-hill019-7.example.com (172.16.43.136) appears to be up.
Host speakeasy.example.com (172.16.43.137) appears to be up.
MAC Address: 00:17:A4:13:EB:57 (Global Data Services)
Host ccf-hill019-9.example.com (172.16.43.138) appears to be up.
MAC Address: 00:17:A4:13:E8:17 (Global Data Services)
Host ccf-hill019-10.example.com (172.16.43.139) appears to be down.
Host testmac01.example.com (172.16.43.140) appears to be down.
Host ccf-hill019-12.example.com (172.16.43.141) appears to be down.
Host ccf-hill019-13.example.com (172.16.43.142) appears to be up.
MAC Address: 00:0D:29:59:58:00 (Cisco)
Host ccf-hill019-14.example.com (172.16.43.143) appears to be down.
Host ccf-hill019-15.example.com (172.16.43.144) appears to be down.
Host ccf-hill019-16.example.com (172.16.43.145) appears to be down.
Host ccf-hill019-17.example.com (172.16.43.146) appears to be down.
Host ccf-hill019-18.example.com (172.16.43.147) appears to be up.
MAC Address: 00:1E:C2:0D:C1:98 (Unknown)
Host ccf-hill019-19.example.com (172.16.43.148) appears to be down.
Host ccf-hill019-20.example.com (172.16.43.149) appears to be down.
Host ccf-hill019-21.example.com (172.16.43.150) appears to be down.
Host lordkris.example.com (172.16.43.151) appears to be down.
Host ccf-hill019-23.example.com (172.16.43.152) appears to be down.
Host ccf-hill019-24.example.com (172.16.43.153) appears to be down.
Host ccf-hill019-25.example.com (172.16.43.154) appears to be down.
Host ccf-hill019-26.example.com (172.16.43.155) appears to be down.
Host ccf-hill019-27.example.com (172.16.43.156) appears to be down.
Host ccf-hill019-28.example.com (172.16.43.157) appears to be down.
Host ccf-hill019-29.example.com (172.16.43.158) appears to be down.
Host ccf-hill019-30.example.com (172.16.43.159) appears to be down.
Nmap finished: 31 IP addresses (7 hosts up) scanned in 0.892 seconds
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you can see, the results also (very usefully) include &lt;span class="caps"&gt;MAC&lt;/span&gt; addresses,
so it&amp;#8217;s pretty easy to update &lt;span class="caps"&gt;DHCP&lt;/span&gt; as&amp;nbsp;needed.&lt;/p&gt;</summary><category term="dhcp"></category><category term="nmap"></category><category term="ping"></category><category term="sysadmin"></category></entry><entry><title>Subversion ‘is missing or not locked’ error</title><link href="/2010/01/subversion-is-missing-or-not-locked-error/" rel="alternate"></link><updated>2010-01-29T15:58:00-05:00</updated><author><name>admin</name></author><id>tag:,2010-01-29:2010/01/subversion-is-missing-or-not-locked-error/</id><summary type="html">&lt;p&gt;Recently I was doing some work on a few &lt;span class="caps"&gt;PHP&lt;/span&gt; scripts, and came by a
rather annoying error while trying to commit to&amp;nbsp;subversion:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;svn: Commit failed (details follow):
svn: Working copy &amp;#39;/srv/www/htdocs/newcall/stats/generated&amp;#39; is missing or not locked
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The problem was a directory, &amp;#8220;generated&amp;#8221;. This particular app makes use
of &lt;a href="http://naku.dohcrew.com/libchart"&gt;libchart&lt;/a&gt; to draw simple charts in &lt;span class="caps"&gt;PHP&lt;/span&gt;. Libchart writes the charts
to files, and therefore needs a directory writable by the Apache user.
So, I created the &lt;code&gt;generated/&lt;/code&gt; directory for these output files, and
&lt;code&gt;chown&lt;/code&gt;ed &lt;code&gt;wwwrun:www&lt;/code&gt;. Now, apparently, the subversion &lt;code&gt;svn add&lt;/code&gt;
command doesn&amp;#8217;t check ownership/writable permissions before adding a
directory. So, it added &lt;code&gt;generated/&lt;/code&gt; to the main list of files, but
couldn&amp;#8217;t write the &lt;code&gt;.svn&lt;/code&gt; directory and add a lock. &lt;span class="caps"&gt;IMHO&lt;/span&gt;, this is an
error in the svn&amp;nbsp;client.&lt;/p&gt;
&lt;p&gt;I couldn&amp;#8217;t find any solutions to the problem online. Essentially, I have
an empty directory (or at least nothing useful in it) that got partially
added to svn - it was added to the &lt;code&gt;.svn/entries&lt;/code&gt; file in the parent
directory, but never had its own &lt;code&gt;.svn&lt;/code&gt; directory&amp;nbsp;created.&lt;/p&gt;
&lt;p&gt;The only solution that I found is to manually edit the &lt;code&gt;.svn/entries&lt;/code&gt;
file in the parent directory. &lt;strong&gt;&lt;span class="caps"&gt;WARNING&lt;/span&gt;:&lt;/strong&gt; this isn&amp;#8217;t for the faint of
heart. Be sure you don&amp;#8217;t screw anything&amp;nbsp;up.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open the &lt;code&gt;.svn/entries&lt;/code&gt; file in the parent directory in a text
    editor (i.e. if the problem directory is &lt;code&gt;stats/generated&lt;/code&gt;, edit
    &lt;code&gt;stats/.svn/entries&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Find the &lt;code&gt;entry&lt;/code&gt; node with the correct &amp;#8220;name&amp;#8221; attribute for the
    directory in question. For stats/generated, in the
    &lt;code&gt;stats/.svn/entries&lt;/code&gt; file, it should look&amp;nbsp;like:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Make the entries file writable (&lt;code&gt;chmod u+w entries&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Remove the entry from the&amp;nbsp;file.&lt;/li&gt;
&lt;li&gt;Set the entries file back to non-writable (&lt;code&gt;chmod u-w entries&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Remove any save files if they were created (i.e. &lt;code&gt;entries~&lt;/code&gt; for&amp;nbsp;emacs)&lt;/li&gt;
&lt;li&gt;Remove the directory itself and re-create it, this time adding to
    svn before setting the&amp;nbsp;ownership.&lt;/li&gt;
&lt;li&gt;Commit. It should now&amp;nbsp;work.&lt;/li&gt;
&lt;/ol&gt;</summary><category term="subversion"></category><category term="svn"></category><category term="version control"></category></entry><entry><title>Using Google Maps to produce usable, printable maps</title><link href="/2009/12/using-google-maps-to-produce-usable-printable-maps/" rel="alternate"></link><updated>2009-12-01T14:11:00-05:00</updated><author><name>admin</name></author><id>tag:,2009-12-01:2009/12/using-google-maps-to-produce-usable-printable-maps/</id><summary type="html">&lt;p&gt;This is a follow-up to my &lt;a href="/2009/11/making-maps-from-gis-data-with-inkscape/"&gt;Making maps from &lt;span class="caps"&gt;GIS&lt;/span&gt; data with Inkscape&lt;/a&gt;
post. After playing around with Inkscape for quite a while, and coming
up with the dismal results seen in that post, I decided there has to be
an easier way. A little Googling turned up &lt;a href="http://www.wipeout44.com/video/misc/google_maps_large.asp"&gt;this video tutorial&lt;/a&gt; on
how to print large scale maps from Google Maps. It turns out that the
Google Maps &lt;span class="caps"&gt;API&lt;/span&gt; will honor almost any pixel resolution that it&amp;#8217;s passed.
The &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/1146"&gt;Screengrab&lt;/a&gt; add-on for Firefox has the wonderful capability of
being able to capture a screengrab of page content, at actual
resolution, regardless of screen resolution. So load up a 5000x5000
pixel Google Map, use the Screengrab addon, and end up with a full
5000x5000 pixel image&amp;nbsp;file.&lt;/p&gt;
&lt;p&gt;After testing this a bit, I decided to go the Google Maps route. This
also has a lot of other added bonuses - I can store my overlay data in
simple &lt;span class="caps"&gt;XML&lt;/span&gt; files, add and remove layers on-the-fly, and also make it
available online (and, theoretically, to any Google Maps-equipped device
used by responders). This even opens up the possibility of using paper
maps as a last resort, and providing the Fire Department with live
hydrant maps on &lt;span class="caps"&gt;GPS&lt;/span&gt;-enabled handheld devices and&amp;nbsp;phones.&lt;/p&gt;
&lt;p&gt;The quirks, however, may need some serious photoshopping (err, rather,
&lt;a href="http://www.gimp.org/"&gt;gimp&lt;/a&gt;ing) to&amp;nbsp;fix:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;With all of the background color, how will this look when&amp;nbsp;printed?&lt;/li&gt;
&lt;li&gt;How do I make the town borders easily defined? It would be a &lt;em&gt;lot&lt;/em&gt;
    of raster editing to remove the background color of areas outside of&amp;nbsp;town.&lt;/li&gt;
&lt;li&gt;How do I overlay a grid for a street name&amp;nbsp;index?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The first step was to setup a large Google Map to develop with. I used
&lt;span class="caps"&gt;PHP&lt;/span&gt; and Monte Ohrt&amp;#8217;s &lt;a href="http://www.phpinsider.com/php/code/GoogleMapAPI/"&gt;GoogleMapAPI&lt;/a&gt; &lt;span class="caps"&gt;PHP&lt;/span&gt; wrapper class. It was simple
enough to setup a big (3300x5100px) map, zoom out in Firefox, and start
adding some stuff. My examples and development pages, if you want to
take a peek at the code, are &lt;a href="http://www.jasonantman.com/indexed/googleMaps/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The first step was to draw a polygon for the outline of the town. I
found some very detailed information on how to get zip code boundary
lines on Matt Cutts&amp;#8217; &lt;a href="http://www.mattcutts.com/blog/fun-with-zip-codes/"&gt;blog&lt;/a&gt;. Apparently, he&amp;#8217;s a Google software
engineer, heading up their webspam team. I grabbed the files from the
Census, as described, and came up with the boundary for my zip code
looking&amp;nbsp;like:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;        60      -0.741427638843858E+02       0.409963180802469E+02
      -0.741375870000000E+02       0.410075970000000E+02
      -0.741308870000000E+02       0.410061970000000E+02
      -0.741308870000000E+02       0.410061970000000E+02
      -0.741307260000000E+02       0.410032600000000E+02
      -0.741326870000000E+02       0.409955970000000E+02
      -0.741278870000000E+02       0.409943970000000E+02
      -0.741280870000000E+02       0.409938970000000E+02
      -0.741327870000000E+02       0.409853970000000E+02
      -0.741352870000000E+02       0.409830970000000E+02
      -0.741369600000000E+02       0.409818620000000E+02
      -0.741410520000000E+02       0.409821940000000E+02
      -0.741412870000000E+02       0.409826970000000E+02
      -0.741412870000000E+02       0.409826970000000E+02
      -0.741417870000000E+02       0.409847970000000E+02
      -0.741427870000000E+02       0.409863970000000E+02
      -0.741482870000000E+02       0.409868970000000E+02
      -0.741536880000000E+02       0.409899970000000E+02
      -0.741510880000000E+02       0.409929970000000E+02
      -0.741531880000000E+02       0.409965970000000E+02
      -0.741571880000000E+02       0.409988970000000E+02
      -0.741557880000000E+02       0.410013970000000E+02
      -0.741461870000000E+02       0.410018970000000E+02
      -0.741400870000000E+02       0.410065970000000E+02

      -0.741375870000000E+02       0.410075970000000E+02
END
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As per Matt&amp;#8217;s instructions, I stripped off the first and last lines,
converted everything to normal decimal notation, and built it into a &lt;span class="caps"&gt;PHP&lt;/span&gt;&amp;nbsp;array:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="x"&gt;$MP_boundary = array();&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.137587, 41.007597);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.130887, 41.006197);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.130887, 41.006197);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.130726, 41.003260);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.132687, 40.995597);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.127887, 40.994397);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.128087, 40.993897);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.132787, 40.985397);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.135287, 40.983097);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.136960, 40.981862);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.141052, 40.982194);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.141287, 40.982697);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.141287, 40.982697);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.141787, 40.984797);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.142787, 40.986397);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.148287, 40.986897);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.153688, 40.989997);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.151088, 40.992997);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.153188, 40.996597);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.157188, 40.998897);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.155788, 41.001397);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.146187, 41.001897);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.140087, 41.006597);&lt;/span&gt;
&lt;span class="x"&gt;$MP_boundary[] = array(-74.137587, 41.007597);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Though this data doesn&amp;#8217;t seem exactly 100% accurate (at least by my
knowledge of the town, and every map I can find) it&amp;#8217;s quite close and a
very good&amp;nbsp;start.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ll update later this week when I have some more&amp;nbsp;done&amp;#8230;&lt;/p&gt;</summary><category term="catrography"></category><category term="emergency"></category><category term="EMS"></category><category term="google"></category><category term="maps"></category><category term="PHP"></category></entry><entry><title>Making maps from GIS data with Inkscape</title><link href="/2009/11/making-maps-from-gis-data-with-inkscape/" rel="alternate"></link><updated>2009-11-25T09:24:00-05:00</updated><author><name>admin</name></author><id>tag:,2009-11-25:2009/11/making-maps-from-gis-data-with-inkscape/</id><summary type="html">&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;NOTE&lt;/span&gt;-&lt;/strong&gt; I more or less dropped this project, in favor of a more
precise approach, as outlined in &lt;a href="http://blog.jasonantman.com/2009/12/using-google-maps-to-produce-usable-printable-maps/"&gt;Using Google Maps to produce usable,
printable maps&lt;/a&gt;. This is being left just to give other people&amp;nbsp;ideas.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Background&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I was recently asked by one of the officers of our volunteer &lt;a href="http://www.mpnj.com/mp_fd.asp"&gt;fire
department&lt;/a&gt; if I could come up with a good map of our town that could
be laminated and put in the trucks. We currently have a really simple
&lt;a href="http://www.mpnj.com/forms/TownMap.pdf"&gt;&lt;span class="caps"&gt;PDF&lt;/span&gt; map&lt;/a&gt; of our town, but it was done by a for-profit entity and is
only available as the single-size &lt;span class="caps"&gt;PDF&lt;/span&gt;. The map itself looks&amp;nbsp;like:&lt;/p&gt;
&lt;p&gt;&lt;img alt="town map" src="GFX/TownMap.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Data&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;With a little research, I was able to find quite a lot of &lt;span class="caps"&gt;GIS&lt;/span&gt; data on
the &lt;a href="http://www.state.nj.us/dep/gis/"&gt;&lt;span class="caps"&gt;NJ&lt;/span&gt; Department of Environmental Protection &lt;span class="caps"&gt;GIS&lt;/span&gt; site&lt;/a&gt;. While the
&lt;span class="caps"&gt;GIS&lt;/span&gt; viewer software by &lt;a href="http://www.esri.com"&gt;&lt;span class="caps"&gt;ESRI&lt;/span&gt;&lt;/a&gt; seems to be the usual choice, I found
that the &lt;span class="caps"&gt;GPL&lt;/span&gt;&amp;#8217;ed &lt;a href="http://www.qgis.org/"&gt;Quantum &lt;span class="caps"&gt;GIS&lt;/span&gt;&lt;/a&gt; project (available in the OpenSuSE
&lt;a href="http://download.opensuse.org/repositories/Application:/Geo/"&gt;Application:Geo&lt;/a&gt; repository) displayed the data quite nicely. The
only major issue was with street names - there was no way to label lines
with two fields from the metadata (the &lt;span class="caps"&gt;TIGER&lt;/span&gt;/Line files have separate
fields for the street name and the st/rd/ln suffix). More importantly, I
needed something that both looked nice and included overlays
(specifically of the fire department&amp;#8217;s hydrant&amp;nbsp;map).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;SVG&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A little research led me to the &lt;a href="http://wiki.github.com/kbh3rd/shptosvg"&gt;shptosvg&lt;/a&gt; perl script that converts a
shapefile to &lt;span class="caps"&gt;SVG&lt;/span&gt;. As the streets within our town won&amp;#8217;t change any time
soon, I figured it was the most logical solution, when producing a map
for print where I would need to re-scale and edit overlay layers - to
just get the data I needed into &lt;span class="caps"&gt;SVG&lt;/span&gt; and do the rest there. I was able to
export both the county roads shapefile and the state municipal
boundaries shapefile to an &lt;span class="caps"&gt;SVG&lt;/span&gt; drawing, and then open that in
&lt;a href="http://www.inkscape.org/"&gt;Inkscape&lt;/a&gt;. To export them, I&amp;nbsp;used:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;perl shptosvg.pl -x3300 -y5100 -p1 -d0.5 berrds00.shp muni_boundaries/nj_munis.shp &amp;gt; test2.svg
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;where berrds00.shp is the &lt;span class="caps"&gt;TIGER&lt;/span&gt;/Line roads shapefile for our county
(from the 2000 census) and muni_boundaries/nj_munis.shp is the
shapefile for the &lt;span class="caps"&gt;NJ&lt;/span&gt; municipal boundaries. The x and y sizes (3300px and
5100px, respectively) were based on an 11x17&amp;#8221; sheet printed at&amp;nbsp;300dpi.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Initial&amp;nbsp;Work&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The initial work was a real pain. I moved each group of objects (the
municipal boundaries and the county road lines) to a separate layer and
then ungrouped them. Next, I began the painstaking process of deleting
all of the objects outside of our town boundary, except the roads
directly around our town. Once this was done, I used File -&gt; Document
Properties -&gt; Fit to Page Selection to &amp;#8220;crop&amp;#8221; the canvas to the
remaining objects. Thanks to the nature of &lt;strong&gt;S&lt;/strong&gt;&lt;span class="caps"&gt;VG&lt;/span&gt;, I was able to crop
the page down and then scale it up again to 11x17&amp;#8221; without any loss of
data or quality. I then moved the roads outside of our town (luckily,
most of the roads from the &lt;span class="caps"&gt;TIGER&lt;/span&gt; data ended up being made up of a series
of line segments, with most of them having a break at the town boundary)
to another layer, so that they could be easily given a light gray color.
I also gave the down boundary a nice red color. Finally, as I neglected
to include a railroad shapefile when I did the original conversion to
&lt;span class="caps"&gt;SVG&lt;/span&gt;, and adding one would obviously not jive with the massive deletion
and re-scaling I&amp;#8217;d done, I drew in the one railroad line running through
town by hand, and gave it a nice dashed line&amp;nbsp;type.&lt;/p&gt;
&lt;p&gt;At this point, I ended up with something that looked&amp;nbsp;like:&lt;/p&gt;
&lt;p&gt;&lt;img alt="inkscape work version 1" src="GFX/inkscape.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cleaning&amp;nbsp;Up&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I now had the following tasks to&amp;nbsp;perform:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Find a nicer way to show the street lines. The ideal would be a line
    made up of 1-2px lines on either side, with a white center. Second
    best would just be thinner&amp;nbsp;lines.&lt;/li&gt;
&lt;li&gt;Cleanup the roads around the town boundary - make sure they&amp;#8217;re black
    within the town and gray outside. If need be. delete some lines and
    re-draw them to split at the town&amp;nbsp;boundary.&lt;/li&gt;
&lt;li&gt;Add labels for the bordering&amp;nbsp;towns.&lt;/li&gt;
&lt;li&gt;The big one - add street name&amp;nbsp;labels.&lt;/li&gt;
&lt;li&gt;Perhaps add in icons/labels/boxes for churches, schools, municipal
    buildings,&amp;nbsp;etc.&lt;/li&gt;
&lt;li&gt;Add in, once I get a copy of the map, the fire department hydrant
    locations as another&amp;nbsp;layer.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And the added bonuses that I&amp;#8217;d like to&amp;nbsp;do:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add house numbering on a block level for each&amp;nbsp;street.&lt;/li&gt;
&lt;li&gt;Add a grid overlay, with an index of streets by grid square on the&amp;nbsp;back.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As of right now (about &lt;span class="caps"&gt;9AM&lt;/span&gt; on November 25, 2009) this is where I stand.
I&amp;#8217;ll update a bit more when I get farther&amp;nbsp;along.&lt;/p&gt;</summary><category term="gis"></category><category term="inkscape"></category><category term="map"></category><category term="shapefile"></category><category term="svg"></category></entry><entry><title>root on a Cyclades ACS console server</title><link href="/2009/11/root-on-a-cyclades-acs-console-server/" rel="alternate"></link><updated>2009-11-18T16:21:00-05:00</updated><author><name>admin</name></author><id>tag:,2009-11-18:2009/11/root-on-a-cyclades-acs-console-server/</id><summary type="html">&lt;p&gt;At work we have a Cyclades &lt;span class="caps"&gt;ACS16&lt;/span&gt; console server (running
Cyclades-&lt;span class="caps"&gt;ACS16&lt;/span&gt;-Linux V_3.2.0 (Jan/04/08)). While the docs claim all
sorts of &lt;span class="caps"&gt;LDAP&lt;/span&gt; features, there&amp;#8217;s nothing (either in the web &lt;span class="caps"&gt;GUI&lt;/span&gt; or the
&lt;span class="caps"&gt;CLI&lt;/span&gt; configuration tool) to setup &lt;span class="caps"&gt;LDAP&lt;/span&gt; with &lt;span class="caps"&gt;TLS&lt;/span&gt; or required group
membership. I tried modifying the /etc/ldap.conf and /etc/nsswitch.conf
files, running &lt;code&gt;saveconf&lt;/code&gt; and &lt;code&gt;runconf&lt;/code&gt; and even rebooting, but no luck.
It was apparent that I needed root on the box. Unfortunately, they don&amp;#8217;t
give you root, and their sudo command is locked down. But, I figured, if
sudo would let me &lt;/code&gt; and &lt;code&gt;chown&lt;/code&gt; and &lt;code&gt;cat&lt;/code&gt; and &lt;code&gt;mv&lt;/code&gt; (enough to
switch out the ldap.conf and nsswitch.conf files), root should be pretty&amp;nbsp;easy.&lt;/p&gt;
&lt;p&gt;The failing of Cyclades&amp;#8217; sudo lockdown is that it allows sudo execution
of a few random shell scripts, and also allows&amp;nbsp;`mv`.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;/etc/sudoers&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;# sudoers file.
#
# This file MUST be edited with the &amp;#39;visudo&amp;#39; command as root.
#
# See the sudoers man page for the details on how to write a sudoers file.
#

# User alias specification

# Runas alias specification

# Host alias specification

# Cmnd alias specification
Cmnd_Alias     SH_CMDS = /bin/cp,  
                        /bin/chown,  
                        /bin/egrep,  
                        /bin/grep,  
                        /bin/cat,  
                        /bin/tar,  
                        /bin/kill,  
                        /bin/mkdir,  
                        /bin/mv,  
                        /bin/rm,  
                        /bin/sed,  
                        /bin/touch,  
                        /sbin/reboot,  
                        /usr/bin/killall,  
                        /usr/bin/w,  
                        /bin/w_cas,  
                        /bin/sess_mngt,  
                        /sbin/route,  
                        /bin/what

Cmnd_Alias     CONF_FILES = /bin/vi /etc/network/st_routes,  
                           /bin/vi /etc/portslave/pslave.conf,  
                           /bin/vi /etc/resolv.conf

Cmnd_Alias     APPLICATIONS = /bin/pmCommand,  
                             /bin/saveconf,  
                             /bin/restoreconf,  
                             /bin/runconf,  
                             /bin/daemon.sh,  
                             /bin/manageService.sh,  
                             /bin/dsviewKillAdmin,   
                             /bin/pmfwupgrade,   
                             /bin/adsap2_clear,   
                             /bin/upgrade_power.sh,   
                             /bin/signal_ras

# User privilege specification
# root can run any command on any host as any user.
root    ALL = (ALL) ALL

# admin user group command specification.
%admin      ALL = NOPASSWD: SH_CMDS, CONF_FILES, APPLICATIONS
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, /bin/upgrade_power.sh doesn&amp;#8217;t look like we&amp;#8217;re using it too much.
Here&amp;#8217;s our root procedure. Before doing this, create the
&lt;code&gt;/home/admin/foo.sh&lt;/code&gt; script.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;sudo cp /bin/upgrade_power.sh /bin/upgrade_power.sh.SAVE
sudo chown root:root /home/admin/foo.sh
sudo mv /home/admin/foo.sh /bin/upgrade_power.sh
sudo /bin/upgrade_power.sh
sudo cat /etc/sudoers &lt;span class="c"&gt;# just to verify that it worked&lt;/span&gt;
sudo mv /bin/upgrade_power.sh.&lt;span class="caps"&gt;SAVE&lt;/span&gt; /bin/upgrade_power.sh &lt;span class="c"&gt;# set things back to the way they were&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the key to all of it is the simple &lt;code&gt;/home/admin/foo.sh&lt;/code&gt; script:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

chmod u+w /etc/sudoers
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;%admin      &lt;span class="caps"&gt;ALL&lt;/span&gt; = &lt;span class="caps"&gt;NOPASSWD&lt;/span&gt;: &lt;span class="caps"&gt;ALL&lt;/span&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/sudoers
chmod u-w /etc/sudoers
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That&amp;#8217;s&amp;nbsp;it!&lt;/p&gt;</summary><category term="acs"></category><category term="cyclades"></category><category term="gettingroot"></category></entry><entry><title>Motorola Droid - Volume way too low</title><link href="/2009/11/motorola-droid-volume-way-too-low/" rel="alternate"></link><updated>2009-11-17T08:51:00-05:00</updated><author><name>admin</name></author><id>tag:,2009-11-17:2009/11/motorola-droid-volume-way-too-low/</id><summary type="html">&lt;p&gt;I&amp;#8217;m not sure how I did it, but I&amp;#8217;ve had my Droid for a few hours under a
week - the phone&amp;#8217;s uptime is about 187 hours - and I&amp;#8217;ve already got a
major problem. Sometime this weekend, somehow, the volume for everything
got set way too low. Incoming call ringer, notifications, alarms, Google
Maps Navigation, everything seems to be playing through the speaker at
the regular in-call volume - i.e. the volume that it should be at if the
handset is up to my&amp;nbsp;ear.&lt;/p&gt;
&lt;p&gt;I happened by one &lt;a href="http://pocketnow.com/tech-news/droid-can-you-hear-me-now"&gt;blog post&lt;/a&gt; mentioning this issue. The two
resolutions mentioned were a soft reset and a replacement of the phone.
Hoping for the former, I performed a soft reset - using the good &amp;#8216;ol
Ctrl + Alt + Del sequence - and this seems to have fixed it. Now I just
have to hope that it stays&amp;nbsp;fixed&amp;#8230;&lt;/p&gt;
&lt;p&gt;My personal theory is that some application - whether a code problem or
a crash - left the speaker in a low-volume state. Most likely was my
poking around in the hidden menus which, at one point, killed the Phone
app&amp;nbsp;process.&lt;/p&gt;</summary><category term="android"></category><category term="droid"></category></entry><entry><title>Running a script on USB drive insertion</title><link href="/2009/11/running-a-script-on-usb-drive-insertion/" rel="alternate"></link><updated>2009-11-11T11:47:00-05:00</updated><author><name>admin</name></author><id>tag:,2009-11-11:2009/11/running-a-script-on-usb-drive-insertion/</id><summary type="html">&lt;p&gt;Before I even get into how to do this, &lt;strong&gt;be warned:&lt;/strong&gt; this is a &lt;em&gt;really&lt;/em&gt;
bad idea unless you can ensure total physical access control to the
machine. About the only place I&amp;#8217;d ever use it is in a non-networked
embedded system in a secure location. Its original intent is to handle
loading of pictures onto a Linux-based digital photo&amp;nbsp;frame.&lt;/p&gt;
&lt;p&gt;So, you want to run a specific script on insertion of a &lt;span class="caps"&gt;USB&lt;/span&gt; drive.
Here&amp;#8217;s how to use udev to do&amp;nbsp;it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create &lt;code&gt;/etc/udev/rules.d/99-usbhook.rules&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;ACTION==&amp;quot;add&amp;quot;,KERNEL==&amp;quot;sd*&amp;quot;, SUBSYSTEMS==&amp;quot;usb&amp;quot;, ATTRS{product}==&amp;quot;Mass Storage&amp;quot;, RUN+=&amp;quot;/root/bin/usbhook %k&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&amp;lt;p&amp;gt;
This will run &amp;quot;/root/bin/usbook&amp;quot;, passing it the device name as an
argument, every time a USB Mass Storage device is plugged in.
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;run &lt;code&gt;udevcontrol reload_rules&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create your usbhook&amp;nbsp;script.&lt;/li&gt;
&lt;li&gt;Enjoy&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here is my usbhook script to copy all files from a &lt;span class="caps"&gt;USB&lt;/span&gt; mass storage disk
to a specific location. It includes quite a bit of debugging, and also
checks for the presence of a file called &amp;#8220;foobarbaz.txt&amp;#8221; on the device
before copying the files&amp;nbsp;over.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c"&gt;# script to move over all files from a &lt;span class="caps"&gt;USB&lt;/span&gt; key&lt;/span&gt;
&lt;span class="c"&gt;# when it is inserted into the system.&lt;/span&gt;

&lt;span class="c"&gt;# should be called from a udev rule like:&lt;/span&gt;
&lt;span class="c"&gt;#&lt;span class="caps"&gt;ACTION&lt;/span&gt;==&amp;quot;add&amp;quot;,&lt;span class="caps"&gt;KERNEL&lt;/span&gt;==&amp;quot;sd*&amp;quot;, &lt;span class="caps"&gt;SUBSYSTEMS&lt;/span&gt;==&amp;quot;usb&amp;quot;, &lt;span class="caps"&gt;ATTRS&lt;/span&gt;{product}==&amp;quot;Mass Storage&amp;quot;, &lt;span class="caps"&gt;RUN&lt;/span&gt;+=&amp;quot;/root/bin/usbhook %k&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Copyright 2009 Jason Antman.  &lt;/span&gt;
&lt;span class="c"&gt;# &lt;/span&gt;

&lt;span class="c"&gt;# &lt;span class="caps"&gt;CONFIGURATION&lt;/span&gt;&lt;/span&gt;
&lt;span class="nv"&gt;&lt;span class="caps"&gt;DEBUG&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1 &lt;span class="c"&gt;# set to 1 for debugging output&lt;/span&gt;
&lt;span class="nv"&gt;&lt;span class="caps"&gt;DEST&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/home/foo/&amp;quot;&lt;/span&gt; &lt;span class="c"&gt;# destination for files&lt;/span&gt;


&lt;span class="nv"&gt;&lt;span class="caps"&gt;DEVICE&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$1&amp;quot;&lt;/span&gt; &lt;span class="c"&gt;# the device name&lt;/span&gt;
&lt;span class="nv"&gt;&lt;span class="caps"&gt;LOGFACILITY&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;kernel.info&amp;quot;&lt;/span&gt; &lt;span class="c"&gt;# for debugging output&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;&lt;span class="caps"&gt;DEBUG&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;:=0&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; 1 &lt;span class="o"&gt;]&lt;/span&gt;; &lt;span class="k"&gt;then &lt;/span&gt;logger &lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;LOGFACILITY&lt;/span&gt;&amp;quot;&lt;/span&gt; usbhook called with arguments: &lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;DEVICE&lt;/span&gt;&amp;quot;&lt;/span&gt;; &lt;span class="k"&gt;fi&lt;/span&gt;

sleep 5 &lt;span class="c"&gt;# delay 5 seconds to wait for mount&lt;/span&gt;

mount | grep &lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;DEVICE&lt;/span&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;&lt;span class="caps"&gt;FOO&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$?&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$&lt;span class="caps"&gt;FOO&lt;/span&gt;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; 0 &lt;span class="o"&gt;]&lt;/span&gt;;
&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;&lt;span class="caps"&gt;DEBUG&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;:=0&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; 1 &lt;span class="o"&gt;]&lt;/span&gt;; &lt;span class="k"&gt;then &lt;/span&gt;logger &lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;LOGFACILITY&lt;/span&gt;&amp;quot;&lt;/span&gt; usbhook device mounted: &lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;DEVICE&lt;/span&gt;&amp;quot;&lt;/span&gt;; &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="k"&gt;    if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;&lt;span class="caps"&gt;DEBUG&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;:=0&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; 1 &lt;span class="o"&gt;]&lt;/span&gt;; &lt;span class="k"&gt;then &lt;/span&gt;logger &lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;LOGFACILITY&lt;/span&gt;&amp;quot;&lt;/span&gt; usbhook device &lt;span class="caps"&gt;NOT&lt;/span&gt; mounted: &lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;DEVICE&lt;/span&gt;&amp;quot;&lt;/span&gt; - exiting; &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;exit &lt;/span&gt;0
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="nv"&gt;&lt;span class="caps"&gt;BAR&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;mount | grep &lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;DEVICE&lt;/span&gt;&amp;quot;&lt;/span&gt; | awk &lt;span class="s1"&gt;&amp;#39;{ print $3 }&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;BAR&lt;/span&gt;/foobarbaz.txt&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;&lt;span class="caps"&gt;DEBUG&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;:=0&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; 1 &lt;span class="o"&gt;]&lt;/span&gt;; &lt;span class="k"&gt;then &lt;/span&gt;logger &lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;LOGFACILITY&lt;/span&gt;&amp;quot;&lt;/span&gt; usbhook &lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;BAR&lt;/span&gt;&amp;quot;&lt;/span&gt;/foobarbaz.txt found; &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="k"&gt;    if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;&lt;span class="caps"&gt;DEBUG&lt;/span&gt;&lt;/span&gt;&lt;span class="p"&gt;:=0&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; 1 &lt;span class="o"&gt;]&lt;/span&gt;; &lt;span class="k"&gt;then &lt;/span&gt;logger &lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;LOGFACILITY&lt;/span&gt;&amp;quot;&lt;/span&gt; usbhook &lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;BAR&lt;/span&gt;&amp;quot;&lt;/span&gt;/foobarbaz.txt &lt;span class="caps"&gt;NOT&lt;/span&gt; found - exiting; &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;exit &lt;/span&gt;0
&lt;span class="k"&gt;fi&lt;/span&gt;

cp -R &lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;DEVICE&lt;/span&gt;&amp;quot;&lt;/span&gt;/* &lt;span class="s2"&gt;&amp;quot;$&lt;span class="caps"&gt;DEST&lt;/span&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This was tested on &lt;a href="http://www.opensuse.org"&gt;OpenSuSE&lt;/a&gt;&amp;nbsp;10.3.&lt;/p&gt;</summary><category term="linux"></category><category term="script"></category><category term="udev"></category><category term="usb"></category></entry><entry><title>rsyslog on CentOS5</title><link href="/2009/09/rsyslog-on-centos5/" rel="alternate"></link><updated>2009-09-17T15:45:00-04:00</updated><author><name>admin</name></author><id>tag:,2009-09-17:2009/09/rsyslog-on-centos5/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Update July 2011&lt;/strong&gt; - We&amp;#8217;ve been using rsyslog for our centralized
syslog infrastructure at &lt;a href="http://services.rutgers.edu/"&gt;work&lt;/a&gt; (site being redesigned at the moment)
for about a year now. As a result, our colleagues at &lt;a href="http://oss.rutgers.edu"&gt;Rutgers University
Open System Solutions&lt;/a&gt; have been nice enough to include rsyslog in
their &lt;a href="http://koji.rutgers.edu"&gt;koji&lt;/a&gt; build system. Updated packages of rsyslog for CentOS 5
x86 and x86_64 are available &lt;a href="http://koji.rutgers.edu/koji/buildinfo?buildID=2140"&gt;here&lt;/a&gt;. Please be aware that they have
some dependencies of specific &lt;span class="caps"&gt;RU&lt;/span&gt; versions. It&amp;#8217;s probably best if you
download the source &lt;span class="caps"&gt;RPM&lt;/span&gt; and build it yourself using rpmbuild. The
current &lt;a href="http://koji.rutgers.edu/koji/rpminfo?rpmID=14051"&gt;5.6.2 source package&lt;/a&gt; includes a CentOS 5 spec file and other
related scripts. This &lt;span class="caps"&gt;RPM&lt;/span&gt; repository is only open to the public as a
courtesy, so please download once at most and distribute it to your
servers&amp;nbsp;yourself.&lt;/p&gt;
&lt;p&gt;Having finally setup my storage server (I know it&amp;#8217;s not much, but for me
starting with &lt;span class="caps"&gt;1TB&lt;/span&gt; is wonderful), I actually got around to redoing my
centralized logging infrastructure. Here&amp;#8217;s a small summary of what I
have to&amp;nbsp;handle:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;logs from 15 hosts at 2 locations, including Cisco devices and a mix
    of syslog and syslog-ng Linux&amp;nbsp;boxen.&lt;/li&gt;
&lt;li&gt;Remote location logs forwarded to one server at remote location,
    then to centralized log server via &lt;span class="caps"&gt;SSH&lt;/span&gt; port&amp;nbsp;forwarding.&lt;/li&gt;
&lt;li&gt;48-hour retention of full iptables border firewall logs (\~&amp;nbsp;&lt;span class="caps"&gt;3GB&lt;/span&gt;/day).&lt;/li&gt;
&lt;li&gt;Future plans to have all logs stored in&amp;nbsp;MySQL.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;#8217;d previously had most of the boxes logging to an older host with low
disk space, but had to discontinue this due to lack of storage. Having
assessed the options, and with definite plans to log to a database, I
decided to go with &lt;a href="http://www.rsyslog.com"&gt;rsyslog&lt;/a&gt; for the centralized&amp;nbsp;host.&lt;/p&gt;
&lt;p&gt;Unfortunately, stable rsyslog is up to 4.4.x, with 5.x in development,
and the newest package I could find for CentOS was 2.something. So, I
set about building it from source. It was a *very* difficult build on
my machine (CentOS 5.3, 2.6.18-128.el5 #1 &lt;span class="caps"&gt;SMP&lt;/span&gt; i686). Unfortunately, I
don&amp;#8217;t have an &lt;span class="caps"&gt;RPM&lt;/span&gt; build environment setup, but here&amp;#8217;s how I accomplished&amp;nbsp;it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I f not already done, &lt;span style="font-family: courier new;"&gt;yum
    install&amp;nbsp;rpmforge-release&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: courier new;"&gt;yum install gnutls-devel
    gnutls libatomic_ops-devel gcc43&amp;nbsp;java-1.6.0-openjdk-devel&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Download &lt;a href="http://rsyslog.com/Downloads-index-req-viewdownload-cid-1-orderby-dateD.phtml"&gt;rsyslog-4.5.2&lt;/a&gt; (currently Beta). Extract, cd into the&amp;nbsp;directory.&lt;/li&gt;
&lt;li&gt;To test the performance difference from MySQL,
    &lt;span style="font-family: courier new;"&gt;yum install php-pgsql
    postgresql postgresql-devel postgresql-libs&amp;nbsp;postgresql-server&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Edit the &amp;#8220;configure&amp;#8221; script, add
    &lt;span style="font-family: courier new;"&gt;-DHAVE_ATOMIC_BUILTINS&lt;/span&gt;
    to the &lt;span style="font-family: courier new;"&gt;&lt;span class="caps"&gt;DEFS&lt;/span&gt;&lt;/span&gt; line
    (28936 in this&amp;nbsp;version).&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: courier new;"&gt;export&amp;nbsp;&lt;span class="caps"&gt;CC&lt;/span&gt;=/usr/bin/gcc43&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: courier new;"&gt;export&amp;nbsp;&lt;span class="caps"&gt;CCDEPMODE&lt;/span&gt;=&amp;#8221;depmode=gcc4&amp;#8221;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: courier new;"&gt;export &lt;span class="caps"&gt;CFLAGS&lt;/span&gt;=&amp;#8221;-O3&amp;nbsp;-march=i686&amp;#8221;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: courier new;"&gt;./configure &amp;#8212;enable-mysql
    &amp;#8212;enable-omtemplate &amp;#8212;enable-gnutls&amp;nbsp;&amp;#8212;enable-pgsql&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: courier new;"&gt;make &amp;amp;&amp;amp; make&amp;nbsp;install&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For my system, I used the
&lt;span style="font-family: courier new;"&gt;/etc/sysconfig/rsyslog&lt;/span&gt;
and &lt;span style="font-family: courier new;"&gt;/etc/init.d/rsyslog&lt;/span&gt;
from the 2.x rsyslog RPMs, with some modifications as&amp;nbsp;follows:&lt;/p&gt;
&lt;p&gt;&lt;span style="font-family: courier new;"&gt;/etc/sysconfig/rsyslog&lt;/span&gt;
&lt;em&gt;(comments have been removed to save space)&lt;/em&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# -c4   version 4 compatibility mode&lt;/span&gt;
&lt;span class="c"&gt;# -x     disable &lt;span class="caps"&gt;DNS&lt;/span&gt; for remote messages (don&amp;#39;t want it to hang if &lt;span class="caps"&gt;DNS&lt;/span&gt; is down&lt;/span&gt;
&lt;span class="c"&gt;# -4     IPv4 only&lt;/span&gt;
&lt;span class="nv"&gt;SYSLOGD_OPTIONS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-c4 -x -4&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span style="font-family: courier new;"&gt;/etc/init.d/rsyslog&lt;/span&gt;
&lt;em&gt;(comments have been removed to save space)&lt;/em&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# rsyslog        Starts rsyslogd.&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# chkconfig: - 12 88&lt;/span&gt;
&lt;span class="c"&gt;# description: Syslog is the facility by which many daemons use to log   &lt;/span&gt;
&lt;span class="c"&gt;# messages to various system log files.  It is a good idea to always   &lt;/span&gt;
&lt;span class="c"&gt;# run rsyslog.&lt;/span&gt;
&lt;span class="c"&gt;### &lt;span class="caps"&gt;BEGIN&lt;/span&gt; &lt;span class="caps"&gt;INIT&lt;/span&gt; &lt;span class="caps"&gt;INFO&lt;/span&gt;&lt;/span&gt;
&lt;span class="c"&gt;# Provides: $syslog&lt;/span&gt;
&lt;span class="c"&gt;# Required-Start: $local_fs $network $remote_fs&lt;/span&gt;
&lt;span class="c"&gt;# Required-Stop: $local_fs $network $remote_fs&lt;/span&gt;
&lt;span class="c"&gt;# Default-Stop: 0 1 2 3 4 5 6&lt;/span&gt;
&lt;span class="c"&gt;# Short-Description: Enhanced system logging and kernel message trapping daemons&lt;/span&gt;
&lt;span class="c"&gt;# Description: Rsyslog is an enhanced multi-threaded syslogd supporting,&lt;/span&gt;
&lt;span class="c"&gt;#              among others, MySQL, syslog/tcp, &lt;span class="caps"&gt;RFC&lt;/span&gt; 3195, permitted&lt;/span&gt;
&lt;span class="c"&gt;#              sender lists, filtering on any message part, and fine&lt;/span&gt;
&lt;span class="c"&gt;#              grain output format control.&lt;/span&gt;
&lt;span class="c"&gt;### &lt;span class="caps"&gt;END&lt;/span&gt; &lt;span class="caps"&gt;INIT&lt;/span&gt; &lt;span class="caps"&gt;INFO&lt;/span&gt;&lt;/span&gt;

&lt;span class="c"&gt;# Source function library.&lt;/span&gt;
. /etc/init.d/functions

&lt;span class="nv"&gt;&lt;span class="caps"&gt;RETVAL&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0

start&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;[&lt;/span&gt; -x /sbin/rsyslogd &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;5

        &lt;span class="c"&gt;# Do not start rsyslog when sysklogd is running&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -e /var/run/syslogd.pid &lt;span class="o"&gt;]&lt;/span&gt; ; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;                &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;$&amp;quot;Shut down sysklogd before you run rsyslog&amp;quot;&lt;/span&gt;;
                &lt;span class="nb"&gt;exit &lt;/span&gt;1;
        &lt;span class="k"&gt;fi&lt;/span&gt;

        &lt;span class="c"&gt;# Source config&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f /etc/sysconfig/rsyslog &lt;span class="o"&gt;]&lt;/span&gt; ; &lt;span class="k"&gt;then&lt;/span&gt;
                . /etc/sysconfig/rsyslog
        &lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="k"&gt;                &lt;/span&gt;&lt;span class="nv"&gt;SYSLOGD_OPTIONS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-m 0&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="k"&gt;        if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -z &lt;span class="s2"&gt;&amp;quot;$SYSLOG_UMASK&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; ; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;              &lt;/span&gt;&lt;span class="nv"&gt;SYSLOG_UMASK&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;077;
        &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;umask&lt;/span&gt; &lt;span class="nv"&gt;$SYSLOG_UMASK&lt;/span&gt;

        &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;$&amp;quot;Starting system logger: &amp;quot;&lt;/span&gt;
        daemon rsyslogd &lt;span class="nv"&gt;$SYSLOGD_OPTIONS&lt;/span&gt;
        &lt;span class="nv"&gt;&lt;span class="caps"&gt;RETVAL&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt;
        &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$&lt;span class="caps"&gt;RETVAL&lt;/span&gt;&lt;/span&gt; -eq 0 &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; touch /var/lock/subsys/rsyslog
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$&lt;span class="caps"&gt;RETVAL&lt;/span&gt;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
stop&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;$&amp;quot;Shutting down system logger: &amp;quot;&lt;/span&gt;
        killproc rsyslogd
        &lt;span class="nv"&gt;&lt;span class="caps"&gt;RETVAL&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt;
        &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$&lt;span class="caps"&gt;RETVAL&lt;/span&gt;&lt;/span&gt; -eq 0 &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -f /var/lock/subsys/rsyslog
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$&lt;span class="caps"&gt;RETVAL&lt;/span&gt;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
reload&lt;span class="o"&gt;()&lt;/span&gt;  &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;&lt;span class="caps"&gt;RETVAL&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
    &lt;span class="nv"&gt;syslog&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;cat /var/run/rsyslogd.pid 2&amp;gt;/dev/null&lt;span class="sb"&gt;`&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;Reloading system logger...&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;${syslog}&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -e /proc/&lt;span class="s2"&gt;&amp;quot;${syslog}&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;kill&lt;/span&gt; -&lt;span class="caps"&gt;HUP&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$syslog&amp;quot;&lt;/span&gt;;
        &lt;span class="nv"&gt;&lt;span class="caps"&gt;RETVAL&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;    if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$&lt;span class="caps"&gt;RETVAL&lt;/span&gt;&lt;/span&gt; -ne 0 &lt;span class="o"&gt;]&lt;/span&gt;; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;        &lt;/span&gt;failure
    &lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="k"&gt;        &lt;/span&gt;success
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;span class="nb"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$&lt;span class="caps"&gt;RETVAL&lt;/span&gt;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
rhstatus&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        status rsyslogd
&lt;span class="o"&gt;}&lt;/span&gt;
restart&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        stop
        start
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$1&amp;quot;&lt;/span&gt; in
  start&lt;span class="o"&gt;)&lt;/span&gt;
        start
        ;;
  stop&lt;span class="o"&gt;)&lt;/span&gt;
        stop
        ;;
  restart&lt;span class="o"&gt;)&lt;/span&gt;
        restart
        ;;
  reload|force-reload&lt;span class="o"&gt;)&lt;/span&gt;
        reload
        ;;
  status&lt;span class="o"&gt;)&lt;/span&gt;
        rhstatus
        ;;
  condrestart&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;[&lt;/span&gt; -f /var/lock/subsys/rsyslog &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; restart &lt;span class="o"&gt;||&lt;/span&gt; :
        ;;
  *&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;$&amp;quot;Usage: $0 {start|stop|restart|reload|force-reload|condrestart}&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;exit &lt;/span&gt;2
&lt;span class="k"&gt;esac&lt;/span&gt;

&lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;My rsyslog.conf file&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;~~~~{.text&amp;nbsp;only}&lt;/p&gt;
&lt;h1 id="uncomment-next-line-for-debugging-use-graphvis-to-see-the-graph"&gt;uncomment next line for debugging, use graphvis to see the&amp;nbsp;graph&lt;/h1&gt;
&lt;h1 id="generateconfiggraph-rootrsyslog-graphdot"&gt;$GenerateConfigGraph&amp;nbsp;/root/rsyslog-graph.dot&lt;/h1&gt;
&lt;p&gt;$ModLoad imklog
$ModLoad imtcp
$ModLoad imudp
$ModLoad&amp;nbsp;imuxsock&lt;/p&gt;
&lt;h1 id="template"&gt;template&lt;/h1&gt;
&lt;p&gt;$template&amp;nbsp;RemoteHost,&amp;#8221;/var/log/&lt;span class="caps"&gt;HOSTS&lt;/span&gt;/%&lt;span class="caps"&gt;HOSTNAME&lt;/span&gt;%/%$&lt;span class="caps"&gt;YEAR&lt;/span&gt;%/%$&lt;span class="caps"&gt;MONTH&lt;/span&gt;%/%$&lt;span class="caps"&gt;DAY&lt;/span&gt;%/%syslogfacility-text%.log&amp;#8221;&lt;/p&gt;
&lt;h1 id="used-for-cisco-vanilla-syslog-when-we-cant-parse-host-name"&gt;used for Cisco, vanilla syslog when we can&amp;#8217;t parse host&amp;nbsp;name&lt;/h1&gt;
&lt;p&gt;$template&amp;nbsp;RemoteFromHost,&amp;#8221;/var/log/&lt;span class="caps"&gt;HOSTS&lt;/span&gt;/%&lt;span class="caps"&gt;FROMHOST&lt;/span&gt;%/%$&lt;span class="caps"&gt;YEAR&lt;/span&gt;%/%$&lt;span class="caps"&gt;MONTH&lt;/span&gt;%/%$&lt;span class="caps"&gt;DAY&lt;/span&gt;%/%syslogfacility-text%.log&amp;#8221;&lt;/p&gt;
&lt;h1 id="note-we-cant-bind-udp-to-a-ruleset-so-it-enters-the-local-ruleset"&gt;&lt;span class="caps"&gt;NOTE&lt;/span&gt; - we can&amp;#8217;t bind &lt;span class="caps"&gt;UDP&lt;/span&gt; to a ruleset, so it enters the local&amp;nbsp;RuleSet&lt;/h1&gt;
&lt;h1 id="and-has-to-be-dealt-with-here"&gt;and has to be dealt with&amp;nbsp;here&lt;/h1&gt;
&lt;p&gt;$RuleSet&amp;nbsp;local&lt;/p&gt;
&lt;h1 id="for-cisco-vyatta-doesnt-send-hostname-need-to-use-ip-manually"&gt;for cisco, vyatta - doesn&amp;#8217;t send hostname, need to use &lt;span class="caps"&gt;IP&lt;/span&gt;&amp;nbsp;manually&lt;/h1&gt;
&lt;p&gt;:fromhost, isequal, &amp;#8220;192.168.0.99&amp;#8221; ?RemoteFromHost
:fromhost, isequal, &amp;#8220;192.168.0.99&amp;#8221; ~
:fromhost, isequal, &amp;#8220;192.168.0.103&amp;#8221; ?RemoteFromHost
:fromhost, isequal, &amp;#8220;192.168.0.103&amp;#8221; ~
:fromhost, isequal, &amp;#8220;192.168.0.97&amp;#8221; ?RemoteFromHost
:fromhost, isequal, &amp;#8220;192.168.0.97&amp;#8221; ~
:fromhost, isequal, &amp;#8220;192.168.0.111&amp;#8221; ?RemoteFromHost
:fromhost, isequal, &amp;#8220;192.168.0.111&amp;#8221;&amp;nbsp;~&lt;/p&gt;
&lt;h1 id="anything-from-a-remote-host-gets-logged-as-such"&gt;anything from a remote host gets logged as&amp;nbsp;such&lt;/h1&gt;
&lt;p&gt;:source, isequal, &amp;#8220;&amp;#8221; ?RemoteHost
:source, isequal, &amp;#8220;&amp;#8221;&amp;nbsp;~&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;h1 id="local-logging"&gt;&lt;span class="caps"&gt;LOCAL&lt;/span&gt;&amp;nbsp;&lt;span class="caps"&gt;LOGGING&lt;/span&gt;&lt;/h1&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;kern.&lt;em&gt;                                                 /var/log/messages
&lt;/em&gt;.info;mail.none;authpriv.none;cron.none                /var/log/messages
authpriv.&lt;em&gt;                                              /var/log/secure
mail.&lt;/em&gt;                                                  -/var/log/maillog
cron.&lt;em&gt;                                                  /var/log/cron
&lt;/em&gt;.emerg                                                 &lt;em&gt;
uucp,news.crit                                          /var/log/spooler
local7.&lt;/em&gt;&amp;nbsp;/var/log/boot.log&lt;/p&gt;
&lt;h1 id="use-the-local-ruleset-as-default"&gt;use the local RuleSet as&amp;nbsp;default&lt;/h1&gt;
&lt;p&gt;$DefaultRuleset&amp;nbsp;local&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;h1 id="begin-centralized-logging-stuff-added-2009-09-16-by-jantman"&gt;&lt;span class="caps"&gt;BEGIN&lt;/span&gt; centralized logging stuff added 2009-09-16 by&amp;nbsp;jantman&lt;/h1&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;h1 id="define-ruleset-for-remote-logging"&gt;define ruleset for remote&amp;nbsp;logging&lt;/h1&gt;
&lt;p&gt;$RuleSet&amp;nbsp;remote&lt;/p&gt;
&lt;p&gt;&lt;em&gt;.&lt;/em&gt;&amp;nbsp;?RemoteHost&lt;/p&gt;
&lt;h1 id="bind-ruleset-to-tcp-listener"&gt;bind ruleset to tcp&amp;nbsp;listener&lt;/h1&gt;
&lt;p&gt;$InputTCPServerBindRuleset&amp;nbsp;remote&lt;/p&gt;
&lt;h1 id="and-activate-it"&gt;and activate&amp;nbsp;it:&lt;/h1&gt;
&lt;p&gt;$InputTCPServerRun&amp;nbsp;5000&lt;/p&gt;
&lt;p&gt;$UDPServerRun 514
$UDPServerRun&amp;nbsp;5000&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;h1 id="end-remote-logging"&gt;&lt;span class="caps"&gt;END&lt;/span&gt; remote&amp;nbsp;logging&lt;/h1&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;~~~~&lt;/p&gt;</summary><category term="centos"></category><category term="logging"></category><category term="rsyslog"></category><category term="syslog"></category></entry><entry><title>Netgear ReadyNAS 1100 and long UID numbers</title><link href="/2009/06/netgear-readynas-1100-and-long-uid-numbers/" rel="alternate"></link><updated>2009-06-23T16:45:00-04:00</updated><author><name>admin</name></author><id>tag:,2009-06-23:2009/06/netgear-readynas-1100-and-long-uid-numbers/</id><summary type="html">&lt;p&gt;I spent part of the day installing a &lt;a href="http://www.netgear.com/Products/Storage/ReadyNAS1100.aspx"&gt;Netgear ReadyNAS 1100&lt;/a&gt; for
backup storage. It&amp;#8217;s a cute little 1U storage appliance with 4 &lt;span class="caps"&gt;SATA&lt;/span&gt; disk
bays, two Gig copper ports and about every sort of hokey service you
could possibly want in something that&amp;#8217;s billed as a small business
storage server but running a sort-of-scaled-up home appliance &lt;span class="caps"&gt;OS&lt;/span&gt;. That
being said, it comes at a wonderful price (we bought one empty and added
4x 1.&lt;span class="caps"&gt;5TB&lt;/span&gt; disks) and runs&amp;nbsp;Linux.&lt;/p&gt;
&lt;p&gt;I had a few minor issues with the installation (more along the lines of
trying to do things that weren&amp;#8217;t clearly documented rather than problems
with the unit). NetGear tech support (&amp;#8220;ProSupport Labs&amp;#8221;) was quite good
once I got past the first level or two, and Mark H. who helped me with
most of my issues was one of the best tech support people I&amp;#8217;ve ever
spoken to. In fact, he probably ties with &lt;a href="http://blog.jasonantman.com/2007/03/managing-g1-proliant-servers-with-modern-linux/"&gt;Paulo from &lt;span class="caps"&gt;HP&lt;/span&gt;&lt;/a&gt; for the best
tech support person I&amp;#8217;ve ever dealt&amp;nbsp;with.&lt;/p&gt;
&lt;p&gt;Anyway, the only issue with the NetGear installation that we weren&amp;#8217;t
able to resolve was the fact that the web configuration tool
(&amp;#8220;Frontview&amp;#8221;) will only accept UIDs of a maximum of five characters.
Here at Rutgers, we have a unified &lt;span class="caps"&gt;UID&lt;/span&gt; space, with numbers well in
excess of 100,000. As a result, my plan of having &lt;span class="caps"&gt;NFS&lt;/span&gt; play well wasn&amp;#8217;t
really going to work. Mark wasn&amp;#8217;t able to come up with a solution
(obviously - it&amp;#8217;s something that, at best, can get fixed in the next
version of the firmware) but he took copious notes, had me confirm them,
and told me he&amp;#8217;d bring it up to the ReadyNAS engineering team when they
meet Thursday, and will try and e-mail me back to follow up. He also
spent quite some time on the phone with me, both of us researching what
kernel the ReadyNAS 4.1.5 firmware runs (2.6.17.8, mostly vanilla Debian
as per mark) and when long &lt;span class="caps"&gt;UID&lt;/span&gt; support was available (at least 2.4).
Overall, I was very impressed that Mark knew quite a bit about Linux -
even more than your average Linux desktop user - and quite a bit about
the internals of the&amp;nbsp;ReadyNAS.&lt;/p&gt;
&lt;p&gt;Just on a hunch, after my tech support call, I used the Frontview
&amp;#8220;Config Backup&amp;#8221; tool&amp;#8217;s &amp;#8220;Users and Groups&amp;#8221; option to backup the user and
group information. Sure enough, it was just a force-download of a Zip
archive&amp;#8230; of the pertinent files. I was able to hand-hack /etc/passwd
and re-upload it, and it seemed to work&amp;nbsp;fine.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The following is &lt;strong&gt;&lt;span class="caps"&gt;NOT&lt;/span&gt;&lt;/strong&gt; endorsed by Netgear in any way, shape or form.
It&amp;#8217;s a hack that may or may not work. Do this at your own risk - I have
no idea if some future (or past) firmware change might make bad things
happen, or whether there are some features which don&amp;#8217;t jive with this.
All I&amp;#8217;ve tested is &lt;span class="caps"&gt;HTTP&lt;/span&gt; logins, the fact that the web interface shows
the &gt;2\^16 &lt;span class="caps"&gt;UID&lt;/span&gt; correctly, and&amp;nbsp;&lt;span class="caps"&gt;NFS&lt;/span&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Procedure:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create desired user in Frontview tool, leaving &lt;span class="caps"&gt;UID&lt;/span&gt; field blank. (In
    my case, the user is assigned the next sequential &lt;span class="caps"&gt;UID&lt;/span&gt;,&amp;nbsp;1002).&lt;/li&gt;
&lt;li&gt;Frontview &amp;#8220;System&amp;#8221; -&gt; &amp;#8220;Config Backup&amp;#8221;, &amp;#8220;Backup&amp;#8221; tab, select only
    &amp;#8220;Users and&amp;nbsp;Groups&amp;#8221;.&lt;/li&gt;
&lt;li&gt;Download config files and&amp;nbsp;unzip.&lt;/li&gt;
&lt;li&gt;Open etc/passwd from the config archive in a text editor, change the
    automatically assigned &lt;span class="caps"&gt;UID&lt;/span&gt; (1002) to the desired &lt;span class="caps"&gt;UID&lt;/span&gt;&amp;nbsp;(101739).&lt;/li&gt;
&lt;li&gt;Re-zip the directory tree and re-upload to&amp;nbsp;ReadyNAS.&lt;/li&gt;
&lt;li&gt;Enjoy.&lt;/li&gt;
&lt;/ol&gt;</summary><category term="debian"></category><category term="helpdesk"></category><category term="netgear"></category><category term="readynas"></category></entry><entry><title>Cisco CatOS GBIC Information</title><link href="/2009/06/cisco-catos-gbic-information/" rel="alternate"></link><updated>2009-06-20T11:35:00-04:00</updated><author><name>admin</name></author><id>tag:,2009-06-20:2009/06/cisco-catos-gbic-information/</id><summary type="html">&lt;p&gt;I have a Cisco &lt;span class="caps"&gt;WS&lt;/span&gt;-G4912 (12-port Gigabit aggregation switch) that I&amp;#8217;m
using to bring my network up to Gig-E. It&amp;#8217;s about all that I could
afford, and works fine. Most of my older servers are running &lt;span class="caps"&gt;1000BASE&lt;/span&gt;-&lt;span class="caps"&gt;SX&lt;/span&gt;
multimode fiber, but I decided to use copper GBICs for the new boxes
that have onboard Gig-E ports. Unfortunately, $100+ for Cisco GBICs was
way too much for me, so I found some third-party GBICs on Ebay from
&lt;a href="http://members.ebay.com/ws/eBayISAPI.dll?ViewUserPage&amp;amp;userid=tnetusa"&gt;TNet &lt;span class="caps"&gt;USA&lt;/span&gt;&lt;/a&gt; right in Fairfield,&amp;nbsp;&lt;span class="caps"&gt;NJ&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;I wanted to make sure the GBICs work right, so I happened to find out
about the undocumented CatOS command `show sprom [mod/port]` which
shows the serial &lt;span class="caps"&gt;PROM&lt;/span&gt;&amp;nbsp;information.&lt;/p&gt;</summary><category term="catos"></category><category term="cisco"></category><category term="gbic"></category><category term="networking"></category></entry><entry><title>HP Prolaint iLO SSH Problems</title><link href="/2009/06/hp-prolaint-ilo-ssh-problems/" rel="alternate"></link><updated>2009-06-11T23:52:00-04:00</updated><author><name>admin</name></author><id>tag:,2009-06-11:2009/06/hp-prolaint-ilo-ssh-problems/</id><summary type="html">&lt;p&gt;There&amp;#8217;s a known issue with the &lt;span class="caps"&gt;SSH&lt;/span&gt; implementation in the iLO firmware
for &lt;span class="caps"&gt;HP&lt;/span&gt; Proliant servers (specifically G2 and G3) and OpenSSH 5.1p1.
There was a &lt;a href="http://marc.info/?l=openssh-unix-dev&amp;amp;m=122095298729858&amp;amp;w=2"&gt;thread&lt;/a&gt; on the OpenSSH developers list that referenced
this problem and suggested a solution, but it doesn&amp;#8217;t seem to be a sure&amp;nbsp;fix.&lt;/p&gt;
&lt;p&gt;This problem is present on my &lt;span class="caps"&gt;DL360&lt;/span&gt; G2&amp;#8217;s which are running the 1.84
2006-05-05 version of the iLO firmware (iLO 1.84 pass9) with the P26
2004.05.01 version of the system firmware. I also see the issue on a
&lt;span class="caps"&gt;DL380G3&lt;/span&gt; running iLO 1.92 2008.04.24 and system firmware P29 2004.09.15.
The only way that I can reliably get into the iLO is by SSHing from a
box with an older version of &lt;span class="caps"&gt;SSH&lt;/span&gt;, such as&amp;nbsp;4.2p1.&lt;/p&gt;
&lt;p&gt;
Most of the things that I could find online referenced unsetting the
&lt;span class="caps"&gt;LANG&lt;/span&gt; environment variable:

wzxhzdk:0


and then SSHing with agent forwarding disabled:


wzxhzdk:1


Unfortunately this combination doesn&amp;#8217;t seem to do it for me.

I happened to stumble by [this post][] to the debian-ssh mailing list,
which suggested that shortening the new OpenSSH version string fixed the
problem.

I was able to confirm that the version string is, in fact, the sole
problem. I downloaded the source of OpenSSH 5.2p1 and, with the
following small patch to version.h, managed to get &lt;span class="caps"&gt;SSH&lt;/span&gt; working to the
iLO perfectly:&amp;nbsp;wzxhzdk:2


&lt;/p&gt;

&lt;p&gt;I patched version.h, ran `./configure`, `make`, and then copied the
compiled ssh binary to /usr/bin/ilossh, so that my original ssh binary
would be intact, and the ilossh binary would be left alone by &lt;span class="caps"&gt;RPM&lt;/span&gt;&amp;nbsp;upgrades.&lt;/p&gt;</summary><category term="ilo"></category><category term="openssh"></category><category term="proliant"></category><category term="ssh"></category></entry><entry><title>Changing the title of a Konsole window</title><link href="/2009/05/changing-the-title-of-a-konsole-window/" rel="alternate"></link><updated>2009-05-19T15:10:00-04:00</updated><author><name>admin</name></author><id>tag:,2009-05-19:2009/05/changing-the-title-of-a-konsole-window/</id><summary type="html">&lt;p&gt;For those of you who use &lt;span class="caps"&gt;KDE&lt;/span&gt; and Konsole, you can easily change the
title of the Konsole window with the&amp;nbsp;command:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;dcop $KONSOLE_DCOP_SESSION renameSession &amp;#39;NewSessionName&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;this is pretty handy if, like me, you end up having a bunch of screen
sessions running in different Konsole&amp;nbsp;windows.&lt;/p&gt;</summary><category term="kde"></category><category term="knosone"></category></entry><entry><title>How To Wipe a Bunch of Machines Quickly</title><link href="/2009/02/how-to-wipe-a-bunch-of-machines-quickly/" rel="alternate"></link><updated>2009-02-03T15:51:00-05:00</updated><author><name>admin</name></author><id>tag:,2009-02-03:2009/02/how-to-wipe-a-bunch-of-machines-quickly/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Updated 2009-03-05, see&amp;nbsp;bottom.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;At work the other week, we decommissioned 24 old desktops - Dell &lt;span class="caps"&gt;GX280&lt;/span&gt;&amp;#8217;s
that were used in the student labs as print release stations. They
didn&amp;#8217;t have anything sensitive on them, just Windows &lt;span class="caps"&gt;XP&lt;/span&gt;, but with
licensing and all we have to wipe Windows off of them before surplussing
them. Since there were 24 of them, it wasn&amp;#8217;t exactly going to be the
quickest task. Moreover, the &lt;span class="caps"&gt;GX280&lt;/span&gt;&amp;#8217;s we used don&amp;#8217;t have &lt;em&gt;any&lt;/em&gt; removable
media&amp;nbsp;drives.&lt;/p&gt;
&lt;p&gt;A few people mentioned &lt;a href="http://www.dban.org/"&gt;Darik&amp;#8217;s Boot And Nuke&lt;/a&gt; (&lt;span class="caps"&gt;DBAN&lt;/span&gt;), which is a
bootable Linux distro (&lt;span class="caps"&gt;CD&lt;/span&gt; or floppy) aimed at wiping all of the fixed
disks attached to a machine. While they do offer an &amp;#8220;Enterprise&amp;#8221; version
that supports network booting (and logging wipe verifications to a
central machine), the pricing isn&amp;#8217;t exactly favorable for a small
project (or something that just needs Windows to go away, not a
DoD-grade 7-pass overwrite with random data). Between the lack of a &lt;span class="caps"&gt;CD&lt;/span&gt;
drive and the apparent need to select wiping options at boot, this
didn&amp;#8217;t seem to be the best method for&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;Luckily, with a little googling, I came by the &lt;a href="https://fedorahosted.org/cobbler/"&gt;Cobbler&lt;/a&gt; project, a
ready-to-run install server aimed at automating network-based &lt;span class="caps"&gt;OS&lt;/span&gt;
installation. It turns out that Cobbler has a wiki article on &lt;a href="https://fedorahosted.org/cobbler/wiki/SystemRetirement"&gt;system
retirement&lt;/a&gt; that deals with using Cobbler to automate a network boot
of &lt;span class="caps"&gt;DBAN&lt;/span&gt;. Cobbler takes control of &lt;span class="caps"&gt;DHCP&lt;/span&gt; and &lt;span class="caps"&gt;TFTP&lt;/span&gt;, boots the machine(s) to
a &lt;span class="caps"&gt;PXE&lt;/span&gt; boot menu, and allows selection of one of the cobbler&amp;nbsp;&amp;#8220;profiles&amp;#8221;.&lt;/p&gt;
&lt;p&gt;The general procedure is something along these&amp;nbsp;lines:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Get the &lt;span class="caps"&gt;DBAN&lt;/span&gt; iso and grab the .ima image off of it. Loopback mount&amp;nbsp;it.&lt;/li&gt;
&lt;li&gt;Copy the &lt;code&gt;initrd&lt;/code&gt; and kernel into &lt;code&gt;/opt/cobbler/dban&lt;/code&gt; as
    &lt;code&gt;initrd.img&lt;/code&gt; and &lt;code&gt;vmlinuz&lt;/code&gt;,&amp;nbsp;respectively.&lt;/li&gt;
&lt;li&gt;Assuming you have cobblerd running (cobbler check), add a Distro for
    &lt;span class="caps"&gt;DBAN&lt;/span&gt;:
    &lt;code&gt;cobbler distro add --name=DBAN-1.0.7-i386 --kernel=/opt/cobbler/dban/vmlinuz --initrd=/opt/cobbler/dban/initrd.img --kopts="root=/dev/ram0 init=/rc nuke=dwipe floppy=0,16,cmos"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add a Profile for it:
    &lt;code&gt;cobbler profile add --name=DBAN-1.0.7-i386 --distro=DBAN-1.0.7-i386&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cobbler sync&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Assuming all went well, when we &lt;span class="caps"&gt;PXE&lt;/span&gt; boot a machine on the same &lt;span class="caps"&gt;LAN&lt;/span&gt; as
the Cobbler system, we&amp;#8217;ll get &lt;span class="caps"&gt;DHCP&lt;/span&gt; and a &lt;span class="caps"&gt;PXE&lt;/span&gt; boot menu which will list
&lt;code&gt;DBAN-1.0.7.i386&lt;/code&gt; as one of the options. On some of the &lt;span class="caps"&gt;GX280&lt;/span&gt;&amp;#8217;s that I
did, I had to go into the &lt;span class="caps"&gt;BIOS&lt;/span&gt; and enable &lt;span class="caps"&gt;PXE&lt;/span&gt; boot (or select &lt;span class="caps"&gt;PXE&lt;/span&gt; from
the &lt;span class="caps"&gt;BIOS&lt;/span&gt; boot menu). Now, when &lt;span class="caps"&gt;DBAN&lt;/span&gt; boots, we&amp;#8217;ll get the standard dmesg
output and then a selection screen allowing us to pick a wipe type (I
used the single pass all zeros for just getting rid of the old &lt;span class="caps"&gt;OS&lt;/span&gt;) and
select which disks to wipe. If you use the default wipe, just press
&amp;#8220;space&amp;#8221; to select all disks and then &amp;#8220;F10&amp;#8221; to begin the&amp;nbsp;wipe.&lt;/p&gt;
&lt;p&gt;This process allowed me to wipe 7 machines at once (8 port &lt;span class="caps"&gt;KVM&lt;/span&gt;, 1 port
for the server). With a better &lt;span class="caps"&gt;KVM&lt;/span&gt; or (even better yet) a totally
automatic system as described below, it would essentially be limited to
whatever the server and network hardware will&amp;nbsp;handle.&lt;/p&gt;
&lt;p&gt;To add a little more automation, we can run
&lt;code&gt;cobbler system add --name=default --profile=DBAN-1.0.7-i386&lt;/code&gt; which adds
a default profile to Cobbler, saying that any machines with MACs not
specifically assigned to a profile should boot the &lt;span class="caps"&gt;DBAN&lt;/span&gt; profile, and
bypassing the &lt;span class="caps"&gt;PXE&lt;/span&gt; boot&amp;nbsp;menu.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;WARNING&lt;/span&gt;:&lt;/strong&gt; what follows will setup Cobbler and &lt;span class="caps"&gt;DBAN&lt;/span&gt; to automatically
wipe all &lt;span class="caps"&gt;PXE&lt;/span&gt;-booting devices without &lt;span class="caps"&gt;ANY&lt;/span&gt; human intervention. Use at your
own risk and, for God&amp;#8217;s sake, don&amp;#8217;t plug your server into a production
network (I recommend this only in a lab environment with a dedicated
switch, all machines in one physical area, and no possibility of getting
on the same &amp;#8216;net as production&amp;nbsp;machines).&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s theoretically possible to totally automate this setup. According to
the &lt;span class="caps"&gt;DBAN&lt;/span&gt; docs, it will also accept kernel options (kopts) that effect
how dnuke works - specifically, &lt;code&gt;--autonuke&lt;/code&gt; to tell it to wipe without
human intervention and a method option such as &lt;code&gt;--method=zero&lt;/code&gt; to select
the wipe method. This means that if we &lt;span class="caps"&gt;PXE&lt;/span&gt; boot with kernel options set
to &lt;code&gt;nuke="dwipe --autonuke --method=zero"&lt;/code&gt; we should go straight to the
dwipe utility (the heart of &lt;span class="caps"&gt;DBAN&lt;/span&gt;) and automatically wipe all disks by
writing zeros once - without operator intervention. Unfortunately,
there&amp;#8217;s a &lt;a href="https://fedorahosted.org/cobbler/ticket/148"&gt;bug&lt;/a&gt; in the current (1.4.0) Cobbler which prevents
quote-encapsulated strings in kopts, meaning that we can&amp;#8217;t set one
kernel option to a string with whitespace as needed here. If this bug is
fixed, it should allow this process to work without any operator
intervention, assuming the clients will &lt;span class="caps"&gt;PXE&lt;/span&gt;&amp;nbsp;boot.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Updated 2009-03-05&lt;/strong&gt; I haven&amp;#8217;t tested it yet, but apparently the
Cobbler bug preventing complex kernel options has &lt;a href="https://fedorahosted.org/pipermail/cobbler/2009-February/002874.html"&gt;been fixed&lt;/a&gt;. The
fix should be included in the 1.4.3 release and is currently in the
development&amp;nbsp;tree.&lt;/p&gt;</summary><category term="automation"></category><category term="cobbler"></category><category term="dban"></category><category term="pxe"></category><category term="retirement"></category><category term="security"></category><category term="wiping"></category></entry><entry><title>LIRC and Hauppauge PVR-150 on OpenSuSE 11.0</title><link href="/2008/09/lirc-and-hauppauge-pvr-150-on-opensuse-110/" rel="alternate"></link><updated>2008-09-01T10:37:00-04:00</updated><author><name>admin</name></author><id>tag:,2008-09-01:2008/09/lirc-and-hauppauge-pvr-150-on-opensuse-110/</id><summary type="html">&lt;p&gt;Well, despite what&amp;#8217;s been said elsewhere, it &lt;em&gt;&lt;span class="caps"&gt;IS&lt;/span&gt;&lt;/em&gt; possible! It&amp;#8217;s a bit
error-ridden at first, but here is the procedure that I used to compile
and install the &lt;span class="caps"&gt;PVR&lt;/span&gt;-150 patched &lt;span class="caps"&gt;LIRC&lt;/span&gt;&amp;nbsp;0.8.3-&lt;span class="caps"&gt;CVS&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;First, Download the tarball mentioned in the &lt;a href="http://www.blushingpenguin.com/mark/blog/?p=24"&gt;Version 3 blog post&lt;/a&gt; at
&lt;a href="http://www.blushingpenguin.com/mark/blog/"&gt;Marks Braindump&lt;/a&gt;. You can pretty much follow his instructions on the
installation in the blog post, with some changes that are specific to
getting it to compile on OpenSuSE&amp;nbsp;11.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;First, remove all traces of the OpenSuSE &lt;span class="caps"&gt;LIRC&lt;/span&gt; from you system.
    Uninstall the &lt;span class="caps"&gt;RPMS&lt;/span&gt; and everything else that goes with them. Then
    unload all of the kernel modules, especially lirc_i2c (if you have
    it&amp;nbsp;loaded).&lt;/li&gt;
&lt;li&gt;In your kernel source directory, run
    &lt;code&gt;make oldconfig &amp;amp;&amp;amp; make prepare.&lt;/code&gt;
    &lt;p&gt;&lt;/li&gt;
&lt;li&gt;In your kernel source directory, run &lt;code&gt;make prepare scripts&lt;/code&gt; which,
    among other things, compiles the required &lt;code&gt;genksyms&lt;/code&gt; scurript.&lt;/li&gt;
&lt;li&gt;I was getting a compile error like &amp;#8220;&lt;span class="caps"&gt;WARNING&lt;/span&gt;: Symbol version dump
    /usr/src/`uname -r`/Module.symvers is missing&amp;#8221;. Find out which
    kernel you&amp;#8217;re running (&lt;code&gt;uname -r&lt;/code&gt;). In yout kernel source directory,
    copy your Module.symvers file from /usr/src/linux-obj. I was running
    i386 architecture with the &amp;#8220;default&amp;#8221; kernel, so mine was located at
    &lt;code&gt;/usr/src/linux-obj/i386/debug/Module.symvers&lt;/code&gt;. Copy that into
    &lt;code&gt;/usr/src/linux&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;In the lirc (patched) directory, run &lt;code&gt;setup.sh&lt;/code&gt; as instructed. &lt;span class="caps"&gt;DO&lt;/span&gt;
    &lt;span class="caps"&gt;NOT&lt;/span&gt; tell it to run configure - just save settings and&amp;nbsp;exit.&lt;/li&gt;
&lt;li&gt;Edit the generated &lt;code&gt;configure.sh&lt;/code&gt; file, adding a
    &lt;code&gt;--with-kerneldir=/usr/src/KERNELDIR&lt;/code&gt;, replacing &lt;span class="caps"&gt;KERNELDIR&lt;/span&gt; with the
    actual path to your kernel soruce (i.e. /usr/src/`uname&amp;nbsp;-r`).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make&lt;/code&gt;. If no errors, &lt;code&gt;make install&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;I decided to reboot at this point, and when I did, everything worked&amp;nbsp;perfectly.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Also, I found that I needed to explicitly specify &lt;code&gt;--device=/dev/lirc0&lt;/code&gt;
when starting &lt;span class="caps"&gt;LIRC&lt;/span&gt;, as well as not specifying a driver. I just took the
&lt;code&gt;/etc/init.d/lirc&lt;/code&gt; from the official OpenSuSE 11.0 package, commented
out line 108 in &lt;code&gt;makeargs()&lt;/code&gt; that adds the &lt;code&gt;-H $LIRC_DRIVER&lt;/code&gt; to the
args, and added &lt;code&gt;LIRC_DEVICE="/dev/lirc0"&lt;/code&gt; to the top after the &lt;span class="caps"&gt;INIT&lt;/span&gt;&amp;nbsp;info.&lt;/p&gt;
&lt;p&gt;Unfortunately, figuring out this process took me a long time. I&amp;#8217;ve
reconstructed these instructions from various post-it notes, the
whiteboard next to my desk, and some bash history files and terminal
dumps. If this doesn&amp;#8217;t seem to work for you, please drop an email to
jason &lt;span class="caps"&gt;AT&lt;/span&gt; jason antman &lt;span class="caps"&gt;DOT&lt;/span&gt; com, with as much information as you have, and
I&amp;#8217;ll figure it out and update the&amp;nbsp;instructions.&lt;/p&gt;
&lt;p&gt;Now, finally, an up-to-date system &lt;span class="caps"&gt;AND&lt;/span&gt; &lt;a href="http://www.mythtv.org"&gt;MythTV&lt;/a&gt;.&lt;/p&gt;</summary><category term="hauppauge"></category><category term="linux"></category><category term="lirc"></category><category term="mythtv"></category><category term="opensuse"></category><category term="pvr-150"></category><category term="suse"></category></entry><entry><title>SunFire Information</title><link href="/2008/08/sunfire-information/" rel="alternate"></link><updated>2008-08-08T14:45:00-04:00</updated><author><name>admin</name></author><id>tag:,2008-08-08:2008/08/sunfire-information/</id><summary type="html">&lt;p&gt;Ok, an update is a long time coming, and I&amp;#8217;ll post one this weekend with
status of a lot of my projects, as well as some new&amp;nbsp;information.&lt;/p&gt;
&lt;p&gt;For now, I&amp;#8217;m installing two beautiful SunFire x4150&amp;#8217;s at work, and
here&amp;#8217;s a little bit of information on how to use these great&amp;nbsp;boxes:&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: bold;"&gt;&lt;span class="caps"&gt;RAID&lt;/span&gt; Configuration&lt;/span&gt; is
accomplished by a normal startup prompt Ctrl+ (C? I don&amp;#8217;t remember) key
sequence, as they&amp;#8217;re x64 machines and it&amp;#8217;s a standard &lt;span class="caps"&gt;RAID&lt;/span&gt;&amp;nbsp;controller.&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: bold;"&gt;Serial Management&lt;/span&gt; is great -
just connect (in &lt;a href="http://www.columbia.edu/kermit/ck80.html"&gt;Kermit&lt;/a&gt; I just had to set speed to 9600 and
carrier-watch off) and you get a prompt that looks like
&lt;code&gt;SUNSP001E682F6311 login:&lt;/code&gt;. The numbers are the &lt;span class="caps"&gt;MAC&lt;/span&gt; address of the
management interface (&lt;span class="caps"&gt;SP&lt;/span&gt;). The default login is root:changeme, as per
Sun doc 819-1155-16. When you login, you&amp;#8217;ll see the current firmware
version (4.0.06 as my box&amp;nbsp;shipped).&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: bold;"&gt;Getting a System Console&lt;/span&gt; - on
the x4100, at the iLOM prompt, &lt;code&gt;cd /SP/console&lt;/code&gt;, &lt;code&gt;start /SYS&lt;/code&gt; to boot
the system, and then &lt;code&gt;start&lt;/code&gt; to get the console. On the x4150, we must
start &lt;code&gt;/SP/AgentInfo/Console&lt;/code&gt;, and use &lt;code&gt;Esc+Shift+9&lt;/code&gt; to get away from
the&amp;nbsp;console.&lt;/p&gt;</summary><category term="sun"></category><category term="sunfire"></category></entry><entry><title>OpenOffice Calc formula for IP addresses</title><link href="/2008/05/openoffice-calc-formula-for-ip-addresses/" rel="alternate"></link><updated>2008-05-30T10:56:00-04:00</updated><author><name>admin</name></author><id>tag:,2008-05-30:2008/05/openoffice-calc-formula-for-ip-addresses/</id><summary type="html">&lt;p&gt;It&amp;#8217;s been a while since I&amp;#8217;ve posted. Things are quite busy, with work 4
days a week (9-5) and classes 6-9:30 at night 4 days a week (though
classes are Mon-Thurs and work is&amp;nbsp;Tues-Fri).&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m plodding along on with &lt;a href="http://www.tuxtruck.org/"&gt;TuxTruc&lt;/a&gt;k - we now have a domain name
(&lt;a href="http://www.tuxtruck.org/"&gt;http://www.tuxtruck.org/&lt;/a&gt;) and playlist generation is
finished. This weekend should yield playlist parsing. Once &lt;span class="caps"&gt;MP3&lt;/span&gt; playing
is working, I&amp;#8217;ll begin the hardcore development - &lt;span class="caps"&gt;GPS&lt;/span&gt;, &lt;span class="caps"&gt;OBD&lt;/span&gt;, and
Bluetooth. Also, I&amp;#8217;m working on a hardware budget for the prototype, but
it&amp;#8217;s ending up much higher than originally imagined. If I end up going
with the &lt;a href="http://www.xenarc.com/product/MDT-X7000.html"&gt;Xenarc &lt;span class="caps"&gt;MDT&lt;/span&gt;-X7000&lt;/a&gt; display (which includes a head unit with
&lt;span class="caps"&gt;DVD&lt;/span&gt; playing, amplifier, &lt;span class="caps"&gt;CD&lt;/span&gt; playing, and radio - though those are
features I&amp;#8217;d rather to in software on the &lt;span class="caps"&gt;PC&lt;/span&gt;, and just use the
amplifier) which runs $800 &lt;span class="caps"&gt;USD&lt;/span&gt;, the total is looking more like $2000
than the $1000 I had planned. More to the point, the X7000 currently has
poor reviews, and is backordered everywhere pending a firmware revision.
I may end up going the route of a separate head unit, or a dedicated
amplifier (though volume control is still an issue) and getting a better
daylight-readable touchscreen (though I still have a strong preference
for a motorized in-dash type, given the theft rate around&amp;nbsp;school).&lt;/p&gt;
&lt;p&gt;Another item of news - my mother is considering moving from Verizon FiOS
to the Cablevision/Optimum Triple Play - iO digital &lt;span class="caps"&gt;TV&lt;/span&gt;, cable, and
voice. Given that jasonantman.com - and all of my other machines - live
on shelves in her basement, this will have quite an impact on me. And a
good one! Optimum offers Business-grade service at 30 Mbps down/5 Mbps
up &lt;span style="font-weight: bold;"&gt;with 5 static IPs&lt;/span&gt; at a rate
that I can afford. So, there may be an end to DynDNS, and my sites might
finally live on port 80, like they should! On the down side, this would
mean (for digital &lt;span class="caps"&gt;TV&lt;/span&gt;) a major coax rewiring of mom&amp;#8217;s house - and &lt;span class="caps"&gt;RG&lt;/span&gt;-6/&lt;span class="caps"&gt;UQ&lt;/span&gt;
isn&amp;#8217;t&amp;nbsp;cheap.&lt;/p&gt;
&lt;p&gt;Anyway, the tip of the day - OpenOffice Calc formula to increase the
last quad of an &lt;span class="caps"&gt;IP&lt;/span&gt; address by&amp;nbsp;one:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;=CONCATENATE(LEFT(A1;SEARCH(".[0-9]+$";A1));VALUE(RIGHT(A1;LEN(A1)-SEARCH(".[0-9]+$";A1)))+1)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I was doing up a little spreadsheet of IPs in the office, and like a
good &lt;span class="caps"&gt;SA&lt;/span&gt; (with nothing else to do), came up with a formula to increase
the last octet by one. Just enter a dotted-quad &lt;span class="caps"&gt;IP&lt;/span&gt; in A1 (or whatever
other cell, correcting the formula), paste this below it, and copy down
the page to your heart&amp;#8217;s content. (Granted, it only changes the last
octet, and expects a properly formatted&amp;nbsp;&lt;span class="caps"&gt;IP&lt;/span&gt;).&lt;/p&gt;</summary><category term="ip address"></category><category term="openoffice"></category><category term="spreadsheet"></category><category term="tuxtruck"></category></entry><entry><title>Getting SunSPOTs working under OpenSuSE 10.1</title><link href="/2008/05/getting-sunspots-working-under-opensuse-101/" rel="alternate"></link><updated>2008-05-13T13:09:00-04:00</updated><author><name>admin</name></author><id>tag:,2008-05-13:2008/05/getting-sunspots-working-under-opensuse-101/</id><summary type="html">&lt;p&gt;So I&amp;#8217;ve been playing around with&lt;a href="http://www.sunspotworld.com"&gt;SunSPOT&lt;/a&gt;s lately. Or trying to. My
only x86 (32-bit) machines are an old desktop running OpenSuSE 10.1 and
my eeePC. It looks like I just killed my new install on the &lt;span class="caps"&gt;8GB&lt;/span&gt; &lt;span class="caps"&gt;SDHC&lt;/span&gt;
card, so I gave the desktop a try. I&amp;#8217;d already tried once with the
install of Orange from the &lt;span class="caps"&gt;CD&lt;/span&gt; that came with them, and had NetBeans 6
installed, so I had to do some recovery. The procedure was as&amp;nbsp;follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install all of the Java6 java-sun packages (specifically the base as&amp;nbsp;devel).&lt;/li&gt;
&lt;li&gt;Download the Java 6 &lt;span class="caps"&gt;JDK&lt;/span&gt; from Sun, and install all of the&amp;nbsp;RPMs.&lt;/li&gt;
&lt;li&gt;Screw with /usr/lib/jvm and get it sane - specifically, replace all
    of the symlinks that point to /etc/alternatives with new ones
    pointing to the Java6 install in&amp;nbsp;/usr/lib/jvm/java-1.6.0-sun-1.6.0&lt;/li&gt;
&lt;li&gt;Delete your entire .netbeans directory (I was having serious issues
    with&amp;nbsp;NetBeans).&lt;/li&gt;
&lt;li&gt;Start NetBeans from the command line with an explicitly set jdkhome:
    &amp;#8220;netbeans &amp;#8212;jdkhome&amp;nbsp;/usr/lib/jvm/java-1.6.0-sun-1.6.0&lt;/li&gt;
&lt;li&gt;Download the &lt;span class="caps"&gt;SPOT&lt;/span&gt; plugin for NetBeans, following the instructions on
    &lt;a href="http://weblogs.java.net/blog/brunogh/archive/2008/04/starting_with_s.html"&gt;Bruno Ghisi&amp;#8217;s blog&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Once installed, you should have a little &lt;span class="caps"&gt;SPOT&lt;/span&gt;-looking icon on the
    toolbar below &amp;#8220;Navigate&amp;#8221;. Click on it, and launch SPOTManager from
    the link in the right panel (&amp;#8220;Sun SPOTs Info&amp;#8221;, the link is an icon
    not text). Go through whatever configuration is&amp;nbsp;needed.&lt;/li&gt;
&lt;li&gt;Upgrade local &lt;span class="caps"&gt;SDK&lt;/span&gt; to Purple (Click the &lt;span class="caps"&gt;SDK&lt;/span&gt; tab, select &amp;#8220;v3.0 Purple&amp;#8221;
    from the right panel, click the Upgrade button near the&amp;nbsp;bottom).&lt;/li&gt;
&lt;li&gt;Upgrade your demos following davidgs&amp;#8217;s &lt;a href="http://blogs.sun.com/davidgs/entry/beta_follow_up"&gt;blog posting&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Upgrade all of the SPOTs to Purple (plug them in one at a time, on
    the SPOTManager SunSPOTs tab, click&amp;nbsp;&amp;#8220;Upgrade&amp;#8221;).&lt;/li&gt;
&lt;li&gt;I&amp;#8217;m still having some minor issues here. I&amp;#8217;ll update when I have
    everything figured&amp;nbsp;out&amp;#8230;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="java"></category><category term="linux"></category><category term="netbeans"></category><category term="sun"></category><category term="sunspot"></category></entry><entry><title>Madwifi on the eeePC</title><link href="/2008/05/madwifi-on-the-eeepc/" rel="alternate"></link><updated>2008-05-04T22:32:00-04:00</updated><author><name>admin</name></author><id>tag:,2008-05-04:2008/05/madwifi-on-the-eeepc/</id><summary type="html">&lt;p&gt;So, I&amp;#8217;ve started a new &lt;a href="http://www.opensuse.org"&gt;OpenSuSE&lt;/a&gt; install on my eeePC. The &lt;span class="caps"&gt;4GB&lt;/span&gt; &lt;span class="caps"&gt;SDHC&lt;/span&gt;
card that I originally used was getting a bit cramped - I couldn&amp;#8217;t even
fit the kernel source! So, I bought a new &lt;span class="caps"&gt;8GB&lt;/span&gt; &lt;span class="caps"&gt;SDHC&lt;/span&gt; card and started from
scratch. I know that OpenSuSE 11 is coming up soon, but I just couldn&amp;#8217;t
wait, so I just used OpenSuSE 10.3&amp;nbsp;again.&lt;/p&gt;
&lt;p&gt;I followed my &lt;a href="http://www.jasonantman.com/wiki/index.php/OpenSuSE_10.3_on_eeePC_External_SDHC"&gt;previous how-to&lt;/a&gt;, and also am updating it with some new
information - such as my xorg.conf. Most interestingly, though, I
actually got MadWiFi to work with the &lt;a href="http://madwifi.org/wiki/Compatibility/Atheros#AtherosAR5BXB63"&gt;Atheros &lt;span class="caps"&gt;AR5BXB63&lt;/span&gt;&lt;/a&gt; on the eeePC!
I haven&amp;#8217;t tested everything yet (specifically &lt;span class="caps"&gt;WPA&lt;/span&gt;/&lt;span class="caps"&gt;WPA2&lt;/span&gt;) but it seems to
work fine. I&amp;#8217;ve updated &lt;a href="http://www.jasonantman.com/wiki/index.php/OpenSuSE_10.3_on_eeePC_External_SDHC#Update_2008-05-02"&gt;my HowTo&lt;/a&gt; with the instructions, but mainly
it hinges on using madwifi-ng-r2756+ar5007 (&lt;a href="http://snapshots.madwifi.org/special/madwifi-ng-r2756+ar5007.tar.gz"&gt;gzipped tarball&lt;/a&gt;) and
compiling from&amp;nbsp;source.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This HowTo is based on the original eeePC 701 4G and OpenSuSE
10.3. It may not be needed for newer versions of OpenSuSE or newer
versions of the&amp;nbsp;eeePC.&lt;/p&gt;</summary><category term="atheros"></category><category term="eeepc"></category><category term="madwifi"></category><category term="wifi"></category><category term="wireless"></category></entry><entry><title>Centralized Storage via SFTP</title><link href="/2008/04/centralized-storage-via-sftp/" rel="alternate"></link><updated>2008-04-21T17:28:00-04:00</updated><author><name>admin</name></author><id>tag:,2008-04-21:2008/04/centralized-storage-via-sftp/</id><summary type="html">&lt;p&gt;For quite a while, I&amp;#8217;ve been planning on centralizing a lot of my
personal storage (documents, miscellaneous stuff) on one machine at
home. The biggest problem that I have is that, while a &lt;span class="caps"&gt;VPN&lt;/span&gt; would be a
good solution for my apartment (if I could get &lt;a href="http://www.ipcop.org/"&gt;IPcop&lt;/a&gt;to do &lt;span class="caps"&gt;VPN&lt;/span&gt;
between two dynamic IPs), it doesn&amp;#8217;t really work for my mobile life. My
laptop is often connected to untrusted wireless, and unknown firewall
configurations, so &lt;span class="caps"&gt;VPN&lt;/span&gt; isn&amp;#8217;t always the best (and definitely not the
easiest) option. Given road warrior use, &lt;span class="caps"&gt;NFS&lt;/span&gt; is obviously out of the&amp;nbsp;question.&lt;/p&gt;
&lt;p&gt;After a little searching, I found the &lt;a href="http://fuse.sourceforge.net/sshfs.html"&gt;&lt;span class="caps"&gt;SSHFS&lt;/span&gt;&lt;/a&gt; module for &lt;a href="http://fuse.sourceforge.net/"&gt;&lt;span class="caps"&gt;FUSE&lt;/span&gt;&lt;/a&gt;,
which allows userspace mounting of a &lt;span class="caps"&gt;SFTP&lt;/span&gt; filesystem. Despite some
initial hiccups, I managed to get it setup on two machines - my laptop
and a desktop in the apartment. This week I&amp;#8217;ll finish working on the
rest of the machines - and eventually replace my aging &lt;a href="http://www.jasonantman.com/wiki/index.php/SSH_Gateway_Box"&gt;&lt;span class="caps"&gt;SSH&lt;/span&gt; gateway&lt;/a&gt;
machine (currently a 10-year-old Gateway mini tower) with a &lt;a href="http://www.soekris.com/"&gt;Soekris&lt;/a&gt;&amp;nbsp;box.&lt;/p&gt;
&lt;p&gt;The setup was pretty&amp;nbsp;easy:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make sure you have public key authentication setup for ssh between
    the machines, using &lt;span class="caps"&gt;RSA&lt;/span&gt;&amp;nbsp;keys.&lt;/li&gt;
&lt;li&gt;Make sure fuse, libfuse, and the related packages are&amp;nbsp;installed.&lt;/li&gt;
&lt;li&gt;Install the sshfs&amp;nbsp;package.&lt;/li&gt;
&lt;li&gt;Make sure your user is added to the &amp;#8220;trusted&amp;#8221; group (for&amp;nbsp;OpenSuSE).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After that, just give it a spin, as the user that you want to mount the
filesystem&amp;nbsp;as:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sshfs hostname:/path/to/mount /path/to/local/mountpoint&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Once that worked pefectly, I added the following to my&amp;nbsp;.bash_profile:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# this handles SSHFS mount of the central-home dirif [ -a /path/to/local/mountpoint ]; then  echo "HOSTNAME home is mounted at /path/to/local/mountpoint"else  echo "Mounting HOSTNAME home at /path/to/local/mountpoint..."hostname:/path/to/mount /path/to/local/mountpoint&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;fi&lt;/code&gt;&lt;/p&gt;</summary><category term="fuse"></category><category term="sftp"></category><category term="ssh"></category><category term="sshfs"></category><category term="storage"></category></entry><entry><title>Mac to TTF font conversion</title><link href="/2008/04/mac-to-ttf-font-conversion/" rel="alternate"></link><updated>2008-04-16T23:03:00-04:00</updated><author><name>admin</name></author><id>tag:,2008-04-16:2008/04/mac-to-ttf-font-conversion/</id><summary type="html">&lt;p&gt;I know i haven&amp;#8217;t posted in a&amp;nbsp;while.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m working on a friend&amp;#8217;s web site, and needed a specific font for the
title graphic. I couldn&amp;#8217;t find it *anywhere* as a free &lt;span class="caps"&gt;TTF&lt;/span&gt; download
for my Linux machine. However, after asking a friend who&amp;#8217;s a Mac user, I
got a .dfont file as an email&amp;nbsp;attachment.&lt;/p&gt;
&lt;p&gt;After some quick Googling, I came by the &lt;a href="http://sourceforge.net/projects/fondu/"&gt;fondu&lt;/a&gt; project on
SourceForge. I didn&amp;#8217;t look into it in depth, but I just grabbed the i386
&lt;span class="caps"&gt;RPM&lt;/span&gt;, installed it, and - magic! The in the directory with my .dfont I
now also had .ttf fonts for all of the&amp;nbsp;variants!&lt;/p&gt;</summary><category term="font"></category><category term="mac"></category></entry><entry><title>IEI HubMax Access Control and Linux</title><link href="/2008/03/iei-access-control-and-linux/" rel="alternate"></link><updated>2008-03-31T12:43:00-04:00</updated><author><name>admin</name></author><id>tag:,2008-03-31:2008/03/iei-access-control-and-linux/</id><summary type="html">&lt;p&gt;At the &lt;a href="http://www.midlandparkambulance.com/"&gt;Midland Park Ambulance Corps&lt;/a&gt;, where I&amp;#8217;ve been volunteering my
time as an &lt;span class="caps"&gt;EMT&lt;/span&gt; and all-around tech guru for three years, we have an &lt;a href="http://www.ieib.com/product-details.html?id=49"&gt;&lt;span class="caps"&gt;IEI&lt;/span&gt;
HubMax2 access control system&lt;/a&gt;. Maybe overkill for us (only 78 users
in it, including old codes), it&amp;#8217;s pretty simple - a box with some
microcontrollers sits in a wiring closet, and is hooked up to keypads at
each door, and relays to electromechanical strikes. Type in the right
code, and the door opens. Obviously, it also logs all entries as well as
unknown codes (but doesn&amp;#8217;t log the actual code if unknown, so instead of
removing old users, I set their codes to an invalid timezone so the
doors don&amp;#8217;t open, but accountability is still intact). Well, the old box
died - fried by a surge from a blown computer that was hooked up to its&amp;#8217;
serial port. New one was installed this weekend - an 8 hour&amp;nbsp;ordeal.&lt;/p&gt;
&lt;p&gt;The problem with the system is that to program it, I have to grab the
laptop out of one of the ambulances, have &lt;span class="caps"&gt;IEI&lt;/span&gt;&amp;#8217;s proprietary
Windows-based programming software (which programs it via sending and
receiving full binary memory maps of the controllers over 1200 baud
serial), and spend half an hour in the utility closet (next to the
furnace) where the box is waiting for memory maps to transfer over the
slow direct connection. Well, there&amp;#8217;s a proliant server running
&lt;a href="http://www.opensuse.org/"&gt;OpenSuSE&lt;/a&gt; seven feet away&amp;#8230; why not use&amp;nbsp;that?&lt;/p&gt;
&lt;p&gt;While &lt;span class="caps"&gt;IEI&lt;/span&gt; offers their &lt;a href="http://www.ieib.com/products-browser-managed.html"&gt;eMerge&lt;/a&gt; systems - appliance servers that
manage their access control units via a web interface - for $6000, which
run RedHat, they won&amp;#8217;t even respond to my emails inquiring whether they
have Linux-based programming software for their HubMax line. We don&amp;#8217;t
get that many new members per year, so I figured just programming in a
few spare codes will handle it. Removing people can wait, as people
usually leave on good terms. However, every once in a while something&amp;#8217;s
amiss at the building (usually a door left ajar, or food left out), and
I&amp;#8217;m called upon to pull the logs. It&amp;#8217;s a pain in the @$$. I have to
hunker down in that utility closet with a laptop, waiting for the whole
memory map to download over 1200 baud just to see who came and went.
Porting the software to Linux wouldn&amp;#8217;t be a quick project. This is even
worse during the school year when I&amp;#8217;m living in my apartment an hour
away, taking classes full time, and still working 25 hours a&amp;nbsp;week.&lt;/p&gt;
&lt;p&gt;&lt;span style="font-style: italic;"&gt;The Solution&lt;/span&gt;: At the end of my
eight-hour install, everything was programmed and setup, but the logs
were still bothering me. Then I hit on an idea. Remembering how archaic
the real-world interfacing of these things seemed to me (how can you use
binary memory maps? What about a serial terminal with an &lt;span class="caps"&gt;ASCII&lt;/span&gt; command
set, or even Ethernet and &lt;span class="caps"&gt;SNMP&lt;/span&gt; or Telnet? I really want to build one of
these things running real-time Linux&amp;#8230;), I started to flip through the
manual and, sure enough, found a command (entered on a 12-key keypad on
the main board) to dump logs in realtime to a serial line&amp;nbsp;printer.&lt;/p&gt;
&lt;p&gt;I ran a cable to the Linux-based server not 10 feet away, fired up
Kermit, issued the Enable Log Print code, and tried a code entry on the
keypad by the front door.&amp;nbsp;Bingo!&lt;/p&gt;
&lt;p&gt;In the two days since, I have a little daemon coded in &lt;span class="caps"&gt;PHP&lt;/span&gt; (yes, &lt;span class="caps"&gt;PHP&lt;/span&gt;)
that reads the serial line and dumps all log data (entries, exits, door
ajar, unknown code, access denied) to both a text file (for debugging
and redundancy) and into a MySQL database. Another hour of coding and I
have a simple web &lt;span class="caps"&gt;GUI&lt;/span&gt;, available on any of the computers on the &lt;span class="caps"&gt;LAN&lt;/span&gt;, for
officers to check who&amp;#8217;s come, and who tried to get in but&amp;nbsp;couldn&amp;#8217;t.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve never written a daemon before, so I still have a bit more research
to do - mainly in terms of error handling and how to keep it constantly
running. However, I have a first version&amp;nbsp;working.&lt;/p&gt;
&lt;p&gt;In the next few days I&amp;#8217;ll start posting better code for ieilogd. I have
&lt;a href="http://cvs.jasonantman.com/cvs/ieilogd/"&gt;some in &lt;span class="caps"&gt;CVS&lt;/span&gt; now&lt;/a&gt;, but it&amp;#8217;s kludgey (well, it was written through
&lt;a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html"&gt;PuTTY&lt;/a&gt; on a Windows laptop in a utility closet at 3 &lt;span class="caps"&gt;AM&lt;/span&gt;). It also has
quite a bit of user-handling code that&amp;#8217;s specific to the roster format
of my package &lt;a href="http://www.php-ems-tools.com"&gt;&lt;span class="caps"&gt;PHP&lt;/span&gt; &lt;span class="caps"&gt;EMS&lt;/span&gt; Tools&lt;/a&gt;.&lt;/p&gt;</summary><category term="access control"></category><category term="door lock"></category><category term="hubmax"></category><category term="iei"></category><category term="ieib"></category></entry><entry><title>Backups of data in the ether</title><link href="/2008/03/backups-of-data-in-the-ether/" rel="alternate"></link><updated>2008-03-06T12:11:00-05:00</updated><author><name>admin</name></author><id>tag:,2008-03-06:2008/03/backups-of-data-in-the-ether/</id><summary type="html">&lt;p&gt;While I&amp;#8217;ve often told mystified people that hosted services - the free
ones - aren&amp;#8217;t required to backup your data, and you should probably do
it yourself, I usually didn&amp;#8217;t worry about this very much - all of my web
apps are on my own boxes, as well as my email. However, out of
curiosity, I spent about 15 minutes the other day coding up a little
hack of a &lt;span class="caps"&gt;PHP&lt;/span&gt; script to keep track of what applications I use a lot
(specifically web-based ones that I can&amp;#8217;t easily have my &lt;span class="caps"&gt;OS&lt;/span&gt; keep track
of). After a day of trying to click the little &amp;#8220;update&amp;#8221; boxes on a
simple page when I used something, I realized how much of my data is
actually out of my own control. Maybe not anything critical, but
convenience stuff like [Google Reader][], [del.icio.us][] for *all* of
my bookmarks, and occasionally [Google Docs][] when I&amp;#8217;m going to be
hopping from place to place, or may be using a machine that I don&amp;#8217;t
trust to &lt;span class="caps"&gt;SFTP&lt;/span&gt; something back&amp;nbsp;home.&lt;/p&gt;
&lt;p&gt;So, I decided to go about backing up some of this. The solution I aimed
for was simple - a &lt;span class="caps"&gt;BASH&lt;/span&gt; script that runs nightly via cron, and dumps the
data into my home directory on my main storage/backup&amp;nbsp;server.&lt;/p&gt;
&lt;p&gt;Google Reader seemed to be one of the most difficult - no easy &lt;span class="caps"&gt;URL&lt;/span&gt;
scheme, but I found a [simple script][] that makes use of Perl &lt;span class="caps"&gt;CPAN&lt;/span&gt;&amp;#8217;s
[WebService::Google::Reader][]module to grab a complete feed list. After
seemingly an hour of &lt;span class="caps"&gt;CPAN&lt;/span&gt; updates and dependencies scrolling down my&amp;nbsp;screen,&lt;/p&gt;
&lt;p&gt;Google Calendar Backup:&lt;br /&gt;
Wonderfully simple. Go into Settings, copy the URLs to the private
calendar links (I used iCal format), and wget&amp;nbsp;them.&lt;/p&gt;
&lt;p&gt;
del.icio.us backup:

    curl &amp;#8212;user usernam:pass -o myDelicious.xml -O &amp;#8216;https://api.del.icio.us/v1/posts/all&amp;#8217;

Google Reader Backup:  
Still in the works - Perl problems on my backup machine.

Google Docs Backup:  
Hopefully soon, though nothing important lives there.

  [Google Reader]: http://reader.google.com/
  [del.icio.us]: http://del.icio.us/
  [Google Docs]: http://docs.google.com/
  [simple script]: http://blog.tobez.org/?p=49
  [WebService::Google::Reader]:&amp;nbsp;http://search.cpan.org/~gray/WebService-Google-Reader-0.07/</summary><category term="backups"></category><category term="del.icio.us"></category><category term="docs"></category><category term="google"></category><category term="reader"></category></entry><entry><title>Update, Eventum/MySQLTicketing Integration</title><link href="/2008/02/update-eventummysqlticketing-integration/" rel="alternate"></link><updated>2008-02-21T14:53:00-05:00</updated><author><name>admin</name></author><id>tag:,2008-02-21:2008/02/update-eventummysqlticketing-integration/</id><summary type="html">&lt;p&gt;Well I know I haven&amp;#8217;t updated in a while. I have a whole bunch of links
that I&amp;#8217;d like to comment on, but things have been horribly busy. You can
find the links in my &lt;a href="http://del.icio.us/jantman/1-toblog"&gt;&amp;#8220;1-toblog&amp;#8221; folder on del.icio.us&lt;/a&gt; (prefixed with
&amp;#8220;1-&amp;#8221; so it shows up at the beginning of my bookmark&amp;nbsp;menu).&lt;/p&gt;
&lt;p&gt;In monitoring land, I&amp;#8217;ve paused my &lt;a href="http://www.hyperic.com/products/hq_oss.html"&gt;Hyperic &lt;span class="caps"&gt;HQ&lt;/span&gt;&lt;/a&gt; &lt;span class="caps"&gt;VM&lt;/span&gt; as I wasn&amp;#8217;t too
pleased with how the features panned out. I was invited to beta test
&lt;a href="http://www.groundworkopensource.com/"&gt;Groundwork Open Source&lt;/a&gt; 5.2b, but I&amp;#8217;m not crazy about the open-ness
of a non-public Beta, and am honestly not that intrigued by the small
feature set (though, admittedly, they do need more documentation on the
F/&lt;span class="caps"&gt;OSS&lt;/span&gt; version). I&amp;#8217;d still like to try them all, especially &lt;a href="http://www.zenoss.com/product/core"&gt;Zenoss
Core&lt;/a&gt;, but I&amp;#8217;m pretty busy with class, and things are heating up at
work and with a few consulting&amp;nbsp;projects.&lt;/p&gt;
&lt;p&gt;In my &amp;#8220;spare time&amp;#8221; (read: staying up until 5 &lt;span class="caps"&gt;AM&lt;/span&gt; and somehow still
getting up for work at 9) I&amp;#8217;ve been working on something that&amp;#8217;s been
bugging me for a while - getting &lt;a href="http://www.nagios.org/"&gt;Nagios&lt;/a&gt; to automatically open and
update tickets in &lt;a href="http://eventum.mysql.org"&gt;Eventum&lt;/a&gt;, the ticketing system that I (and MySQL)
use. The general idea is to use a &amp;#8220;glue&amp;#8221; script, written in &lt;span class="caps"&gt;PHP&lt;/span&gt;
(Eventum&amp;#8217;s native language). It will (hopefully) keep track of which
hosts/services it has opened tickets for (and what the ticket &lt;span class="caps"&gt;ID&lt;/span&gt; is),
and decide from that whether to open a new ticket or, if one already
exists for that host/service, update it. It should also handle changes
to assigned user/group, update categories, priorities, etc. This will
all be based on a &lt;span class="caps"&gt;DB&lt;/span&gt; table that maps problem severities and
hosts/services to the users, groups, categories, and priorities that
they should be&amp;nbsp;assigned.&lt;/p&gt;
&lt;p&gt;The biggest problem is that I&amp;#8217;m not a whiz at object-oriented &lt;span class="caps"&gt;PHP&lt;/span&gt;, and
like any good &lt;span class="caps"&gt;OO&lt;/span&gt; program, Eventum is broken down into dozens of objects,
classes, and files. With the help of the &lt;a href="http://xdebug.org/"&gt;Xdebug debugging extension for
&lt;span class="caps"&gt;PHP&lt;/span&gt;&lt;/a&gt;, which prints full debugging output including stack and function
call traces, I&amp;#8217;ve been able to *finally* - after about four hours of
work - write a simple little 15-line script that uses &lt;span class="caps"&gt;ONLY&lt;/span&gt; existing
Eventum classes, unmodified (except for a separate init.php with some
stuff commented out), which gets a list of users assigned to an issue.
From here, it shouldn&amp;#8217;t be difficult to get full issue information and
then, hopefully, add and update&amp;nbsp;issues.&lt;/p&gt;
&lt;p&gt;I have a &lt;a href="http://www.jasonantman.com/wiki/index.php/Monitoring_Ticketing"&gt;basic description of the project on my wiki&lt;/a&gt;, and the
current (development, so could be broken) source code in &lt;span class="caps"&gt;CVS&lt;/span&gt;, which can
be &lt;a href="http://cvs.jasonantman.com/cvs/Eventum-Nagios/"&gt;seen through ViewVC on my site&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Stay&amp;nbsp;Tuned!&lt;/p&gt;</summary><category term="eventum"></category><category term="monitoring"></category><category term="mysql"></category><category term="programming"></category><category term="ticketing"></category></entry><entry><title>Sun Blade 150 working!</title><link href="/2007/12/sun-blade-150-working/" rel="alternate"></link><updated>2007-12-14T02:44:00-05:00</updated><author><name>admin</name></author><id>tag:,2007-12-14:2007/12/sun-blade-150-working/</id><summary type="html">&lt;p&gt;Yes, it&amp;#8217;s 3 &lt;span class="caps"&gt;AM&lt;/span&gt; here, and I&amp;#8217;ve been working since about 6 &lt;span class="caps"&gt;PM&lt;/span&gt; on this. But
I finally got one of my two surplus (and fully locked down in &lt;span class="caps"&gt;NVRAM&lt;/span&gt;) Sun
Blade 150 workstations up and running. I encountered a few problems
along the way, but managed to solve them - more or&amp;nbsp;less.&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: bold;"&gt;Problem 1 - &lt;span class="caps"&gt;NVRAM&lt;/span&gt; password set,
impossible to install an &lt;span class="caps"&gt;OS&lt;/span&gt;.&lt;/span&gt;&lt;br /&gt;
I did a *lot* of googling, and asking for advice. Eventually, I came
by a forum post expressing success with a procedure of pulling out and
then re-inserting the &lt;span class="caps"&gt;NVRAM&lt;/span&gt; *while* the system is powered on. This
left my system un-bootable. I pulled the chip again, and found two pins
bent. I straightened them, re-inserted, and rebooted using the Stop+N
Equivalent Functionality (after powering on the system, once you hear
the &lt;span class="caps"&gt;POST&lt;/span&gt; beep, click the power button twice quickly). This temporarily
resets the &lt;span class="caps"&gt;NVRAM&lt;/span&gt; to default settings. I found that the password was
gone, and was able to issue the &amp;#8220;set-defaults&amp;#8221; command at the &amp;#8220;ok&gt;&amp;#8221;
prompt. I then popped in the Solaris 10 install &lt;span class="caps"&gt;CD&lt;/span&gt;, issued the
&amp;#8220;reset-all&amp;#8221; command to reboot, and used Stop+A at boot to bring up a
boot menu, and told it to boot from &lt;span class="caps"&gt;CDROM&lt;/span&gt; (&amp;#8220;boot cdrom&amp;#8221;). Installation
then&amp;nbsp;started.&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: bold;"&gt;Problem 2 - Invalid &lt;span class="caps"&gt;NVRAM&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
After the above procedure, when booting, I got a message following the
Sun banner stating that there was a problem with the IDprom checksum.
When the install &lt;span class="caps"&gt;CD&lt;/span&gt; booted, I also got messages stating &amp;#8220;Invalid format
code in IDprom&amp;#8221;, &amp;#8220;Warning: IDprom checksum error&amp;#8221;, and &amp;#8220;os-io Invalid
format code in IDprom&amp;#8221;. After another five hours of work, I found that
it&amp;#8217;s essentially something I have to live with. While OpenBoot previous
to version 4 allowed use of the &amp;#8220;mkp&amp;#8221; and &amp;#8220;mkpl&amp;#8221; commands to directly
write the IDprom, version 4 and above allows no access to this. The
IDprom was reporting an ethernet (mac) address of all zeros.
Unfortunately, there seems to be no way to correct this as far as I&amp;#8217;ve
found. However, it didn&amp;#8217;t effect my &lt;span class="caps"&gt;OS&lt;/span&gt; installation&amp;#8230;&amp;nbsp;much.&lt;/p&gt;
&lt;p&gt;*There may be a way to access the IDprom through OpenBoot 4.x, but I
couldn&amp;#8217;t find any reference to it online, and couldn&amp;#8217;t figure out the
&lt;span class="caps"&gt;FORTH&lt;/span&gt; commands from the reference&amp;nbsp;docs.&lt;/p&gt;
&lt;p&gt;Some helpful links for the above problems include the OpenBoot 4.x
Command Reference Manual, currently found &lt;a href="http://dlc.sun.com/pdf/816-1177-10/816-1177-10.pdf"&gt;here&lt;/a&gt;, as well as the Sun
Blade 150 Service Manual (from &lt;a href="http://docs.sun.com/"&gt;docs.sun.com&lt;/a&gt;), document 816-4379-10,
currently indexed with the Sun Blade 150 docs &lt;a href="http://docs.sun.com/app/docs/coll/sb150"&gt;here&lt;/a&gt;. It was also
interesting, in my search for help, to look at the OpenBoot 3.x Command
Manual, and see how easy it was to re-write the IDprom on older Sun
Blade&amp;nbsp;workstations.&lt;/p&gt;
&lt;p&gt;Pleaese note that the advice given in the &lt;a href="http://040.digital-bless.com/texts/Unofficial_Sun_Blade_100_FAQ.htm"&gt;Unofficial SunBlade 100
&lt;span class="caps"&gt;FAQ&lt;/span&gt;&lt;/a&gt; and the &lt;a href="http://www.squirrel.com/sun-nvram-hostid.faq.html"&gt;squirrel.com Sun &lt;span class="caps"&gt;NVRAM&lt;/span&gt; &lt;span class="caps"&gt;FAQ&lt;/span&gt;&lt;/a&gt; doesn&amp;#8217;t seem to work on
the 150 with OpenBoot 4.x. From what I can tell, all of that advice
applies only to OpenBoot&amp;nbsp;3.x!&lt;/p&gt;
&lt;p&gt;Some other helpful links included an ITworld.com article on &lt;a href="http://open.itworld.com/5040/nlsunixfirmware070111/page_1.html"&gt;Sun &lt;span class="caps"&gt;NVRAM&lt;/span&gt;
passwords&lt;/a&gt;, &lt;a href="http://forum.java.sun.com/thread.jspa?threadID=5093819&amp;amp;messageID=9329080"&gt;this&lt;/a&gt; Sun Developer Forum post, and &lt;a href="http://forum.java.sun.com/thread.jspa?threadID=5093819&amp;amp;messageID=9329080"&gt;this&lt;/a&gt; post on
password&amp;nbsp;recovery.&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: bold;"&gt;Problem 3 - &lt;span class="caps"&gt;MAC&lt;/span&gt; / Ethernet address is
00:00:00:00:00:00&lt;/span&gt;&lt;br /&gt;
When booting Solaris, I found that I couldn&amp;#8217;t get &lt;span class="caps"&gt;DHCP&lt;/span&gt;. When I finally
got the &lt;span class="caps"&gt;OS&lt;/span&gt; running and logged in as root, I realized something
interesting - I couldn&amp;#8217;t access or ping anything past the one switch I
was connected to. But everything on that switch was fine, pinging both
from and to the Solaris box. I ping&amp;#8217;ed from my laptop, and then thought
to run &amp;#8220;arp -a&amp;#8221;. It showed a &lt;span class="caps"&gt;MAC&lt;/span&gt; address of 00:00:00:00:00:00! Running
&amp;#8220;ifconfig -a&amp;#8221; on the Solaris box confirmed this. Luckily, the first time
I booted this box, I wrote down the ethernet address and hostID as shown
on the banner. I ran a quick ifconfig to setup the correct &lt;span class="caps"&gt;MAC&lt;/span&gt;, like
&amp;#8220;ifconfig eri0 ether xx:xx:xx:xx:xx:xx&amp;#8221;. Networking now worked
perfectly, and I could get to everything on the &lt;span class="caps"&gt;LAN&lt;/span&gt; as well as browse
the web. It would be good to somehow reset this in &lt;span class="caps"&gt;NVRAM&lt;/span&gt;, but for now
I&amp;#8217;m just going to add it to the startup scripts somewhere. One forum
post that I found suggested adding the previous ifconfig command to the
top of /etc/rc.c/init.d/network, which I&amp;#8217;ve done and will see how it
works at the next&amp;nbsp;boot.&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: bold;"&gt;Problem 4 - Can&amp;#8217;t login to &lt;span class="caps"&gt;SMC&lt;/span&gt; (Solaris
Management Console)&lt;/span&gt;&lt;br /&gt;
My next task after getting the system up and running, and getting
networking working, as to give myself a user account. I was logged in
using the Java Desktop System, so I opened a terminal and ran &amp;#8220;smc &amp;amp;&amp;#8221;.
After the usual initialization wait, I loaded the toolboxes for the
local machine, and connected. When I clicked on the &amp;#8220;users&amp;#8221; module and
entered my root password, I got an invalid password / login failed
message. I tried again and again, even checking against the post-it that
I wrote the password on until I memorize it. Nothing. Searching the
forums, I came by this &lt;a href="http://forum.java.sun.com/thread.jspa?threadID=5104081&amp;amp;messageID=9354742"&gt;post&lt;/a&gt;, but the value in
/etc/security/policy.conf was correctly set to &amp;#8221;
CRYPT_DEFAULT=__unix__&amp;#8221;. So, on a wild hunch, I used &amp;#8220;passwd&amp;#8221; to
reset my password to a shorter one, which I use on a few other
(unimportant) workstations.&amp;nbsp;Magic!&lt;/p&gt;
&lt;p&gt;I now have, after two days of work, a working Solaris box. Now that I
have a good &lt;span class="caps"&gt;OS&lt;/span&gt; install, in order to get the other box working, I
*should* just be able to swap HDDs, boot, login as root, and use the
&amp;#8220;eeprom&amp;#8221; command to set &amp;#8220;security-mode&amp;#8221; to &amp;#8220;none&amp;#8221;, bypassing all of this&amp;nbsp;bull****.&lt;/p&gt;</summary><category term="nvram"></category><category term="openboot"></category><category term="password"></category><category term="smc"></category><category term="solaris"></category><category term="sun"></category><category term="sunblade"></category></entry><entry><title>Access control in ViewVC</title><link href="/2007/07/access-control-in-viewvc/" rel="alternate"></link><updated>2007-07-25T12:00:00-04:00</updated><author><name>admin</name></author><id>tag:,2007-07-25:2007/07/access-control-in-viewvc/</id><summary type="html">&lt;p&gt;ViewVC (www.viewvc.org), a popular web-based frontend to &lt;span class="caps"&gt;CVS&lt;/span&gt; and &lt;span class="caps"&gt;SVN&lt;/span&gt;,
has no access control mechanism, nor does &lt;span class="caps"&gt;CVS&lt;/span&gt;. As a result, when using
ViewVC, anyone who can see the web page can browse, download, and view
files in the entire &lt;span class="caps"&gt;CVS&lt;/span&gt; repository. While I initially loved this, as I
used &lt;span class="caps"&gt;CVS&lt;/span&gt; only for &lt;span class="caps"&gt;GPL&lt;/span&gt;&amp;#8217;d projects and snippets of useful code, after a
while I decided to put some admin scripts in &lt;span class="caps"&gt;CVS&lt;/span&gt;. Most of them aren&amp;#8217;t
really sensitive, but provide a bit more of a look at the workings of my
systems than I had&amp;nbsp;hoped.&lt;/p&gt;
&lt;p&gt;I tried unsuccessfully to implement Apache Auth on the &lt;span class="caps"&gt;URL&lt;/span&gt;. After
sitting around for a while, I hit upon a wonderfully simply (yes,
inelegent)&amp;nbsp;solution.&lt;/p&gt;
&lt;p&gt;Being that ViewVC runs as a &lt;span class="caps"&gt;CGI&lt;/span&gt; script, it runs as the user and group of
the webserver - in my case, user &amp;#8216;www&amp;#8217; and group &amp;#8216;wwwrun&amp;#8217;. How to
protect one directory in the repository from being viewed with viewvc?
Well, the &lt;span class="caps"&gt;CVS&lt;/span&gt; user &amp;#8216;cvsuser&amp;#8217; runs as a member of group &amp;#8216;users&amp;#8217;. My main
username, &amp;#8216;jantman&amp;#8217;, owns all of the files in the repo. As a result, the
permissions required for &lt;span class="caps"&gt;CVS&lt;/span&gt; to run currectly and for all local users to
use it, are simply to have the directories in the repository owned by
some user and the group &amp;#8216;users&amp;#8217;, while giving both user and group rx
permissions to the directory (and, obviously, the user at least should
have&amp;nbsp;rwx).&lt;/p&gt;
&lt;p&gt;To protect a given directory/module &amp;#8220;foo&amp;#8221; in your cvsroot from being
viewed under&amp;nbsp;ViewVC:&lt;/p&gt;
&lt;li&gt;
Make sure the directory is owned by someuser and group &amp;#8216;users&amp;#8217;.

&lt;li&gt;
`chmod -R o-rwx foo&amp;#8221;` - no permissions at all for &amp;#8216;other&amp;#8217;

As your web server (and, therefore, the &lt;span class="caps"&gt;CGI&lt;/span&gt; script viewvc.cgi) run as
user &amp;#8216;www&amp;#8217; and group &amp;#8216;wwwrun&amp;#8217;, they cannot access the directory &amp;#8216;foo&amp;#8217; at
all. When you attempt to view the file listing or any file in ViewVC,
you get a read error (incorrect permissions).

A kludge? Yes. Are there ways around it? Yes. But it gets the job done,
and allows me to continue using my existing&amp;nbsp;infrastructure.</summary><category term="cvs"></category><category term="viewvc"></category></entry><entry><title>APC AP9605 PowerNet SNMP Card</title><link href="/2007/03/apc-ap9605-powernet-snmp-card/" rel="alternate"></link><updated>2007-03-01T17:09:00-05:00</updated><author><name>admin</name></author><id>tag:,2007-03-01:2007/03/apc-ap9605-powernet-snmp-card/</id><summary type="html">&lt;p&gt;In the theme of upgrades, I also purchased two &lt;span class="caps"&gt;APC&lt;/span&gt; SmartUPS1000 units
from refurbUPS.com. Now, I know that a lot of people are perfectly happy
with serial connectivity. And it has its positives. But I&amp;#8217;m running 2-3
servers per &lt;span class="caps"&gt;UPS&lt;/span&gt;, older servers, wanted to be able to monitor the UPSs,
and perhaps control server shutdown, over the network.. So, I found that
refurbUPS.com also sells &lt;span class="caps"&gt;SNMP&lt;/span&gt; management cards for them. They sell a
refurbished &lt;span class="caps"&gt;AP9605&lt;/span&gt; - it&amp;#8217;s an old 10BaseT PowerNet &lt;span class="caps"&gt;SNMP&lt;/span&gt;-only card (with
telnet management). Seemed good, and the price of $15 was&amp;nbsp;right.&lt;/p&gt;
&lt;p&gt;They showed up, but I couldn&amp;#8217;t find much about them online, let alone
anything&amp;nbsp;useful.&lt;/p&gt;
&lt;p&gt;After a phone call to &lt;span class="caps"&gt;APC&lt;/span&gt;, I managed to get the user&amp;#8217;s manual emailed to
me. The few instructions I found online were totally&amp;nbsp;wrong.&lt;/p&gt;
&lt;p&gt;The general setup goes like&amp;nbsp;this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Connect network cable to&amp;nbsp;card.&lt;/li&gt;
&lt;li&gt;Connect serial cable between a computer and the &lt;span class="caps"&gt;UPS&lt;/span&gt;&amp;#8217;s serial&amp;nbsp;port.&lt;/li&gt;
&lt;li&gt;Get a terminal emulator, like &lt;a href="http://alioth.debian.org/projects/minicom"&gt;minicom&lt;/a&gt;. Speed is&amp;nbsp;2400bps.&lt;/li&gt;
&lt;li&gt;connect and press enter. You&amp;#8217;ll be asked for a username and
    password. Use &amp;#8220;apc&amp;#8221; for&amp;nbsp;both.&lt;/li&gt;
&lt;li&gt;5) Setup the network - &lt;span class="caps"&gt;IP&lt;/span&gt;, mask, gateway,&amp;nbsp;etc.&lt;/li&gt;
&lt;li&gt;Ready-to-go!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I also have some information about the card on my wiki at: &lt;a href="http://wiki.jasonantman.com/index.php/AP9605"&gt;&lt;span class="caps"&gt;AP9605&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;</summary><category term="ap9605"></category><category term="apc"></category><category term="powernet"></category><category term="snmp"></category><category term="UPS"></category></entry><entry><title>Managing G1 Proliant Servers with modern Linux</title><link href="/2007/03/managing-g1-proliant-servers-with-modern-linux/" rel="alternate"></link><updated>2007-03-01T16:27:00-05:00</updated><author><name>admin</name></author><id>tag:,2007-03-01:2007/03/managing-g1-proliant-servers-with-modern-linux/</id><summary type="html">&lt;p&gt;Not much of an &amp;#8220;upgrade&amp;#8221; for anyone who&amp;#8217;s in &lt;span class="caps"&gt;IT&lt;/span&gt;, but jasonantman.com is
currently being upgraded from old desktops used as servers to a pile of
generation-1 (G1) &lt;span class="caps"&gt;HP&lt;/span&gt;/Compaq Proliants. I know that there are utilities
for Linux to manage the servers, specifically control fan speed and
monitor hardware-level health for Linux. However, the most recent
download on &lt;span class="caps"&gt;HP&lt;/span&gt;&amp;#8217;s site is for &lt;span class="caps"&gt;SLES9&lt;/span&gt;. All of my boxes will be running
openSuSE 10.2, and the &lt;span class="caps"&gt;SLES9&lt;/span&gt; version wouldn&amp;#8217;t install on&amp;nbsp;them.&lt;/p&gt;
&lt;p&gt;After an hour long phone call to &lt;span class="caps"&gt;HP&lt;/span&gt; support, I ended up speaking with
Paulo, the third support person I was transferred to. #1 read off the
web site, #2 knew what Linux was, but Paulo (#3) actually told me that
he was experimenting with installing &lt;span class="caps"&gt;HPASM&lt;/span&gt; (&lt;span class="caps"&gt;HP&lt;/span&gt;&amp;#8217;s server
administration/management utility) on an older Proliant as well. He
spent about half an hour walking me through it. Here&amp;#8217;s what I&amp;nbsp;found:&lt;/p&gt;
&lt;p&gt;The most compatible version of &lt;span class="caps"&gt;HPASM&lt;/span&gt; (I guess it&amp;#8217;s some hidden feature
for people who know it) is the version for the &lt;span class="caps"&gt;DL380&lt;/span&gt; G4. Paulo
instructed me to download this &lt;span class="caps"&gt;RPM&lt;/span&gt; from their site. I did, choosing the
&lt;span class="caps"&gt;SLES10&lt;/span&gt; (x86) download (hpasm-7.7.0-115.sles10.i586.rpm). This installed
fine. Running &lt;code&gt;hpasm status&lt;/code&gt; from the command line asks us to activate
it first. Do the activation. Now, running &lt;code&gt;hpasm status&lt;/code&gt; still asks us
to activate. Paulo confirmed this as happening on his machine too. Try
&lt;code&gt;/etc/init.d/hpasm status&lt;/code&gt; and you should see that all of the modules
are&amp;nbsp;working.&lt;/p&gt;
&lt;p&gt;Now, the install is complete. I&amp;#8217;m not sure if the &lt;span class="caps"&gt;SNMP&lt;/span&gt; works, but it
should as long as your snmpd is running. The &lt;code&gt;hpasm activate&lt;/code&gt; command
modifies snmpd.conf appropriately. and you will be queried for the
currect configuration&amp;nbsp;information.&lt;/p&gt;
&lt;p&gt;To give it a test, run &lt;code&gt;hplog -f&lt;/code&gt; or &lt;code&gt;hplog -p&lt;/code&gt; and you should see fan
and power status,&amp;nbsp;respectively.&lt;/p&gt;
&lt;p&gt;Paulo also told me that I could download the hpadu package (also &lt;span class="caps"&gt;DL380&lt;/span&gt;
G4 / &lt;span class="caps"&gt;SLES10&lt;/span&gt;) to get array diagnostics, He warned me that some of the
install scripts in &lt;span class="caps"&gt;HPADU&lt;/span&gt; look for the web management homepage, which we
haven&amp;#8217;t installed. To get around this, install the &lt;span class="caps"&gt;HPADU&lt;/span&gt; &lt;span class="caps"&gt;RPM&lt;/span&gt; file
(hpadu-7.70-12.linux.rpm)
&lt;code&gt;rpm -ivh --force --nodeps --noscripts hpadu-7.70-12.linux.rpm&lt;/code&gt;. Be
aware, though, that this package is supposed to be web-based. It
installs to&amp;nbsp;/opt/hp/hpadu.&lt;/p&gt;
&lt;p&gt;The web interface, luckily for me, is written in &lt;span class="caps"&gt;PHP&lt;/span&gt;. It is pretty
complex so it might take me a while to figure out the workings, but when
I do, I&amp;#8217;ll post as much info as I can on how to make a &lt;span class="caps"&gt;CLI&lt;/span&gt; interface, or
where one exists if I can find&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;Also, I&amp;#8217;ll most likely develop a Python check script to use with
&lt;a href="http://www.nagios.org"&gt;Nagios&lt;/a&gt; to monitor most of the hpasm-enabled&amp;nbsp;components.&lt;/p&gt;
&lt;p&gt;For the use of anyone else, here are some of the links that &lt;span class="caps"&gt;HP&lt;/span&gt; Support
sent me after the&amp;nbsp;call:&lt;/p&gt;
&lt;p&gt;Link for users guide for Proliant Support Pack, which includes
documentation on &lt;span class="caps"&gt;HPASM&lt;/span&gt; from the&amp;nbsp;&lt;span class="caps"&gt;CLI&lt;/span&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href=""&gt;http://h18000.www1.hp.com/support/files/server/us/WebDoc/720/psp-users-guide.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Product&amp;nbsp;manuals:&lt;/p&gt;
&lt;p&gt;[http://h20180.www2.hp.com/apps/Nav?h_pagetype=s-003&amp;amp;h_lang=en&amp;amp;h_cc=us&amp;amp;h_product=241435&amp;amp;h_page=hpcom&amp;amp;h_client=z-a-r1002-3&amp;amp;cc=us〈=en][]&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;ML370&lt;/span&gt;&amp;nbsp;G1&lt;/p&gt;
&lt;p&gt;[http://h20000.www2.hp.com/bc/docs/support/&lt;span class="caps"&gt;UCR&lt;/span&gt;/SupportManual/TPM_143091-004/TPM_143091-004.pdf][]&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;http://h18000.www1.hp.com/support/files/server/us/WebDoc/720/psp-users-guide.pdf
http://h20180.www2.hp.com/apps/Nav?h_pagetype=s-003&amp;amp;h_lang=en&amp;amp;h_cc=us&amp;amp;h_product=241435&amp;amp;h_page=hpcom&amp;amp;h_client=z-a-r1002-3&amp;amp;cc=us〈=en
http://h20000.www2.hp.com/bc/docs/support/UCR/SupportManual/TPM_143091-004/TPM_143091-004.pdf
&lt;/pre&gt;&lt;/div&gt;</summary><category term="compaq"></category><category term="hp"></category><category term="hpadu"></category><category term="hpasm"></category><category term="linux"></category><category term="management"></category><category term="proliant"></category><category term="psp"></category></entry></feed>
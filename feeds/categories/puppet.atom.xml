<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jason Antman's Blog</title><link href="http://newblog.jasonantman.com/" rel="alternate"></link><link href="http://newblog.jasonantman.com/feeds/categories/puppet.atom.xml" rel="self"></link><id>http://newblog.jasonantman.com/</id><updated>2012-08-25T11:33:00-04:00</updated><entry><title>Puppet facter facts for syslog daemon type and version, symantec netbackup</title><link href="http://newblog.jasonantman.com/2012/08/puppet-facter-facts-for-syslog-daemon-type-and-version-symantec-netbackup/" rel="alternate"></link><updated>2012-08-25T11:33:00-04:00</updated><author><name>admin</name></author><id>tag:newblog.jasonantman.com,2012-08-25:2012/08/puppet-facter-facts-for-syslog-daemon-type-and-version-symantec-netbackup/</id><summary type="html">&lt;p&gt;I have a few more custom facts that I&amp;#8217;ve added to my
&lt;a href="https://github.com/jantman/puppet-facter-facts"&gt;puppet-facter-facts&lt;/a&gt;
github&amp;nbsp;repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jantman/puppet-facter-facts/blob/master/syslog_bin.rb"&gt;syslog_bin&lt;/a&gt;,
    &lt;a href="https://github.com/jantman/puppet-facter-facts/blob/master/syslog_type.rb"&gt;syslog_type&lt;/a&gt;,
    and
    &lt;a href="https://github.com/jantman/puppet-facter-facts/blob/master/syslog_version.rb"&gt;syslog_version&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;tell the absolute path to the &lt;em&gt;running&lt;/em&gt; syslog binary, its short
name (basename), and its version as a string. Currently only know
about &lt;code&gt;/sbin/syslogd&lt;/code&gt; and &lt;code&gt;/sbin/rsyslogd&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jantman/puppet-facter-facts/blob/master/has_netbackup.rb"&gt;has_netbackup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;tests for presence of the &lt;code&gt;/usr/openv/netbackup/bin&lt;/code&gt; directory,
created by installation of &lt;a href="http://www.symantec.com/netbackup"&gt;Symantec
Netbackup&lt;/a&gt;. Useful for making
generation of include/exclude files conditional on having NetBackup&amp;nbsp;installed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hopefully some of these will be of use to someone else as&amp;nbsp;well.&lt;/p&gt;</summary><category term="facter"></category><category term="nbu"></category><category term="netbackup"></category><category term="puppet"></category><category term="rsyslog"></category><category term="syslog"></category></entry><entry><title>Puppet facter fact for all applied classes, returned as a CSV list</title><link href="http://newblog.jasonantman.com/2012/08/puppet-facter-fact-for-all-applied-classes-returned-as-a-csv-list/" rel="alternate"></link><updated>2012-08-22T07:05:00-04:00</updated><author><name>admin</name></author><id>tag:newblog.jasonantman.com,2012-08-22:2012/08/puppet-facter-fact-for-all-applied-classes-returned-as-a-csv-list/</id><summary type="html">&lt;p&gt;I&amp;#8217;m unfortunatey stuck, at least for the time being, using flat-file
manifests to configure my puppet nodes. Without an &lt;span class="caps"&gt;ENC&lt;/span&gt;, it&amp;#8217;s pretty
difficult to get a good ovewview of what classes are used on each node,
and what nodes use a given class. I know I could write up a simple web
tool to do this (unfortunately, given my limited Ruby knowledge, it
would have to be in &lt;span class="caps"&gt;PHP&lt;/span&gt; or Perl, not a real modification to Dashboard in
Ruby). But where to get the data&amp;nbsp;from?&lt;/p&gt;
&lt;p&gt;After some research, I found a &lt;a href="http://sjoeboo.github.com/blog/2012/07/31/updated-puppet-facts-for-puppet-classes/"&gt;puppet fact for puppet
classes&lt;/a&gt;
on &lt;a href="http://sjoeboo.github.com/"&gt;Matthew Nicholson&amp;#8217;s Coffee &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Beer blog&lt;/a&gt;.
It parses &lt;code&gt;/var/lib/puppet/classes.txt&lt;/code&gt; and returns the list of classes
found as a &lt;span class="caps"&gt;JSON&lt;/span&gt; array. Great base, but I wanted something easier, that
would be more easily parsed from its direct storage in MySQL. My
modification to his code is onlty a few characters; I dropped out the
&lt;span class="caps"&gt;JSON&lt;/span&gt; require, and return the classes as a &lt;span class="caps"&gt;CSV&lt;/span&gt; list. This lets me to easy
&lt;code&gt;LIKE '%,classname,%'&lt;/code&gt; SELECTs in MySQL, and also gives me the fact
value stored in the puppet &lt;span class="caps"&gt;DB&lt;/span&gt;, so I can build a separate tool around
that data. Thanks,&amp;nbsp;Matt.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# facter fact for puppet classes on node, pulled from /var/lib/puppet/classes.txt&lt;/span&gt;
&lt;span class="c1"&gt;# from &lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;facter&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;begin&lt;/span&gt;
        &lt;span class="no"&gt;Facter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hostname&lt;/span&gt;
        &lt;span class="no"&gt;Facter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fqdn&lt;/span&gt;
&lt;span class="k"&gt;rescue&lt;/span&gt;
        &lt;span class="no"&gt;Facter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loadfacts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;hostname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Facter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hostname&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;fqdn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Facter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fqdn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;classes_txt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/var/lib/puppet/classes.txt&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;classes_txt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;classes_txt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;classes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
                &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chomp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;
                &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;_&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;settings&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;hostname&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;fqdn&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="no"&gt;Facter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;puppet_classes_csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
                &lt;span class="n"&gt;setcode&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
                        &lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All of my facts are now available in a GitHub repository:
&lt;a href="https://github.com/jantman/puppet-facter-facts"&gt;https://github.com/jantman/puppet-facter-facts&lt;/a&gt;.&lt;/p&gt;</summary><category term="classes"></category><category term="csv"></category><category term="fact"></category><category term="facter"></category><category term="node"></category><category term="puppet"></category></entry><entry><title>Puppet facter fact for last applied configuration version</title><link href="http://newblog.jasonantman.com/2012/08/puppet-facter-fact-for-last-applied-configuration-version/" rel="alternate"></link><updated>2012-08-21T08:55:00-04:00</updated><author><name>admin</name></author><id>tag:newblog.jasonantman.com,2012-08-21:2012/08/puppet-facter-fact-for-last-applied-configuration-version/</id><summary type="html">&lt;p&gt;For anyone else who sets the Puppet &lt;code&gt;config_version&lt;/code&gt; paramater to return
the current &lt;span class="caps"&gt;SVN&lt;/span&gt; or Git version of your configuration, here&amp;#8217;s a fact that
grabs that version (by parsing the cached &lt;span class="caps"&gt;YAML&lt;/span&gt; catalog) and sets it as a
fact called &amp;#8220;catalog_config_version&amp;#8221;. It can then be used for
sanity-checking your nodes, looking up via the Inventory Service, or you
can display it in the Dashboard using my patch: &lt;a href="http://blog.jasonantman.com/2012/08/patch-to-puppet-dashboard-1-2-10-to-show-arbitrary-facts-in-the-main-node-table/"&gt;Patch to Puppet
Dashboard 1.2.10 to show arbitrary facts in the main node
table&lt;/a&gt;.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# facter fact for last applied config version, skeleton from /var/lib/puppet/client_yaml/catalog/fqdn.yaml&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;puppet&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;yaml&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;facter&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;localconfig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;&lt;span class="caps"&gt;ARGV&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;Puppet&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:clientyamldir&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/catalog/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt; &lt;span class="no"&gt;Facter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fqdn&lt;/span&gt; &lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.yaml&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exist?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;localconfig&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Can&amp;#39;t find &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt; &lt;span class="no"&gt;Facter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fqdn&lt;/span&gt; &lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.yaml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;lc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;localconfig&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;begin&lt;/span&gt;
  &lt;span class="n"&gt;pup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Marshal&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;rescue&lt;/span&gt; &lt;span class="no"&gt;TypeError&lt;/span&gt;
  &lt;span class="n"&gt;pup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;&lt;span class="caps"&gt;YAML&lt;/span&gt;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;rescue&lt;/span&gt; &lt;span class="no"&gt;Exception&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;
  &lt;span class="k"&gt;raise&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pup&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="ss"&gt;Puppet&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="ss"&gt;:Resource&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Catalog&lt;/span&gt;
        &lt;span class="no"&gt;Facter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;catalog_config_version&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
                &lt;span class="n"&gt;setcode&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
                        &lt;span class="n"&gt;pup&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;
                &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="no"&gt;Facter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;catalog_config_version&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
                &lt;span class="n"&gt;setcode&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
                        &lt;span class="s2"&gt;&amp;quot;unknown&amp;quot;&lt;/span&gt;
                &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All of my facts are now available in a GitHub repository:
&lt;a href="https://github.com/jantman/puppet-facter-facts"&gt;https://github.com/jantman/puppet-facter-facts&lt;/a&gt;.&lt;/p&gt;</summary><category term="config_version"></category><category term="fact"></category><category term="facter"></category><category term="puppet"></category></entry><entry><title>Patch to Puppet Dashboard 1.2.10 to show arbitrary facts in the main node table</title><link href="http://newblog.jasonantman.com/2012/08/patch-to-puppet-dashboard-1-2-10-to-show-arbitrary-facts-in-the-main-node-table/" rel="alternate"></link><updated>2012-08-11T10:34:00-04:00</updated><author><name>admin</name></author><id>tag:newblog.jasonantman.com,2012-08-11:2012/08/patch-to-puppet-dashboard-1-2-10-to-show-arbitrary-facts-in-the-main-node-table/</id><summary type="html">&lt;p&gt;We use &lt;a href="http://puppetlabs.com/puppet/related-projects/dashboard/"&gt;Puppet
Dashboard&lt;/a&gt; at
work to view the status of our puppet nodes. While it&amp;#8217;s very handy,
there&amp;#8217;s one feature I really wanted: the ability to show the value of
arbitrary puppet facts in the main node table on the home page.
Specifically, the facts we use for environment (we have eng/dev, qa,
prod, and test puppet environments), zone (physical location) and last
applied configuration version. I&amp;#8217;m not terribly experience with Ruby,
but I managed to muddle my way through a working patch to do this, along
with options in the settings file to enable it and configure the facts.
You&amp;#8217;ll need to restart dashboard (or your web server) to change the
facts, of course. The commit is currently &lt;a href="https://github.com/jantman/puppet-dashboard/commit/5364e2b0188d18ae62c355279e58c7ce6d7db654"&gt;available on
github&lt;/a&gt;,
but it doesn&amp;#8217;t strictly follow the &lt;a href="https://github.com/puppetlabs/puppet-dashboard/blob/master/CONTRIBUTING.md"&gt;puppet-dashboard contributing
checklist&lt;/a&gt;
so I may have to redo&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s a&amp;nbsp;screenshot:&lt;/p&gt;
&lt;p&gt;&lt;a href="/GFX/dashboard_after_patch.png"&gt;&lt;img alt="Dashboard screenshot after
patch" src="/GFX/dashboard_after_patch_sm.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And here&amp;#8217;s that the configuration section added to settings.yml looks&amp;nbsp;like:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# Enables display of arbitrary node facts in &amp;quot;home&amp;quot; page node table, between node name and latest report time&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;enable_home_facts&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;true&lt;/span&gt;

&lt;span class="c1"&gt;# If enable_home_facts is true, the fact names and column headings to display. Simply repeat the following two line pairs&lt;/span&gt;
&lt;span class="c1"&gt;# as needed:&lt;/span&gt;
&lt;span class="c1"&gt;#- name: &amp;#39;factname&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;#  heading: &amp;#39;heading text&amp;#39;&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;home_facts&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; 
&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;environment&amp;#39;&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;heading&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Env&amp;#39;&lt;/span&gt;
&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;zone&amp;#39;&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;heading&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Zone&amp;#39;&lt;/span&gt;
&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;catalog_config_version&amp;#39;&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;heading&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Cfg&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Ver&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If I feel really adventurous, I&amp;#8217;d like to implement my other big wish,
some sort of pop-up list of links, based on arbitrary facts (mainly
hostname and fqdn) for each node - something where I can mouse over the
node name/table cell, and see links (static URLs with node
name/fqdn/other facts plugged in) to things like Nagios/Icinga, our
backup system,&amp;nbsp;etc.&lt;/p&gt;</summary><category term="dashboard"></category><category term="facts"></category><category term="puppet"></category><category term="ruby"></category><category term="sysadmin"></category></entry><entry><title>Python script to find dependency cycles in GraphViz dot files</title><link href="http://newblog.jasonantman.com/2012/03/python-script-to-find-dependency-cycles-in-graphviz-dot-files/" rel="alternate"></link><updated>2012-03-28T22:05:00-04:00</updated><author><name>admin</name></author><id>tag:newblog.jasonantman.com,2012-03-28:2012/03/python-script-to-find-dependency-cycles-in-graphviz-dot-files/</id><summary type="html">&lt;p&gt;Using &lt;a href="http://www.graphviz.org/"&gt;GraphViz&lt;/a&gt; to describe configurations is
relatively popular in the software and systems architecture world; the
simple text-based format makes it quiet simple, and the directed graph
(dot file) is a simple method to store a graph of information flow or
component relationships. &lt;a href="http://puppetlabs.com"&gt;Puppet&lt;/a&gt; includes
builtin support for &lt;a href="http://docs.puppetlabs.com/guides/faq.html#how-do-i-use-puppets-graphing-support"&gt;generating dot
graphs&lt;/a&gt;
of its configuration resources and relationships (both those specified
by the user, and all relationships including ones generated by Puppet&amp;nbsp;itself).&lt;/p&gt;
&lt;p&gt;One of the common uses for puppet&amp;#8217;s graphs is to identify dependency
cycles, as cyclic dependencies cause an error condition. However,
Puppet&amp;#8217;s own
&lt;a href="http://docs.puppetlabs.com/guides/faq.html#how-do-i-use-puppets-graphing-support"&gt;&lt;span class="caps"&gt;FAQ&lt;/span&gt;&lt;/a&gt;
only mentions using the &lt;code&gt;dot&lt;/code&gt; command to generate a &lt;span class="caps"&gt;PNG&lt;/span&gt; graphical
representation of the the graph. When debugging a recent problem with
puppet, I ended up with a message&amp;nbsp;like:  &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;Could not apply complete catalog: Found dependency cycles in the following relationships: Service[puppet] =&amp;gt; File[/var/lib/puppet/yaml/foreman], File[/var/lib/puppet/yaml] =&amp;gt; File[/var/lib/puppet/yaml/foreman], Service[puppet] =&amp;gt; File[/etc/puppet/node.rb], File[fileserver.conf] =&amp;gt; Service[apache], File[namespaceauth.conf] =&amp;gt; Service[apache], File[puppet.conf] =&amp;gt; Service[apache], File[puppet.conf] =&amp;gt; Service[puppet], Service[puppet] =&amp;gt; File[foreman-report.rb], File[/var/lib/puppet/yaml/foreman] =&amp;gt; Package[puppet-server], Service[foreman-proxy] =&amp;gt; Package[puppet-server], File[foreman-proxy-settings.yml] =&amp;gt; Package[puppet-server], Package[foreman-proxy] =&amp;gt; Package[puppet-server], User[foreman-proxy] =&amp;gt; Package[puppet-server], File[/var/lib/puppet/yaml] =&amp;gt; Package[puppet-server], File[foreman-report.rb] =&amp;gt; Package[puppet-server], File[/etc/puppet/node.rb] =&amp;gt; Package[puppet-server], File[/var/lib/puppet/yaml/foreman] =&amp;gt; Exec[create_puppetmaster_certs], Service[foreman-proxy] =&amp;gt; Exec[create_puppetmaster_certs], File[foreman-proxy-settings.yml] =&amp;gt; Exec[create_puppetmaster_certs], Package[foreman-proxy] =&amp;gt; Exec[create_puppetmaster_certs], User[foreman-proxy] =&amp;gt; Exec[create_puppetmaster_certs], File[/var/lib/puppet/yaml] =&amp;gt; Exec[create_puppetmaster_certs], File[foreman-report.rb] =&amp;gt; Exec[create_puppetmaster_certs], File[/etc/puppet/node.rb] =&amp;gt; Exec[create_puppetmaster_certs], File[/var/lib/puppet/yaml/foreman] =&amp;gt; File[/etc/puppet/environments], Service[foreman-proxy] =&amp;gt; File[/etc/puppet/environments], File[foreman-proxy-settings.yml] =&amp;gt; File[/etc/puppet/environments], Package[foreman-proxy] =&amp;gt; File[/etc/puppet/environments], User[foreman-proxy] =&amp;gt; File[/etc/puppet/environments], File[/var/lib/puppet/yaml] =&amp;gt; File[/etc/puppet/environments], File[foreman-report.rb] =&amp;gt; File[/etc/puppet/environments], File[/etc/puppet/node.rb] =&amp;gt; File[/etc/puppet/environments], File[foreman-proxy-settings.yml] =&amp;gt; Service[foreman-proxy], Package[foreman-proxy] =&amp;gt; Service[foreman-proxy], Service[puppet]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Not exactly easy to follow, or to pull much meaning out of, even if I
did some slight reformatting by putting in some newlines. I then
generated the png as described in the Puppet FAQs, but even scrolling
back and forth on this for 20 minutes didn&amp;#8217;t help: &lt;em&gt;(note: link is to
the original 14405x665px png)&lt;/em&gt;&lt;br /&gt;
&lt;a href="/GFX/relationships.dot.png"&gt;&lt;img alt="dot file
png" src="/GFX/relationships.dot.small.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With a little research, I managed to find the
&lt;a href="http://networkx.lanl.gov"&gt;NetworkX&lt;/a&gt; package for Python; according to
their site, &amp;#8220;NetworkX is a Python language software package for the
creation, manipulation, and study of the structure, dynamics, and
functions of complex networks.&amp;#8221; Among its features are the ability to
&lt;a href="http://networkx.lanl.gov/reference/drawing.html#module-networkx.drawing.nx_pydot"&gt;read dot
files&lt;/a&gt;
using the &lt;a href="http://code.google.com/p/pydot/"&gt;pydot&lt;/a&gt; library, and the
ability to &lt;a href="http://networkx.lanl.gov/reference/generated/networkx.algorithms.cycles.simple_cycles.html#networkx.algorithms.cycles.simple_cycles"&gt;find simple
cycles&lt;/a&gt;
within a graph. In about 20 minutes, I hacked together the dead-simple
script&amp;nbsp;below.&lt;/p&gt;
&lt;p&gt;Given a dot file (of the type generated, for example, by Puppet), this
will output all of the cycles found within the graph. I ran this script
on the &lt;code&gt;expanded_relationships.dot&lt;/code&gt; file from Puppet, which had 99 nodes
(nodes on the graph, not puppet clients), and got the following&amp;nbsp;output:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;[&amp;#39;File[foreman-report.rb]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;File[foreman-report.rb]&amp;#39;]
[&amp;#39;File[foreman-report.rb]&amp;#39;, &amp;#39;Package[puppet-server]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;File[foreman-report.rb]&amp;#39;]
[&amp;#39;Package[puppet-server]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;Service[foreman-proxy]&amp;#39;, &amp;#39;Package[puppet-server]&amp;#39;]
[&amp;#39;Package[puppet-server]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;File[/etc/puppet/node.rb]&amp;#39;, &amp;#39;Package[puppet-server]&amp;#39;]
[&amp;#39;Package[puppet-server]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;File[foreman-proxy-settings.yml]&amp;#39;, &amp;#39;Service[foreman-proxy]&amp;#39;, &amp;#39;Package[puppet-server]&amp;#39;]
[&amp;#39;Package[puppet-server]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;File[foreman-proxy-settings.yml]&amp;#39;, &amp;#39;Package[puppet-server]&amp;#39;]
[&amp;#39;Package[puppet-server]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;User[foreman-proxy]&amp;#39;, &amp;#39;File[/etc/puppet/node.rb]&amp;#39;, &amp;#39;Package[puppet-server]&amp;#39;]
[&amp;#39;Package[puppet-server]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;User[foreman-proxy]&amp;#39;, &amp;#39;Package[puppet-server]&amp;#39;]
[&amp;#39;Package[puppet-server]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;Package[foreman-proxy]&amp;#39;, &amp;#39;Service[foreman-proxy]&amp;#39;, &amp;#39;Package[puppet-server]&amp;#39;]
[&amp;#39;Package[puppet-server]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;Package[foreman-proxy]&amp;#39;, &amp;#39;File[foreman-proxy-settings.yml]&amp;#39;, &amp;#39;Service[foreman-proxy]&amp;#39;, &amp;#39;Package[puppet-server]&amp;#39;]
[&amp;#39;Package[puppet-server]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;Package[foreman-proxy]&amp;#39;, &amp;#39;File[foreman-proxy-settings.yml]&amp;#39;, &amp;#39;Package[puppet-server]&amp;#39;]
[&amp;#39;Package[puppet-server]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;Package[foreman-proxy]&amp;#39;, &amp;#39;Package[puppet-server]&amp;#39;]
[&amp;#39;Package[puppet-server]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;File[/var/lib/puppet/yaml/foreman]&amp;#39;, &amp;#39;Package[puppet-server]&amp;#39;]
[&amp;#39;File[/etc/puppet/node.rb]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;File[/etc/puppet/node.rb]&amp;#39;]
[&amp;#39;File[/etc/puppet/node.rb]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;User[foreman-proxy]&amp;#39;, &amp;#39;File[/etc/puppet/node.rb]&amp;#39;]
[&amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;Service[foreman-proxy]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;]
[&amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;Package[foreman-proxy]&amp;#39;, &amp;#39;Service[foreman-proxy]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;]
[&amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;Package[foreman-proxy]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;]
[&amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;Package[foreman-proxy]&amp;#39;, &amp;#39;File[foreman-proxy-settings.yml]&amp;#39;, &amp;#39;Service[foreman-proxy]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;]
[&amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;Package[foreman-proxy]&amp;#39;, &amp;#39;File[foreman-proxy-settings.yml]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;]
[&amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;File[/var/lib/puppet/yaml/foreman]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;]
[&amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;File[foreman-proxy-settings.yml]&amp;#39;, &amp;#39;Service[foreman-proxy]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;]
[&amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;File[foreman-proxy-settings.yml]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;]
[&amp;#39;File[puppet.conf]&amp;#39;, &amp;#39;Service[puppet]&amp;#39;, &amp;#39;User[foreman-proxy]&amp;#39;, &amp;#39;File[puppet.conf]&amp;#39;]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It probably would have taken me hours to come up with that by hand, let
alone realize that &lt;code&gt;Service[puppet]&lt;/code&gt; is the common item in all of them,
and hence the problem. With that little tidbit of information, I managed
to track down an extraneous &amp;#8220;require puppet&amp;#8221; that this all originated
from. I sincerely hope that this script will save someone else at least
as much time as it took me to write (I know it will for&amp;nbsp;me&amp;#8230;).&lt;/p&gt;
&lt;p&gt;You can always obtain the latest version of this script from
&lt;a href="https://github.com/jantman/misc-scripts/blob/master/dot_find_cycles.py"&gt;my github repository&lt;/a&gt;
It&amp;#8217;s free for use
and distribution, provided that you leave my copyright/attribution and
source &lt;span class="caps"&gt;URL&lt;/span&gt; notice intact, update the changelog, and send any
features/fixes back to me. The script is written in Python, and depends
on the python-networkx, graphviz-python, and pydot packages (all of
which are available as packages in the default repos of Fedora and
CentOS at least). For Puppet purposes, I&amp;#8217;d recommend running this on
&lt;code&gt;expanded_relationships.dot&lt;/code&gt; to get the full&amp;nbsp;information.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;dot_find_cycles.py - uses Pydot and NetworkX to find cycles in a dot file directed graph.&lt;/span&gt;

&lt;span class="sd"&gt;Very helpful for &lt;/span&gt;

&lt;span class="sd"&gt;By Jason Antman  2012.&lt;/span&gt;

&lt;span class="sd"&gt;Free for all use, provided that you send any changes you make back to me, update the changelog, and keep this comment intact.&lt;/span&gt;

&lt;span class="sd"&gt;&lt;span class="caps"&gt;REQUIREMENTS&lt;/span&gt;:&lt;/span&gt;
&lt;span class="sd"&gt;Python&lt;/span&gt;
&lt;span class="sd"&gt;python-networkx - &lt;/span&gt;
&lt;span class="sd"&gt;graphviz-python - &lt;/span&gt;
&lt;span class="sd"&gt;pydot - &lt;/span&gt;
&lt;span class="sd"&gt;(all of these are available as native packages at least on CentOS)&lt;/span&gt;

&lt;span class="sd"&gt;&lt;span class="caps"&gt;USAGE&lt;/span&gt;:&lt;/span&gt;
&lt;span class="sd"&gt;dot_find_cycles.py /path/to/file.dot&lt;/span&gt;

&lt;span class="sd"&gt;The canonical source of this script can always be found from:&lt;/span&gt;


&lt;span class="sd"&gt;$HeadURL: http://svn.jasonantman.com/misc-scripts/dot_find_cycles.py $&lt;/span&gt;
&lt;span class="sd"&gt;$LastChangedRevision: 33 $&lt;/span&gt;

&lt;span class="sd"&gt;&lt;span class="caps"&gt;CHANGELOG&lt;/span&gt;:&lt;/span&gt;
&lt;span class="sd"&gt;    Wednesday 2012-03-28 Jason Antman :&lt;/span&gt;
&lt;span class="sd"&gt;        - initial script creation&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;R_OK&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;networkx&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;nx&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;usage&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dot_find_cycles.py by Jason Antman &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;  finds cycles in dot file graphs, such as those from Puppet&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;span class="caps"&gt;USAGE&lt;/span&gt;: dot_find_cycles.py /path/to/file.dot&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;

    &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;usage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;fh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;IOError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;span class="caps"&gt;ERROR&lt;/span&gt;: could not read file &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;usage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# read in the specified file, create a networkx DiGraph&lt;/span&gt;
    &lt;span class="n"&gt;G&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DiGraph&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;simple_cycles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;G&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;

&lt;span class="c"&gt;# Run&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="dot"></category><category term="graph"></category><category term="graphviz"></category><category term="puppet"></category><category term="python"></category></entry><entry><title>The state of Puppet External Node Classifiers</title><link href="http://newblog.jasonantman.com/2012/02/the-state-of-puppet-external-node-classifiers/" rel="alternate"></link><updated>2012-02-26T12:45:00-05:00</updated><author><name>admin</name></author><id>tag:newblog.jasonantman.com,2012-02-26:2012/02/the-state-of-puppet-external-node-classifiers/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Update November 2013&lt;/strong&gt;: This post has brought an amazing amount of
traffic to my blog, probably because it still seems to be one of the
only &lt;span class="caps"&gt;ENC&lt;/span&gt; comparisons out there. Both Dashboard (and Puppet Enterprise
Console) and The Foreman have changed quite a bit since I wrote this.
Foreman has certainly been developed at warp speed. I&amp;#8217;ll try to write an
update to this sometime soon, but be advised that the information here
is somewhat&amp;nbsp;dated.&lt;/p&gt;
&lt;p&gt;At work, we&amp;#8217;re in the process of rolling out
&lt;a href="http://projects.puppetlabs.com/projects/puppet"&gt;puppet&lt;/a&gt; for
configuration management of our servers. It will be an integral part of
the provisioning process of all new physical and virtual hosts, and will
also be phased in on existing hosts as possible. Right now, we have an
initial puppet install that was &amp;#8220;development&amp;#8221;, but we&amp;#8217;re about to move
to &amp;#8220;production&amp;#8221; (new puppetmaster in our production infrastructure,
production MySQL, etc.). We&amp;#8217;ve been using
&lt;a href="http://puppetlabs.com/puppet/related-projects/dashboard/"&gt;Dashboard&lt;/a&gt;,
but just as a report viewer. Up until now, we&amp;#8217;ve been using nodes.pp and
per-node flat-file manifests. I&amp;#8217;ve got a few issues with this, but the
biggest is that all of our node definitions (and their classes and
parameters) live in the same &lt;span class="caps"&gt;SVN&lt;/span&gt; repository as our modules and other
puppet configuration. Not only does this mean a checkout and commit just
to change a node parameter or add a module/class to a node, but it also
means that for my team members who don&amp;#8217;t have previous puppet
experience, it greatly blurs the line between administering puppet
(developing and maintaining modules) and using puppet (building a node,
changing node params or modules/classes), since both tasks are
accomplished in the same &lt;span class="caps"&gt;SVN&lt;/span&gt;&amp;nbsp;repository.&lt;/p&gt;
&lt;p&gt;So, I&amp;#8217;ve been pushing an &lt;a href="http://docs.puppetlabs.com/guides/external_nodes.html"&gt;External Node Classifier
(&lt;span class="caps"&gt;ENC&lt;/span&gt;)&lt;/a&gt; with a web
interface as one of the biggest feature enhancements we need for our
puppet install. The complicating factor is that I&amp;#8217;ve been given a time
frame of approximately 1 week to get the &amp;#8220;production&amp;#8221; puppetmaster
running on our production infrastructure and marked as &amp;#8220;done&amp;#8221;. That
includes the &lt;span class="caps"&gt;ENC&lt;/span&gt;. At my last gig, at Rutgers University, I wrote our &lt;span class="caps"&gt;ENC&lt;/span&gt;
in &lt;span class="caps"&gt;PHP&lt;/span&gt; (actually I wrote it for my half-dozen or so boxes at home, and
brought it to Rutgers gratis), and it also handled kickstart file
distribution and &lt;span class="caps"&gt;PXE&lt;/span&gt; configuration, and was extended to also set &lt;span class="caps"&gt;DHCP&lt;/span&gt;
and &lt;span class="caps"&gt;DNS&lt;/span&gt; for the hosts - a one-stop solution. Unfortunately the code is
very organization-specific, not terribly solid, and the &lt;span class="caps"&gt;UI&lt;/span&gt; looks awful,
so it&amp;#8217;s not a fit for the current employer. So I have to find something
else that fits the bill. I have a list of initial (&amp;#8220;phase 1&amp;#8221;)
requirements that are a mix of functionality that we require and
management&amp;nbsp;requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Must support environments, since we make use of&amp;nbsp;them.&lt;/li&gt;
&lt;li&gt;Must support default values for parameters based on environment,
    &amp;#8220;zone&amp;#8221; (a custom fact and variable we define), or a combination of&amp;nbsp;both.&lt;/li&gt;
&lt;li&gt;For accountability and legal reasons, must have full auditing of all
    changes by all users (and, obviously, support&amp;nbsp;authentication).&lt;/li&gt;
&lt;li&gt;Display node last run time and&amp;nbsp;status.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As well as at least the ability to implement some of our phase 2&amp;nbsp;requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ability to show modules and classes applied to a node, including
    those required/included through other&amp;nbsp;modules/classes/roles.&lt;/li&gt;
&lt;li&gt;Should support at least some level of puppet report&amp;nbsp;display.&lt;/li&gt;
&lt;li&gt;Ability to trigger a node run (kick) from the&amp;nbsp;&lt;span class="caps"&gt;UI&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;Some level of permission separation, &lt;span class="caps"&gt;ACL&lt;/span&gt; or &lt;span class="caps"&gt;RBAC&lt;/span&gt; so that we could
    potentially delegate control of a certain module or parameter, on a
    certain group of nodes, to the development&amp;nbsp;team.&lt;/li&gt;
&lt;li&gt;Per-node links to other tools such as Icinga/Nagios or our&amp;nbsp;wiki.&lt;/li&gt;
&lt;li&gt;Some way of detecting valid classes and modules (and our &amp;#8220;role&amp;#8221;
    module) per-environment (i.e. available modules/classes/roles should
    be pulled from the configs, not manually&amp;nbsp;entered).&lt;/li&gt;
&lt;li&gt;Ability to display puppet docs from&amp;nbsp;modules/classes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Our current situation makes this even more difficult: we&amp;#8217;re an
operations team of five (hiring at the moment to fill the position of
the sixth), and I believe I&amp;#8217;m the only member of the team with any real
software development experience. And none of us have experience with
Ruby (which Puppet and most of its universe is written in). This means
that any in-house solution runs the risk of being unmaintainable should
I get hit by a bus (some of our team have various levels of experience
with Perl and other scripting languages, but not really from an app
development perspective). Because of these reasons, there&amp;#8217;s a management
aversion to anything that we code ourselves (well, these reasons, and
the fact that with a shorthanded team we don&amp;#8217;t have much time for
projects without an immediate&amp;nbsp;impact).&lt;/p&gt;
&lt;p&gt;So, I spent hours looking around online trying to find existing
web-based &lt;span class="caps"&gt;ENC&lt;/span&gt; projects, and came up with a pretty small&amp;nbsp;list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://puppetlabs.com/puppet/related-projects/dashboard/"&gt;Dashboard&lt;/a&gt;,
    the Puppet Labs web &lt;span class="caps"&gt;UI&lt;/span&gt;. It&amp;#8217;s the most common web-based puppet &lt;span class="caps"&gt;ENC&lt;/span&gt; as
    far as I know, and since it&amp;#8217;s an official Puppet Labs project (and
    the basis for their Puppet Enterprise &lt;span class="caps"&gt;UI&lt;/span&gt;), its future is pretty
    secure. But it&amp;#8217;s still very basic (let alone enterprise features),
    and has a plugin system that is very&amp;nbsp;young.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://theforeman.org/projects/foreman"&gt;The Foreman&lt;/a&gt; is probably
    the second-most-common puppet &lt;span class="caps"&gt;ENC&lt;/span&gt;, and has also been around about as
    long as Dashboard. Its features are nice, and it includes support
    for Kickstart (management of &lt;span class="caps"&gt;TFTP&lt;/span&gt; and &lt;span class="caps"&gt;DHCP&lt;/span&gt;) and &lt;span class="caps"&gt;DNS&lt;/span&gt;, as well as some
    virtual machine management. Unfortunately, we already have &lt;span class="caps"&gt;DHCP&lt;/span&gt; and
    &lt;span class="caps"&gt;DNS&lt;/span&gt; infrastructure so I&amp;#8217;m sure it would be quite a bit of effort to
    integrate it with our environment, and for a non-Ruby shop, it has
    the same problem with maintainability of custom&amp;nbsp;code.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ingent.net/projects/initr/wiki"&gt;initr&lt;/a&gt;, a
    &lt;a href="http://www.redmine.org/"&gt;Redmine&lt;/a&gt; plugin that functions as an &lt;span class="caps"&gt;ENC&lt;/span&gt;
    and manages modules. It includes &lt;span class="caps"&gt;RBAC&lt;/span&gt; and leverages Redmine. But
    since we don&amp;#8217;t use Redmine, it&amp;#8217;s not much of an&amp;nbsp;advantage.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gitorious.org/opennms-puppet-node-pusher"&gt;OpenNMS Puppet Node
    Pusher&lt;/a&gt;An &lt;span class="caps"&gt;ENC&lt;/span&gt;
    script for &lt;a href="http://www.opennms.org/"&gt;OpenNMS&lt;/a&gt;, which we also don&amp;#8217;t&amp;nbsp;use.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I was pretty amazed to see that nobody had written a puppet web &lt;span class="caps"&gt;UI&lt;/span&gt;/&lt;span class="caps"&gt;ENC&lt;/span&gt;
in &lt;span class="caps"&gt;PHP&lt;/span&gt; (or Perl or Python), especially since Puppet is now quite&amp;nbsp;popular.&lt;/p&gt;
&lt;p&gt;So, I&amp;#8217;m essentially left with the following&amp;nbsp;options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start from scratch and write my own in &lt;span class="caps"&gt;PHP&lt;/span&gt;. By far the worst option,
    since we don&amp;#8217;t have anyone on our team who&amp;#8217;s likely to maintain it,
    and the Puppet community is&amp;nbsp;Ruby-focused.&lt;/li&gt;
&lt;li&gt;Use Foreman, since it&amp;#8217;s the only one that appears to offer audit
    logging, have a bunch of features that don&amp;#8217;t work for us, and
    hopefully deal with&amp;nbsp;it.&lt;/li&gt;
&lt;li&gt;Learn Ruby, write plugins for Dashboard, and hope that Puppet Labs
    or someone else will pick them up and maintain them if I&amp;nbsp;can&amp;#8217;t.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At the moment, I&amp;#8217;ve decided to investigate Foreman and initr in a bit
more depth, and also play around with the Dashboard code and try to pick
up some Ruby (as they&amp;#8217;re all written in Ruby anyway). I&amp;#8217;ll also discuss
these options with the team and see how opinions go (keeping in mind
that the higher the likelihood of the community picking up/merging my
changes, the&amp;nbsp;better).&lt;/p&gt;</summary><category term="dashboard"></category><category term="foreman"></category><category term="node classifier"></category><category term="puppet"></category></entry><entry><title>Puppet Syntax Highlighting with GeSHi</title><link href="http://newblog.jasonantman.com/2012/01/puppet-syntax-highlighting-with-geshi/" rel="alternate"></link><updated>2012-01-11T12:32:00-05:00</updated><author><name>admin</name></author><id>tag:newblog.jasonantman.com,2012-01-11:2012/01/puppet-syntax-highlighting-with-geshi/</id><summary type="html">&lt;p&gt;This blog is run on wordpress, and I also do quite a bit in &lt;span class="caps"&gt;PHP&lt;/span&gt;, so I&amp;#8217;m
familiar with the &lt;a href="http://qbnz.com/highlighter/"&gt;GeSHi&lt;/a&gt; syntax
highlighter. It&amp;#8217;s &lt;span class="caps"&gt;PHP&lt;/span&gt;-based, and can run both as a Wordpress plugin
(&lt;a href="http://wordpress.org/extend/plugins/wp-syntax/"&gt;&lt;span class="caps"&gt;WP&lt;/span&gt;-Syntax&lt;/a&gt;) and as a
&lt;span class="caps"&gt;PHP&lt;/span&gt; module. It also works quite well with the MediaWiki &lt;a href="http://www.mediawiki.org/wiki/Extension:SyntaxHighlight_GeSHi"&gt;SyntaxHighlight
GeSHi&lt;/a&gt;&amp;nbsp;extension.&lt;/p&gt;
&lt;p&gt;Today I was documenting some &lt;a href="http://www.puppet.org"&gt;Puppet&lt;/a&gt; code in a
wiki, and realized that I didn&amp;#8217;t have syntax highlighting. Well, fellow
Linux sysadmin and puppetmaster Jason Hancock was nice enough to post on
his blog (&lt;a href="http://geek.jasonhancock.com/2011/10/14/puppet-syntax-highlighting-geshi/"&gt;Puppet Syntax Highlighting with
GeSHi&lt;/a&gt;)
that he&amp;#8217;s developed a GeSHi language file for Puppet, available from
&lt;a href="https://github.com/jasonhancock/geshi-language-files"&gt;GitHub&lt;/a&gt;. Many&amp;nbsp;thanks!&lt;/p&gt;</summary><category term="GeSHi"></category><category term="mediawiki"></category><category term="PHP"></category><category term="puppet"></category><category term="wordpress"></category></entry><entry><title>Puppet problems with hostname in autosign.conf - Invalid pattern</title><link href="http://newblog.jasonantman.com/2009/10/puppet-problems-with-hostname-in-autosignconf-invalid-pattern/" rel="alternate"></link><updated>2009-10-14T14:45:00-04:00</updated><author><name>admin</name></author><id>tag:newblog.jasonantman.com,2009-10-14:2009/10/puppet-problems-with-hostname-in-autosignconf-invalid-pattern/</id><summary type="html">&lt;p&gt;In playing with Puppet (0.24.8 on clients and server) today (well,
building a new host) I came by a strange error when I ran puppet on the&amp;nbsp;client:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;err: Could not request certificate: Certificate retrieval failed: Invalid pattern css-storemanager
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The thing that was so strange is that &amp;#8220;css-storemanager&amp;#8221; is the name of
a host at my site, controlled by Puppet, but it has nothing to do with
the host I was building. They&amp;#8217;re different boxes, on different subnets,
in different rooms. One is a SunFire and the other is an &lt;span class="caps"&gt;HP&lt;/span&gt;&amp;nbsp;desktop.&lt;/p&gt;
&lt;p&gt;Google turned up nothing. Running puppetmasterd with &lt;code&gt;--debug --trace&lt;/code&gt;
yielded:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;info: Listening on port 8140
notice: Starting Puppet server version 0.24.8
notice: Allowing unauthenticated client ccf-hill019-12.example.edu(172.x.x.x) access to puppetca.getcert
/usr/lib/ruby/site_ruby/1.8/puppet/network/authstore.rb:289:in `parse&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet/network/authstore.rb:170:in `pattern=&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet/network/authstore.rb:151:in `initialize&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet/network/authstore.rb:80:in `new&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet/network/authstore.rb:80:in `store&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet/network/authstore.rb:20:in `allow&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet/network/handler/ca.rb:54:in `autosign?&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet/network/handler/ca.rb:51:in `each&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet/network/handler/ca.rb:51:in `autosign?&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet/network/handler/ca.rb:50:in `open&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet/network/handler/ca.rb:50:in `autosign?&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet/network/handler/ca.rb:112:in `getcert&amp;#39;
/usr/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `to_proc&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet/network/xmlrpc/processor.rb:52:in `call&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet/network/xmlrpc/processor.rb:52:in `protect_service&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet/network/xmlrpc/processor.rb:85:in `setup_processor&amp;#39;
/usr/lib/ruby/1.8/xmlrpc/server.rb:336:in `call&amp;#39;
/usr/lib/ruby/1.8/xmlrpc/server.rb:336:in `dispatch&amp;#39;
/usr/lib/ruby/1.8/xmlrpc/server.rb:323:in `each&amp;#39;
/usr/lib/ruby/1.8/xmlrpc/server.rb:323:in `dispatch&amp;#39;
/usr/lib/ruby/1.8/xmlrpc/server.rb:366:in `call_method&amp;#39;
/usr/lib/ruby/1.8/xmlrpc/server.rb:378:in `handle&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet/network/xmlrpc/processor.rb:44:in `process&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet/network/xmlrpc/webrick_servlet.rb:68:in `service&amp;#39;
/usr/lib/ruby/1.8/webrick/httpserver.rb:104:in `service&amp;#39;
/usr/lib/ruby/1.8/webrick/httpserver.rb:65:in `run&amp;#39;
/usr/lib/ruby/1.8/webrick/server.rb:173:in `start_thread&amp;#39;
/usr/lib/ruby/1.8/webrick/server.rb:162:in `start&amp;#39;
/usr/lib/ruby/1.8/webrick/server.rb:162:in `start_thread&amp;#39;
/usr/lib/ruby/1.8/webrick/server.rb:95:in `start&amp;#39;
/usr/lib/ruby/1.8/webrick/server.rb:92:in `each&amp;#39;
/usr/lib/ruby/1.8/webrick/server.rb:92:in `start&amp;#39;
/usr/lib/ruby/1.8/webrick/server.rb:23:in `start&amp;#39;
/usr/lib/ruby/1.8/webrick/server.rb:82:in `start&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet.rb:293:in `start&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet.rb:144:in `newthread&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet.rb:143:in `initialize&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet.rb:143:in `new&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet.rb:143:in `newthread&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet.rb:291:in `start&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet.rb:290:in `each&amp;#39;
/usr/lib/ruby/site_ruby/1.8/puppet.rb:290:in `start&amp;#39;
/usr/sbin/puppetmasterd:285
err: Invalid pattern css-storemanager
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After a bit of investigation into that trace, I found the following code
in &lt;code&gt;/usr/lib/ruby/site_ruby/1.8/puppet/network/authstore.rb&lt;/code&gt; starting on
line&amp;nbsp;242:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;            &lt;span class="c1"&gt;# Parse our input pattern and figure out what kind of allowal&lt;/span&gt;
            &lt;span class="c1"&gt;# statement it is.  The output of this is used for later matching.&lt;/span&gt;
            &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
                &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="sr"&gt;/^(\d+\.){1,3}\*$/&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;# an ip address with a &amp;#39;*&amp;#39; at the end&lt;/span&gt;
                    &lt;span class="vi"&gt;@name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;:ip&lt;/span&gt;
                    &lt;span class="n"&gt;match&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vg"&gt;$1&lt;/span&gt;
                    &lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;ary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

                    &lt;span class="n"&gt;mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;ary&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
                    &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;
                    &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;
                    &lt;span class="k"&gt;else&lt;/span&gt;
                        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="no"&gt;AuthStoreError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Invalid &lt;span class="caps"&gt;IP&lt;/span&gt; pattern %s&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
                    &lt;span class="k"&gt;end&lt;/span&gt;

                    &lt;span class="vi"&gt;@length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mask&lt;/span&gt;

                    &lt;span class="n"&gt;ary&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;
                    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;ary&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
                        &lt;span class="n"&gt;ary&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;end&lt;/span&gt;

                    &lt;span class="k"&gt;begin&lt;/span&gt;
                        &lt;span class="vi"&gt;@pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;IPAddr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ary&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;rescue&lt;/span&gt; &lt;span class="no"&gt;ArgumentError&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;detail&lt;/span&gt;
                        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="no"&gt;AuthStoreError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Invalid &lt;span class="caps"&gt;IP&lt;/span&gt; address pattern %s&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
                    &lt;span class="k"&gt;end&lt;/span&gt;
                &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="sr"&gt;/^([a-zA-Z][-\w]*\.)+[-\w]+$/&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;# a full hostname&lt;/span&gt;
                    &lt;span class="vi"&gt;@name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;:domain&lt;/span&gt;
                    &lt;span class="vi"&gt;@pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;munge_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="sr"&gt;/^\*(\.([a-zA-Z][-\w]*)){1,}$/&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;# *.domain.com&lt;/span&gt;
                    &lt;span class="vi"&gt;@name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;:domain&lt;/span&gt;
                    &lt;span class="vi"&gt;@pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;munge_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="vi"&gt;@pattern&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt; &lt;span class="c1"&gt;# take off the &amp;#39;*&amp;#39;&lt;/span&gt;
                    &lt;span class="vi"&gt;@length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@pattern&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;
                    &lt;span class="c1"&gt;# Else, use the IPAddr class to determine if we&amp;#39;ve got a&lt;/span&gt;
                    &lt;span class="c1"&gt;# valid &lt;span class="caps"&gt;IP&lt;/span&gt; address.&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=~&lt;/span&gt; &lt;span class="sr"&gt;/\/(\d+)$/&lt;/span&gt;
                        &lt;span class="vi"&gt;@length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vg"&gt;$1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;end&lt;/span&gt;
                    &lt;span class="k"&gt;begin&lt;/span&gt;
                        &lt;span class="vi"&gt;@pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;IPAddr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;rescue&lt;/span&gt; &lt;span class="no"&gt;ArgumentError&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;detail&lt;/span&gt;
                        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="no"&gt;AuthStoreError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Invalid pattern %s&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
                    &lt;span class="k"&gt;end&lt;/span&gt;
                    &lt;span class="vi"&gt;@name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;:ip&lt;/span&gt;
                &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Following the trace back, I took a look at
&lt;code&gt;/usr/lib/ruby/site_ruby/1.8/puppet/network/handler/ca.rb&lt;/code&gt; starting at
line&amp;nbsp;50:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;            &lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;Puppet&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="ss"&gt;:Network&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;AuthStore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;
            &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;autosign&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
                &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
                    &lt;span class="k"&gt;next&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=~&lt;/span&gt; &lt;span class="sr"&gt;/^\s*#/&lt;/span&gt;
                    &lt;span class="k"&gt;next&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=~&lt;/span&gt; &lt;span class="sr"&gt;/^\s*$/&lt;/span&gt;
                    &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;allow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chomp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After looking at this, it clicked that it must be what evaluates
autosign.conf. Taking a look at mine, one line stood out: a line
containing only &amp;#8220;css-storemanager&amp;#8221;, not a &lt;span class="caps"&gt;FQDN&lt;/span&gt; like all the rest. The
parse() function in authstore.rb only accepts &lt;span class="caps"&gt;IP&lt;/span&gt; addresses and FQDNs (or
&lt;span class="caps"&gt;IP&lt;/span&gt; addresses ending in a wildcard, or wildcard FQDNs). It appears to
choke on hostnames (a string that doesn&amp;#8217;t match an &lt;span class="caps"&gt;FQDN&lt;/span&gt; or &lt;span class="caps"&gt;IP&lt;/span&gt;).
Interestingly, it also evaluates in order, and stops evaluating
autosign.conf once it finds a match. So, if you&amp;#8217;re a Bad Person like me,
and left autosign turned on for all of your hosts, you wouldn&amp;#8217;t notice
this until you try and build a new&amp;nbsp;box.&lt;/p&gt;
&lt;p&gt;To solve this, just remove any offending lines from&amp;nbsp;autosign.conf.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve filed a bug report on the Puppet Trac: &lt;a href="http://projects.reductivelabs.com/issues/2723"&gt;Issue
2723&lt;/a&gt;.&lt;/p&gt;</summary><category term="autosign.conf"></category><category term="hostname"></category><category term="puppet"></category></entry><entry><title>Building a Rebuild-able Site</title><link href="http://newblog.jasonantman.com/2009/05/building-a-rebuild-able-site/" rel="alternate"></link><updated>2009-05-06T08:42:00-04:00</updated><author><name>admin</name></author><id>tag:newblog.jasonantman.com,2009-05-06:2009/05/building-a-rebuild-able-site/</id><summary type="html">&lt;p&gt;At $&lt;span class="caps"&gt;WORK&lt;/span&gt;, my group runs about two dozen servers that provide services
for over 60,000 users. They&amp;#8217;re a mix of Windows and Linux, with some old
Solaris stuff thrown in there. The one thing they have in common is
they&amp;#8217;re all hand-built, hand-configured, and old. They&amp;#8217;ve been around
for a while. At the moment, we don&amp;#8217;t even have an adequate backup&amp;nbsp;system.&lt;/p&gt;
&lt;p&gt;So, being the closest thing to a SysAdmin we have (my official title is
still Student Systems Programmer), it&amp;#8217;s my job to build a new
installation, configuration and backup infrastructure. We&amp;#8217;ve already
standardized on &lt;a href="http://www.centos.org"&gt;CentOS&lt;/a&gt; as a University-wide
distro, and have a local full mirror, so I don&amp;#8217;t need to choose a
distro. I do, however, have to plan the installation and backup
architecture. The main requirements&amp;nbsp;are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Lowest overall time for bare-metal recovery to a working&amp;nbsp;system.&lt;/li&gt;
&lt;li&gt;Ease of use, as people other than myself will need to administer it
    (so they should be able to do so from a cheat sheet in the&amp;nbsp;wiki).&lt;/li&gt;
&lt;li&gt;Repeatability - it should be easy and intuitive to make an
    almost-exact-copy of a&amp;nbsp;machine.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I started a thread a few days ago on the &lt;span class="caps"&gt;SAGE&lt;/span&gt; mailing list, which you
can find
&lt;a href="http://mailman.sage.org/pipermail/sage-members/2009/msg00447.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At the moment, it looks like the general idea that I&amp;#8217;m going with is to
use &lt;a href="http://fedoraproject.org/wiki/Anaconda/Kickstart"&gt;Kickstart&lt;/a&gt; to
install the systems, using a basic and minimal Kickstart file. Basic
package selection (minimalist) with just what&amp;#8217;s needed to configure the
system with a hostname and network settings for the management &lt;span class="caps"&gt;VLAN&lt;/span&gt;.
I&amp;#8217;ll then have Kickstart install and configure a configuration
management package - I&amp;#8217;m leaning towards
&lt;a href="http://reductivelabs.com/products/puppet/"&gt;Puppet&lt;/a&gt; over
&lt;a href="http://www.cfengine.org/"&gt;Cfengine&lt;/a&gt; and am starting testing. The config
management software will handle all of the customization for the system
(everything different from the base generic Kickstart install) so it&amp;#8217;s
all kept under the control of config management from step&amp;nbsp;1.&lt;/p&gt;
&lt;p&gt;The final part is a backup system, mainly for whatever eventually -
whether out of human error or simple laziness - ends up out of the
config management system&amp;#8217;s control. Our previous &lt;span class="caps"&gt;SA&lt;/span&gt; had settled on
&lt;a href="http://www.zmanda.com/"&gt;Zmanda&lt;/a&gt;, the paid version of
&lt;a href="http://www.amanda.org/"&gt;Amanda&lt;/a&gt;, which comes with specific plugins for
MySQL and &lt;span class="caps"&gt;MSSQL&lt;/span&gt;. I&amp;#8217;m also looking at &lt;a href="http://www.bacula.org"&gt;Bacula&lt;/a&gt;,
mainly because of its&amp;#8217; advanced features, scheduling (especially the new
scheduling in Bacula 3) and&amp;nbsp;scalability.&lt;/p&gt;
&lt;p&gt;The beauty that I see in having Kickstart do something minimal and then
letting Puppet handle the rest is that (especially since we&amp;#8217;ve
standardized on SunFire X4100&amp;#8217;s with identical configurations) I can
kickstart and rack up a few spare machines, and to get them up and
running all I need to do is power them up (iLOM) and tell Puppet what to
make&amp;nbsp;them.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m currently starting testing of both Puppet itself and getting
Kickstart to start the puppet install and daemon (instructions from
&lt;a href="http://watzmann.net/blog/index.php?cat=21"&gt;David Lutterkort&amp;#8217;s blog (Red Hat software
engineer)&lt;/a&gt;). We&amp;#8217;ll see how
everything&amp;nbsp;goes&amp;#8230;&lt;/p&gt;</summary><category term="backup"></category><category term="configuration"></category><category term="kickstart"></category><category term="linux"></category><category term="puppet"></category><category term="recovery"></category><category term="work"></category></entry></feed>